<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Vue-Cli</title>
      <link href="/2022/09/02TEMP/%E5%89%8D%E7%AB%AF_Vue_Vue-Cli/976189ad/"/>
      <url>/2022/09/02TEMP/%E5%89%8D%E7%AB%AF_Vue_Vue-Cli/976189ad/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Vue-Cli 官方文档：<a href="https://cli.vuejs.org/zh/guide/">https://cli.vuejs.org/zh/guide/</a></p></blockquote><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="安装-CLI"><a href="#安装-CLI" class="headerlink" title="安装 CLI"></a>安装 CLI</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli</span><br><span class="line"><span class="comment"># OR</span></span><br><span class="line">yarn global add @vue/cli</span><br></pre></td></tr></table></figure><h2 id="升级-CLI"><a href="#升级-CLI" class="headerlink" title="升级 CLI"></a>升级 CLI</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm update -g @vue/cli</span><br><span class="line"><span class="comment"># OR</span></span><br><span class="line">yarn global upgrade --latest @vue/cli</span><br></pre></td></tr></table></figure><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue create hello-world</span><br></pre></td></tr></table></figure><h2 id="创建项目-图形化"><a href="#创建项目-图形化" class="headerlink" title="创建项目(图形化)"></a>创建项目(图形化)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue ui</span><br></pre></td></tr></table></figure><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><p>├── node_modules<br>├── public<br>│   ├── favicon.ico: 页签图标<br>│   └── index.html: 主页面<br>├── src<br>│   ├── assets: 存放静态资源<br>│   │   └── logo.png<br>│   │── component: 存放组件<br>│   │   └── HelloWorld.vue<br>│   │── App.vue: 汇总所有组件<br>│   │── main.js: 入口文件<br>├── .gitignore: git版本管制忽略的配置<br>├── babel.config.js: babel的配置文件<br>├── package.json: 应用包配置文件<br>├── README.md: 应用描述文件<br>├── package-lock.json：包版本控制文件</p><h1 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h1><p>组件是用来实现局部(特定)功能效果的<strong>代码集合</strong></p><h2 id="非单文件组件"><a href="#非单文件组件" class="headerlink" title="非单文件组件"></a>非单文件组件</h2><h3 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h3><ol><li>定义组件(创建组件)</li><li>注册组件</li><li>使用组件(写组件标签)</li></ol><h4 id="定义组件"><a href="#定义组件" class="headerlink" title="定义组件"></a>定义组件</h4><p>使用 <code>Vue.extend(options)</code> 创建<br>其中 options 和 new Vue(options) 时传入的那个 options <strong>几乎</strong>一样，但也有点区别:</p><ol><li><code>el</code> 不要写 ——— 最终所有的组件都要经过一个vm的管理，由vm中的el决定服务哪个容器。</li><li><code>data</code> 必须写成函数 ———— 避免组件被复用时，数据存在<strong>引用关系</strong>。</li></ol><p>补充：使用 <code>template</code> 可以配置组件结构。</p><h4 id="注册组件"><a href="#注册组件" class="headerlink" title="注册组件"></a>注册组件</h4><ol><li>局部注册：new Vue 的时候传入 <code>components</code> 选项</li><li>全局注册：<code>Vue.component(&#39;组件名&#39;,组件)</code></li></ol><h4 id="使用组件"><a href="#使用组件" class="headerlink" title="使用组件"></a>使用组件</h4><p><code>&lt;组件名&gt;&lt;/组件名&gt;</code></p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><h4 id="组件命名"><a href="#组件命名" class="headerlink" title="组件命名"></a>组件命名</h4><p>一个单词组成：</p><ol><li>第一种写法(首字母小写)：school</li><li>第二种写法(首字母大写)：School</li></ol><p>多个单词组成：</p><ol><li>第一种写法(kebab-case命名)：my-school</li><li>第二种写法(CamelCase命名)：MySchool (<strong>需要Vue脚手架支持</strong>)</li></ol><p>补充：</p><ol><li>组件名尽可能回避HTML中已有的元素名称，例如：h2、H2都不行。</li><li>可以使用name配置项指定组件在开发者工具中呈现的名字。</li></ol><h4 id="组件标签"><a href="#组件标签" class="headerlink" title="组件标签"></a>组件标签</h4><p>第一种写法：<code>&lt;组件名&gt;&lt;/组件名&gt;</code></p><p>第二种写法：<code>&lt;组件名/&gt;</code></p><p>备注：不用使用脚手架时，<code>&lt;组件名/&gt;</code>单标签会导致后续组件不能渲染。</p><h4 id="组件简写"><a href="#组件简写" class="headerlink" title="组件简写"></a>组件简写</h4><p>const cpn = Vue.extend(options) 可简写为： const cpn = options</p><h3 id="组件嵌套"><a href="#组件嵌套" class="headerlink" title="组件嵌套"></a>组件嵌套</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>组件的嵌套<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">//定义student组件</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">const student = Vue.extend(&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">name:&#x27;student&#x27;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">template:`</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>学生姓名：</span><span class="template-variable">&#123;&#123;<span class="name">name</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>学生年龄：</span><span class="template-variable">&#123;&#123;<span class="name">age</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">`,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">data()&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">return &#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">name:&#x27;Frank&#x27;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">age:18</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;)</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">//定义school组件</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">const school = Vue.extend(&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">name:&#x27;school&#x27;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">template:`</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校名称：</span><span class="template-variable">&#123;&#123;<span class="name">name</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校地址：</span><span class="template-variable">&#123;&#123;<span class="name">address</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">student</span>&gt;</span><span class="tag">&lt;/<span class="name">student</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">`,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">data()&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">return &#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">name:&#x27;郑州大学&#x27;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">address:&#x27;郑州&#x27;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">//注册组件（局部）</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">components:&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">student</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;)</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">//定义hello组件</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">const hello = Vue.extend(&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">template:`<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">msg</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span>`,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">data()&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">return &#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">msg:&#x27;Hello World!&#x27;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;)</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">//定义app组件</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">const app = Vue.extend(&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">template:`</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">hello</span>&gt;</span><span class="tag">&lt;/<span class="name">hello</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">school</span>&gt;</span><span class="tag">&lt;/<span class="name">school</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">`,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">components:&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">school,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">hello</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;)</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">//创建vm</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">new Vue(&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">template:&#x27;<span class="tag">&lt;<span class="name">app</span>&gt;</span><span class="tag">&lt;/<span class="name">app</span>&gt;</span>&#x27;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">el:&#x27;#root&#x27;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">//注册组件（局部）</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">components:&#123;app&#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;)</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="单文件组件"><a href="#单文件组件" class="headerlink" title="单文件组件"></a>单文件组件</h2><p>文件扩展名为 <code>.vue</code> 的 就是 <code>single-file components</code> (单文件组件) </p><h2 id="VueComponent"><a href="#VueComponent" class="headerlink" title="VueComponent"></a>VueComponent</h2><ol><li>组件实例对象(vc)，本质是一个名为 <strong>VueComponent 的构造函数</strong>，是 <code>Vue.extend</code> 生成的。</li><li>只需要写 <code>&lt;组件名/&gt;</code> 或 <code>&lt;组件名&gt;&lt;/组件名&gt;</code> ，Vue 解析时会帮我们创建 对应组件的实例对象，即Vue帮我们执行的：<code>new VueComponent(options)</code>。</li><li>关于this指向：<ol><li>组件配置中：data函数、methods中的函数、watch中的函数、computed中的函数 它们的 this 均是 <strong>VueComponent实例对象</strong>。</li><li>new Vue(options)配置中：data函数、methods中的函数、watch中的函数、computed中的函数 它们的 this 均是 <strong>Vue实例对象</strong>。</li></ol></li><li>特别注意：每次调用Vue.extend，<strong>返回的都是一个全新的</strong> <code>VueComponent</code> ！</li><li>一个重要的内置关系：<code>VueComponent.prototype.__proto__ === Vue.prototype</code>，为什么要有这个关系：让组件实例对象（vc）可以访问到 Vue原型上的属性、方法。</li></ol><p><img src="https://raw.githubusercontent.com/HaloBoys/PicGoMyDevice/main/img/20220904221803.png" alt="20220904221803"></p><h1 id="render-函数"><a href="#render-函数" class="headerlink" title="render 函数"></a>render 函数</h1><p>因为 <code>vue.runtime.xxx.js</code> 没有模板解析器，所以不能使用 <code>template</code> 配置项，需要使用 <code>render</code> 函数接收到的 <code>createElement</code> 函数去指定具体内容。</p><p>关于不同版本的Vue：</p><p>vue.js 与 vue.runtime.xxx.js 的区别：</p><ol><li>vue.js 是完整版的 Vue，包含：核心功能+模板解析器。</li><li>vue.runtime.xxx.js 是运行版的 Vue，只包含：核心功能；没有模板解析器。</li></ol><h1 id="vue-config-js"><a href="#vue-config-js" class="headerlink" title="vue.config.js"></a>vue.config.js</h1><p>使用 <code>vue inspect &gt; output.js</code> 命令可以查看到 Vue脚手架的<strong>默认配置</strong>。<br>使用 vue.config.js 可以对脚手架进行<strong>个性化定制</strong>，详情见：<a href="https://cli.vuejs.org/zh/config/">https://cli.vuejs.org/zh/config/</a></p><h1 id="ref-属性"><a href="#ref-属性" class="headerlink" title="ref 属性"></a>ref 属性</h1><p>ref 属性被用来给<strong>元素</strong>或<strong>子组件</strong>注册引用信息（id的替代者）<br>ref 属性应用在<strong>html标签</strong>上获取的是真实DOM元素，应用在<strong>组件标签</strong>上是组件实例对象</p><p>使用：</p><p>html标签：<code>&lt;h1 ref=&quot;xxx&quot;&gt;.....&lt;/h1&gt;</code><br>组件标签：<code>&lt;组件名 ref=&quot;xxx&quot;&gt;&lt;/组件名&gt;</code></p><p>获取：</p><p><code>this.$refs.xxx</code></p><h1 id="props"><a href="#props" class="headerlink" title="props"></a>props</h1><p>props功能：让组件接收外部传过来的数据</p><h2 id="传递数据"><a href="#传递数据" class="headerlink" title="传递数据"></a>传递数据</h2><p><code>&lt;组件名称 属性名=&quot;属性值&quot;/&gt;</code></p><h2 id="接收数据"><a href="#接收数据" class="headerlink" title="接收数据"></a>接收数据</h2><ol><li>第一种方式（只接收）：<code>props:[&#39;属性名&#39;]</code></li><li>第二种方式（限制类型）：<code>props:&#123;属性名:String&#125;</code></li><li>第三种方式（限制类型、限制必要性、指定默认值）：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 注意 required 属性和 default属性冲突</span></span><br><span class="line"><span class="attr">props</span>:&#123;</span><br><span class="line">   属性名:&#123;</span><br><span class="line">   <span class="attr">type</span>: <span class="title class_">String</span>, <span class="comment">//类型</span></span><br><span class="line">   <span class="attr">required</span>: <span class="literal">true</span>, <span class="comment">//必要性</span></span><br><span class="line">   <span class="attr">default</span>: <span class="string">&#x27;属性值&#x27;</span> <span class="comment">//默认值</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="props-是只读的"><a href="#props-是只读的" class="headerlink" title="props 是只读的"></a>props 是只读的</h2><p>props 是只读的，Vue底层会监测你对 props 的修改，如果进行了修改，就会发出警告。<br>若业务需求确实需要修改，那么请<strong>复制 props的内容到 data中</strong>，然后去修改data中的数据。</p><h1 id="自定义事件"><a href="#自定义事件" class="headerlink" title="自定义事件"></a>自定义事件</h1><p>自定义事件是一种组件间通信的方式，适用于：<strong>子组件向父组件</strong>传递数据<br>使用场景：A 是父组件，B 是子组件，B 想给 A 传数据，那么就要在 A 中给 B 绑定自定义事件（事件的回调在 A 中）。</p><h2 id="绑定自定义事件"><a href="#绑定自定义事件" class="headerlink" title="绑定自定义事件"></a>绑定自定义事件</h2><h3 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h3><p>在父组件中：</p><p><code>&lt;组件名 @自定义事件事件名称=&quot;事件处理程序&quot;/&gt;</code>  或  <code>&lt;组件名 v-on:自定义事件事件名称=&quot;事件处理程序&quot;/&gt;</code></p><h3 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h3><p>在父组件中：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;组件名 ref=<span class="string">&quot;ref自定义属性&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line"><span class="title function_">mounted</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="comment">// 通过 `this.$refs.ref自定义属性.$on(&#x27;自定义事件事件名称&#x27;,回调)`绑定自定义事件时，**回调**要么配置在 `methods` 中，要么用 `箭头函数` 否则 **this 指向会出问题**！</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">ref</span>自定义属性.$on(<span class="string">&#x27;自定义事件事件名称&#x27;</span>,<span class="variable language_">this</span>.事件处理程序)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p>若想让自定义事件只能触发一次，可以使用 <code>once</code> 修饰符，或 <code>$once</code> 方法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">mounted</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">ref</span>自定义属性.$once(<span class="string">&#x27;自定义事件事件名称&#x27;</span>,<span class="variable language_">this</span>.事件处理程序)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>组件上也可以绑定原生DOM事件，需要使用<code>native</code>修饰符：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;组件名 @自定义事件事件名称=<span class="string">&quot;事件处理程序&quot;</span> @click.<span class="property">native</span> = <span class="string">&quot;事件处理程序&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><h2 id="触发自定义事件"><a href="#触发自定义事件" class="headerlink" title="触发自定义事件"></a>触发自定义事件</h2><p>在子组件事件处理程序中调用 <code>$emit</code> 方法：</p><p><code>this.$emit(&#39;自定义事件事件的名称&#39;,传递给父组件的数据)</code>        </p><h2 id="解绑自定义事件"><a href="#解绑自定义事件" class="headerlink" title="解绑自定义事件"></a>解绑自定义事件</h2><h3 id="off-方法"><a href="#off-方法" class="headerlink" title="$off 方法"></a>$off 方法</h3><ol><li>解绑单个事件：<code>this.$off(&#39;事件名称&#39;)</code></li><li>解绑多个事件：<code>this.$off([&#39;事件名称1&#39;,&#39;事件名称2&#39;])</code></li><li>解绑全部事件：<code>this.$off()</code></li></ol><h3 id="销毁组件"><a href="#销毁组件" class="headerlink" title="销毁组件"></a>销毁组件</h3><p>如果一个组件调用了 <code>$destory</code> 方法，那么这个组件身上的<strong>自定义事件</strong>也就不奏效了。</p><h1 id="全局事件总线（GlobalEventBus）"><a href="#全局事件总线（GlobalEventBus）" class="headerlink" title="全局事件总线（GlobalEventBus）"></a>全局事件总线（GlobalEventBus）</h1><p>全局事件总线是一种组件间的<strong>通信方式</strong>，<strong>适用于任意组件间通信</strong>。</p><p><img src="https://raw.githubusercontent.com/HaloBoys/PicGoMyDevice/main/img/%E5%85%A8%E5%B1%80%E4%BA%8B%E4%BB%B6%E6%80%BB%E7%BA%BF.png" alt="全局事件总线"></p><h2 id="安装全局事件总线"><a href="#安装全局事件总线" class="headerlink" title="安装全局事件总线"></a>安装全局事件总线</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.js</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">   ......</span><br><span class="line">   <span class="title function_">beforeCreate</span>(<span class="params"></span>) &#123;</span><br><span class="line">   <span class="comment">//安装全局事件总线，$bus 就是当前应用的 vm</span></span><br><span class="line">   <span class="title class_">Vue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">$bus</span> = <span class="variable language_">this</span></span><br><span class="line">   &#125;,</span><br><span class="line">   ......</span><br><span class="line">&#125;) </span><br></pre></td></tr></table></figure><h2 id="使用事件总线"><a href="#使用事件总线" class="headerlink" title="使用事件总线"></a>使用事件总线</h2><h3 id="接收数据-1"><a href="#接收数据-1" class="headerlink" title="接收数据"></a>接收数据</h3><p>A 组件想接收数据，则在 A 组件中给 <code>$bus</code> <strong>绑定自定义事件</strong>，事件的回调留在 A 组件自身。</p><p>语法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">methods</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="title function_">demo</span>(<span class="params">data</span>)&#123;......&#125;</span><br><span class="line">&#125;</span><br><span class="line">......</span><br><span class="line"><span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">$bus</span>.$on(<span class="string">&#x27;xxxx&#x27;</span>,<span class="variable language_">this</span>.<span class="property">demo</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>演示代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>A 组件<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&quot;A&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">// 事件的回调留在 A 组件自身</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">getData</span>(<span class="params">data</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;我获取到了数据：&quot;</span>, data);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">// 在 A 组件中给 `$bus` 绑定自定义事件</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">this</span>.<span class="property">$bus</span>.$on(<span class="string">&quot;my-event&quot;</span>, <span class="variable language_">this</span>.<span class="property">getData</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="提供数据"><a href="#提供数据" class="headerlink" title="提供数据"></a>提供数据</h3><p>语法：</p><p><code>this.$bus.$emit(&#39;xxxx&#39;,数据)</code></p><p>演示代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>B 组件<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sendData&quot;</span>&gt;</span>传递数据给A组件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&quot;B&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">name</span>: <span class="string">&quot;张三&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">sendData</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">$bus</span>.$emit(<span class="string">&#x27;my-event&#x27;</span>,<span class="variable language_">this</span>.<span class="property">name</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">beforeDestroy</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">this</span>.<span class="property">$bus</span>.$off(<span class="string">&quot;my-event&quot;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>最好在 <code>beforeDestroy</code> 钩子中，用 <code>$off</code> 去解绑当前组件所用到的事件。(如上面演示代码：)</p><h1 id="消息订阅与发布"><a href="#消息订阅与发布" class="headerlink" title="消息订阅与发布"></a>消息订阅与发布</h1><p>消息订阅与发布是一种组件间通信的方式，适用于<strong>任意组件间通信</strong>，这个方案依赖第三方库，推荐使用：<code>pubsub-js</code><br>pubsub-js github 仓库：<a href="https://github.com/mroderick/PubSubJS">https://github.com/mroderick/PubSubJS</a></p><h2 id="PubSub-使用"><a href="#PubSub-使用" class="headerlink" title="PubSub 使用"></a>PubSub 使用</h2><h3 id="安装-PubSub"><a href="#安装-PubSub" class="headerlink" title="安装 PubSub"></a>安装 PubSub</h3><p><code>npm i pubsub-js</code></p><h3 id="接收数据-2"><a href="#接收数据-2" class="headerlink" title="接收数据"></a>接收数据</h3><p>A 组件想接收数据，则在 A 组件中订阅消息，<strong>订阅的回调留在A组件自身</strong>。</p><ol><li>引入<code>import pubsub from &#39;pubsub-js&#39;</code></li><li>使用 <code>pubsub.subscribe</code> 方法订阅消息<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">methods</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="title function_">demo</span>(<span class="params">subName,data</span>)&#123;......&#125;</span><br><span class="line">&#125;</span><br><span class="line">......</span><br><span class="line"><span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">pubId</span> = pubsub.<span class="title function_">subscribe</span>(<span class="string">&#x27;xxx&#x27;</span>,<span class="variable language_">this</span>.<span class="property">demo</span>) <span class="comment">//订阅消息</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>演示代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// A.vue</span></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>A 组件<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> pubsub <span class="keyword">from</span> <span class="string">&quot;pubsub-js&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&quot;A&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">getData</span>(<span class="params">subName, data</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;我获取到了数据：&quot;</span>, subName, data);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// this.$bus.$on(&quot;my-event&quot;, this.getData);</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">this</span>.<span class="property">pubId</span> = pubsub.<span class="title function_">subscribe</span>(<span class="string">&quot;my-sub&quot;</span>, <span class="variable language_">this</span>.<span class="property">getData</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">beforeDestroy</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// this.$bus.$off(&quot;my-event&quot;)</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    pubsub.<span class="title function_">unsubscribe</span>(<span class="variable language_">this</span>.<span class="property">pubId</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>最好在beforeDestroy钩子中，用<code>pubsub.unsubscribe(pubId)</code>去取消订阅。(如上面演示代码：)</p><h3 id="提供数据-1"><a href="#提供数据-1" class="headerlink" title="提供数据"></a>提供数据</h3><p>B 组件想提供数据，则在 B 组件中发布消息并携带数据。</p><ol><li>引入<code>import pubsub from &#39;pubsub-js&#39;</code></li><li>提供数据：<code>pubsub.publish(&#39;xxx&#39;,数据)</code></li></ol><p>演示代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// B.vue</span></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>B 组件<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sendData&quot;</span>&gt;</span>传递数据给A组件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> pubsub <span class="keyword">from</span> <span class="string">&quot;pubsub-js&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&quot;B&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">name</span>: <span class="string">&quot;张三&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">sendData</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// this.$bus.$emit(&#x27;my-event&#x27;,this.name)</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      pubsub.<span class="title function_">publish</span>(<span class="string">&quot;my-sub&quot;</span>, <span class="variable language_">this</span>.<span class="property">name</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h1 id="mixin-混入"><a href="#mixin-混入" class="headerlink" title="mixin 混入"></a>mixin 混入</h1><p>功能：可以把多个组件<strong>共用的配置</strong>提取成一个混入对象</p><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><h3 id="定义混入"><a href="#定义混入" class="headerlink" title="定义混入"></a>定义混入</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// mixin.js</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>)&#123;...&#125;,</span><br><span class="line">  <span class="attr">methods</span>:&#123;...&#125;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用混入："><a href="#使用混入：" class="headerlink" title="使用混入："></a>使用混入：</h3><p>全局混入</p><p>使用​全局混入时需格外小心！一旦使用全局混入，它将影响每一个之后创建的 Vue 实例。</p><p><code>Vue.mixin(xxx)</code></p><p>局部混入</p><ol><li>使用 <code>import</code> 导入混入</li><li><code>mixins:[&#39;xxx&#39;]</code> // mixins 与 data 同级</li></ol><h2 id="选项合并"><a href="#选项合并" class="headerlink" title="选项合并"></a>选项合并</h2><p>当组件和混入对象含有同名选项时，这些选项将以恰当的方式进行<strong>合并</strong></p><ol><li>数据对象（data）在内部会进行递归合并，并在发生冲突时<strong>以组件数据优先</strong>。</li><li>同名<strong>钩子函数</strong>将合并为一个数组，因此<strong>都将被调用</strong>。另外，混入对象的钩子将在组件自身钩子<strong>之前</strong>调用。</li></ol><h1 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h1><p>插件用于增强 Vue</p><p>本质：包含 <strong>install 方法</strong> 的一个对象，install 的第一个参数是 Vue，第二个以后的参数是插件使用者<strong>传递的数据</strong>。</p><h2 id="定义插件"><a href="#定义插件" class="headerlink" title="定义插件"></a>定义插件</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// plugins.js</span></span><br><span class="line"></span><br><span class="line">对象.<span class="property">install</span> = <span class="keyword">function</span> (<span class="params">Vue, options</span>) &#123;</span><br><span class="line">   <span class="comment">// 1. 添加全局过滤器</span></span><br><span class="line">   <span class="title class_">Vue</span>.<span class="title function_">filter</span>(....)</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 2. 添加全局指令</span></span><br><span class="line">   <span class="title class_">Vue</span>.<span class="title function_">directive</span>(....)</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 3. 配置全局混入(合)</span></span><br><span class="line">   <span class="title class_">Vue</span>.<span class="title function_">mixin</span>(....)</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 4. 添加实例方法</span></span><br><span class="line">   <span class="title class_">Vue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">$myMethod</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;...&#125;</span><br><span class="line">   <span class="title class_">Vue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">$myProperty</span> = xxxx</span><br><span class="line"></span><br><span class="line">   <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用插件"><a href="#使用插件" class="headerlink" title="使用插件"></a>使用插件</h2><p>通过全局方法 <code>Vue.use()</code> 使用插件</p><h1 id="组件通信"><a href="#组件通信" class="headerlink" title="组件通信"></a>组件通信</h1><h2 id="父传子"><a href="#父传子" class="headerlink" title="父传子"></a>父传子</h2><p>props</p><h2 id="子传父"><a href="#子传父" class="headerlink" title="子传父"></a>子传父</h2><p>函数传值</p><ol><li>预先在父组件中定义一个函数，通过 props 传递给子组件</li><li>子组件接收函数，在合适的时机将数据以参数的形式传递给函数调用</li></ol><p>$emit 自定义事件</p><p>$parent/$children 与 ref</p><h2 id="兄弟传兄弟"><a href="#兄弟传兄弟" class="headerlink" title="兄弟传兄弟"></a>兄弟传兄弟</h2><h2 id="任意组件通信"><a href="#任意组件通信" class="headerlink" title="任意组件通信"></a>任意组件通信</h2><p>全局事件总线</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue 基础篇</title>
      <link href="/2022/08/27TEMP/%E5%89%8D%E7%AB%AF_Vue_Vue%E5%9F%BA%E7%A1%80%E7%AF%87/976189ad/"/>
      <url>/2022/08/27TEMP/%E5%89%8D%E7%AB%AF_Vue_Vue%E5%9F%BA%E7%A1%80%E7%AF%87/976189ad/</url>
      
        <content type="html"><![CDATA[<h1 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h1><blockquote><p>官方文档</p><ul><li>Vue2.X：<a href="https://v2.cn.vuejs.org/v2/guide/">https://v2.cn.vuejs.org/v2/guide/</a></li><li>Vue3.X：<a href="https://staging-cn.vuejs.org/guide/introduction.html">https://staging-cn.vuejs.org/guide/introduction.html</a></li></ul></blockquote><ol><li>采用<strong>组件化模式</strong>，提高代码复用率、且让代码更好维护。</li><li><strong>声明式编码</strong>，让编码人员无需直接操作DOM,提高开发效率。</li></ol><h1 id="初识"><a href="#初识" class="headerlink" title="初识"></a>初识</h1><ol><li>想让Vue工作，就必须创建一个Vue实例，且要传入一个配置对象；</li><li>root 容器里的代码依然符合html规范，只不过混入了一些特殊的Vue语法；</li><li>root 容器里的代码被称为 <code>Vue模板</code> ；</li><li>Vue实例 和 容器是<strong>一一对应的关系</strong>；</li><li>真实开发中只有一个Vue实例，并且会配合着组件一起使用；</li><li>Mustache 语法内是一个 <code>js表达式</code>，可以自动读取到data中的所有属性；</li><li>一旦data中的数据发生改变，那么模板中用到该数据的地方也会自动更新；</li></ol><p>拓展：el与data的两种写法</p><p>el 的两种写法</p><ol><li>new Vue 时候配置 <code>el</code> 属性。</li><li>先创建Vue实例，随后再通过 <code>实例名称.$mount(&#39;root&#39;)</code> 指定 <code>el</code> 的值</li></ol><p>data 的两种写法</p><ol><li>对象式</li><li>函数式（Vue 组件化中必须使用函数式，否则会报错。）</li></ol><p>原则：由Vue管理的函数，一定<strong>不要写箭头函数</strong>，一旦写了箭头函数，this 就不再是 Vue实例 了</p><h1 id="模板语法"><a href="#模板语法" class="headerlink" title="模板语法"></a>模板语法</h1><h2 id="插值"><a href="#插值" class="headerlink" title="插值"></a>插值</h2><p>功能：用于解析 <code>标签体</code> 内容。<br>写法：<code>&#123;&#123;xxx&#125;&#125;</code>, <code>xxx</code> 是 <code>js表达式</code> ，且可以直接读取到data中的所有属性。</p><h1 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h1><h2 id="内置指令"><a href="#内置指令" class="headerlink" title="内置指令"></a>内置指令</h2><p>文档：<a href="https://v2.cn.vuejs.org/v2/api/#%E6%8C%87%E4%BB%A4">https://v2.cn.vuejs.org/v2/api/#%E6%8C%87%E4%BB%A4</a></p><p>功能：用于<code>解析标签</code>（包括：标签属性、标签体内容、绑定事件….)<br>写法：vue 中有很多指令，以 <code>v-xxx</code> 开头</p><h3 id="v-bind"><a href="#v-bind" class="headerlink" title="v-bind"></a>v-bind</h3><h3 id="v-model"><a href="#v-model" class="headerlink" title="v-model"></a>v-model</h3><h3 id="v-text"><a href="#v-text" class="headerlink" title="v-text"></a>v-text</h3><p>作用：向其所在的节点中渲染<strong>文本内容</strong>。<br>与插值语法的区别：<code>v-text</code> 会<strong>替换</strong>掉节点中的内容（不识别 html结构），则不会。</p><h3 id="v-html"><a href="#v-html" class="headerlink" title="v-html"></a>v-html</h3><p>作用：向指定节点中渲染<strong>包含html结构的内容</strong>。<br>与插值语法的区别：</p><ol><li>v-html会替换掉节点中所有的内容，则不会。</li><li>v-html可以识别html结构。</li></ol><p>严重注意：v-html有安全性问题！</p><ol><li>在网站上动态渲染任意HTML是非常危险的，容易<code>导致XSS攻击</code>。</li><li>一定要在<strong>可信</strong>的内容上使用v-html，永不要用在用户提交的内容上！</li></ol><h3 id="v-cloak"><a href="#v-cloak" class="headerlink" title="v-cloak"></a>v-cloak</h3><p>v-cloak 本质是一个特殊属性，Vue实例创建完毕并接管容器后，会<strong>删掉</strong>v-cloak属性。</p><p>应用场景：使用 css 配合 v-cloak 可以解决网速慢时页面展示出  未解析的问题。</p><ol><li>将可能出现延迟渲染的 DOM 结构添加 v-cloak 指令</li><li>在样式中设置：<code>[v-cloak]&#123;display: none&#125;</code></li></ol><h3 id="v-once"><a href="#v-once" class="headerlink" title="v-once"></a>v-once</h3><p>v-once 所在节点在初次动态渲染后，就<strong>视为静态内容</strong>了。以后数据的改变不会引起 v-once 所在结构的更新，可以用于优化性能。</p><h3 id="v-pre"><a href="#v-pre" class="headerlink" title="v-pre"></a>v-pre</h3><p>v-pre 会跳过其所在节点的编译过程。可利用它跳过：没有使用指令语法、没有使用插值语法的节点，会<strong>加快编译</strong>。</p><h2 id="自定义指令"><a href="#自定义指令" class="headerlink" title="自定义指令"></a>自定义指令</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><h4 id="局部指令"><a href="#局部指令" class="headerlink" title="局部指令"></a>局部指令</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 对象写法</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line"><span class="attr">directives</span>:&#123;指令名: 配置对象&#125;;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数写法</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">directives&#123;指令名: 回调函数&#125;;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="全局指令"><a href="#全局指令" class="headerlink" title="全局指令"></a>全局指令</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 对象写法</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">directive</span>(指令名,配置对象);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数写法</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">directive</span>(指令名,回调函数);</span><br></pre></td></tr></table></figure><h3 id="钩子函数"><a href="#钩子函数" class="headerlink" title="钩子函数"></a>钩子函数</h3><ol><li><strong>bind：指令与元素成功绑定时调用。</strong></li><li><strong>inserted：指令所在元素被插入页面时调用。</strong></li><li><strong>update：指令所在模板结构被重新解析时调用。</strong></li><li>componentUpdated：指令所在组件的 VNode 及其子 VNode 全部更新后调用。</li><li>unbind：只调用一次，指令与元素解绑时调用。</li></ol><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p>1.指令定义时不加 <code>v-</code>，但使用时要加 <code>v-</code>；<br>2.指令名如果是多个单词，要使用 <code>kebab-case</code> 命名方式。</p><h1 id="数据绑定"><a href="#数据绑定" class="headerlink" title="数据绑定"></a>数据绑定</h1><h2 id="单向数据绑定"><a href="#单向数据绑定" class="headerlink" title="单向数据绑定"></a>单向数据绑定</h2><p>语法：<code>v-bind:href = &quot;xxx&quot;</code> 或简写为 <code>:href = &quot;xxx&quot;</code><br>特点：数据只能从 data 流向页面</p><h2 id="双向数据绑定"><a href="#双向数据绑定" class="headerlink" title="双向数据绑定"></a>双向数据绑定</h2><p>语法：<code>v-mode:value= &quot;xxx&quot;</code> 或简写为 <code>v-model=&quot;xxx&quot;</code><br>特点：数据不仅能从 data 流向页面，还能从页面流向 data</p><p>补充：双向绑定一般都应用在表单类元素（输入类）上（如：input、select等）</p><h2 id="MVVM"><a href="#MVVM" class="headerlink" title="MVVM"></a>MVVM</h2><ol><li>M:模型（Model): data中的数据</li><li>V:视图（View): 模板代码</li><li>VM:视图模型（ViewModel): Vue实例</li></ol><p>Vue 特性：</p><p>data 中所有的属性，最后都出现在了 <code>vm（实例对象）</code> 身上。<br>vm（实例对象） 身上<code>所有的属性</code> 及 <code>Vue原型</code> 上所有属性，在 <code>Vue模板</code> 中都可以直接使用。</p><h2 id="数据代理"><a href="#数据代理" class="headerlink" title="数据代理"></a>数据代理</h2><h3 id="Object-defineProperty-方法"><a href="#Object-defineProperty-方法" class="headerlink" title="Object.defineProperty 方法"></a>Object.defineProperty 方法</h3><p>数据代理底层是使用了 Object.defineProperty 这个方法来实现的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">   <span class="attr">name</span>: <span class="string">&#x27;frank&#x27;</span>,</span><br><span class="line">   <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(obj,<span class="string">&#x27;origin&#x27;</span>,&#123;</span><br><span class="line">   <span class="attr">value</span>: <span class="string">&#x27;xinyang&#x27;</span>,</span><br><span class="line">   <span class="comment">// enumerable: true</span></span><br><span class="line">   <span class="attr">configurable</span>: <span class="literal">true</span>,</span><br><span class="line">   <span class="attr">writable</span>: <span class="literal">true</span>,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="title function_">keys</span>(obj));</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> weight = <span class="number">60</span>;</span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">   <span class="attr">name</span>: <span class="string">&#x27;frank&#x27;</span>,</span><br><span class="line">   <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(obj,<span class="string">&#x27;weight&#x27;</span>,&#123;</span><br><span class="line">   <span class="title function_">get</span>(<span class="params"></span>)&#123;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;读取了 obj 的 weight 属性！&quot;</span>);</span><br><span class="line">       <span class="keyword">return</span> weight;</span><br><span class="line">   &#125;,</span><br><span class="line">   <span class="title function_">set</span>(<span class="params">value</span>)&#123;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;修改取了 obj 的 weight 属性！值是：&quot;</span> + value);</span><br><span class="line">       weight = value;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="简单的数据代理"><a href="#简单的数据代理" class="headerlink" title="简单的数据代理"></a>简单的数据代理</h3><p>通过一个对象代理对另一个对象中属性的操作(读/写)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj1 = &#123;</span><br><span class="line">   <span class="attr">a</span>: <span class="number">1</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> obj2 = &#123;</span><br><span class="line">   <span class="attr">b</span>: <span class="number">2</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(obj2, <span class="string">&#x27;a&#x27;</span>, &#123;</span><br><span class="line">   <span class="title function_">get</span>(<span class="params"></span>) &#123;</span><br><span class="line">       <span class="keyword">return</span> obj1.<span class="property">a</span>;</span><br><span class="line">   &#125;,</span><br><span class="line">   <span class="title function_">set</span>(<span class="params">value</span>) &#123;</span><br><span class="line">       obj1.<span class="property">a</span> = value;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">控制台运行结果：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">obj2</span></span><br><span class="line"><span class="comment">&#123;b: 2&#125;</span></span><br><span class="line"><span class="comment">obj2.a</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">obj2.a = 10</span></span><br><span class="line"><span class="comment">10</span></span><br><span class="line"><span class="comment">obj2.a</span></span><br><span class="line"><span class="comment">10</span></span><br><span class="line"><span class="comment">obj1</span></span><br><span class="line"><span class="comment">&#123;a: 10&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="Vue-中的数据代理"><a href="#Vue-中的数据代理" class="headerlink" title="Vue 中的数据代理"></a>Vue 中的数据代理</h3><p>1.Vue 中的数据代理：<br>通过vm对象来代理data对象中属性的操作（读/写）<br>2.Vue 中数据代理的好处：<br>更加方便的操作data中的数据<br>3.基本原理：<br>通过 object.defineProperty() 把 data 对象中所有属性添加到vm上。<br>为每一个添加到vm上的属性，都指定一个 getter/setter。<br>在 getter/setter 内部去操作（读/写）data 中对应的属性。</p><h1 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h1><h2 id="监听事件"><a href="#监听事件" class="headerlink" title="监听事件"></a>监听事件</h2><ol><li>v-on:xxx=”fun” 或 @xxx=”fun”</li><li><code>@xxx=&quot;fun(参数,[$event])&quot;</code></li><li>默认事件形参: <code>event</code></li><li>隐含属性对象: <code>$event</code></li><li>事件的回调需要配置在 <code>methods</code> 对象中，最终会在vm上；<ol><li>methods 中配置的函数，<strong>不要用箭头函数</strong>！否则this就不是vm了；</li><li>methods 中配置的函数，都是被Vue所管理的函数，this的指向是 <code>vm</code> 或 <code>组件实例对象</code>；</li></ol></li></ol><h2 id="事件修饰符"><a href="#事件修饰符" class="headerlink" title="事件修饰符"></a>事件修饰符</h2><p>Vue.js 为 <code>v-on</code> 提供了事件修饰符（修饰符可以链式调用）</p><ol><li>prevent：阻止默认事件（常用）；</li><li>stop：阻止事件冒泡（常用）；</li><li>once：事件只触发一次（常用）；</li><li>capture：使用事件的捕获模式；</li><li>self：只有event.target是当前操作的元素时才触发事件；</li><li>passive：事件的默认行为立即执行，无需等待事件回调执行完毕；</li></ol><p>代码演示：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>事件修饰符<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">*&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">margin-top</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.demo1</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">padding</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">padding</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.list</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background-color</span>: peru;</span></span><br><span class="line"><span class="language-css"><span class="attribute">overflow</span>: auto;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">Vue中的事件修饰符：</span></span><br><span class="line"><span class="comment">1.prevent：阻止默认事件（常用）；</span></span><br><span class="line"><span class="comment">2.stop：阻止事件冒泡（常用）；</span></span><br><span class="line"><span class="comment">3.once：事件只触发一次（常用）；</span></span><br><span class="line"><span class="comment">4.capture：使用事件的捕获模式；</span></span><br><span class="line"><span class="comment">5.self：只有event.target是当前操作的元素时才触发事件；</span></span><br><span class="line"><span class="comment">6.passive：事件的默认行为立即执行，无需等待事件回调执行完毕；</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;学习<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 阻止默认事件（常用） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.atguigu.com&quot;</span> @<span class="attr">click.prevent</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 阻止事件冒泡（常用） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo1&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.stop</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 修饰符可以连续写 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;a href=&quot;http://www.atguigu.com&quot; @click.prevent.stop=&quot;showInfo&quot;&gt;点我提示信息&lt;/a&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 事件只触发一次（常用） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.once</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 使用事件的捕获模式 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span> @<span class="attr">click.capture</span>=<span class="string">&quot;showMsg(1)&quot;</span>&gt;</span></span><br><span class="line">div1</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;showMsg(2)&quot;</span>&gt;</span></span><br><span class="line">div2</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 只有event.target是当前操作的元素时才触发事件； --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo1&quot;</span> @<span class="attr">click.self</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 事件的默认行为立即执行，无需等待事件回调执行完毕； --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> @<span class="attr">wheel.passive</span>=<span class="string">&quot;demo&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span> <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">name</span>:<span class="string">&#x27;FRANK&#x27;</span></span></span><br><span class="line"><span class="language-javascript">&#125;,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="title function_">showInfo</span>(<span class="params">e</span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&#x27;同学你好！&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// console.log(e.target)</span></span></span><br><span class="line"><span class="language-javascript">&#125;,</span></span><br><span class="line"><span class="language-javascript"><span class="title function_">showMsg</span>(<span class="params">msg</span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(msg)</span></span><br><span class="line"><span class="language-javascript">&#125;,</span></span><br><span class="line"><span class="language-javascript"><span class="title function_">demo</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;#&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;累坏了&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="键盘事件"><a href="#键盘事件" class="headerlink" title="键盘事件"></a>键盘事件</h2><p>Vue中常用的按键别名：</p><ol><li>回车 =&gt; enter</li><li>删除 =&gt; delete (捕获“删除”和“退格”键)</li><li>退出 =&gt; esc</li><li>空格 =&gt; space</li><li>换行 =&gt; tab (特殊，必须配合 <code>keydown</code> 去使用)</li><li>上 =&gt; up</li><li>下 =&gt; down</li><li>左 =&gt; left</li><li>右 =&gt; right</li></ol><p>Vue未提供别名的按键，可以使用按键原始的key值去绑定，但注意要转为 kebab-case（短横线命名）</p><p>系统修饰键（用法特殊）：</p><ol><li>ctrl</li><li>alt</li><li>shift</li><li>meta</li></ol><p>配合 keyup 使用：按下修饰键的同时，再按下其他键，随后释放其他键，事件才被触发。<br>配合 keydown 使用：正常触发事件。</p><p><code>Vue.config.keyCodes.自定义键名 = 键码</code> 可以去定制按键别名</p><h1 id="计算属性和监视属性"><a href="#计算属性和监视属性" class="headerlink" title="计算属性和监视属性"></a>计算属性和监视属性</h1><h2 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h2><p>定义：要用的属性不存在，要通过<strong>已有属性</strong>计算得来。<br>原理：底层借助了 <code>Objcet.defineproperty</code> 方法提供的 <code>getter</code> 和 <code>setter</code> 。<br>get函数什么时候执行？</p><ol><li>初次读取时会执行一次。</li><li>当依赖的数据发生改变时会被再次调用。</li></ol><p>优势：与 methods 实现相比，内部有<strong>缓存机制</strong>（复用），效率更高，调试方便。</p><p>备注：</p><ol><li>计算属性最终会出现在 <code>vm</code> 上，直接读取使用即可。</li><li>如果计算属性要被修改，那必须写set函数去响应修改，且set中要引起计算时依赖的数据发生改变。</li></ol><p>计算属性简写：当只考虑读取不考虑修改的情况下可以简写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">computed</span>:&#123;</span><br><span class="line"><span class="comment">//完整写法</span></span><br><span class="line">   </span><br><span class="line"><span class="comment">/* fullName:&#123;</span></span><br><span class="line"><span class="comment">get()&#123;</span></span><br><span class="line"><span class="comment">console.log(&#x27;get被调用了&#x27;)</span></span><br><span class="line"><span class="comment">return this.firstName + &#x27;-&#x27; + this.lastName</span></span><br><span class="line"><span class="comment">&#125;,</span></span><br><span class="line"><span class="comment">set(value)&#123;</span></span><br><span class="line"><span class="comment">console.log(&#x27;set&#x27;,value)</span></span><br><span class="line"><span class="comment">const arr = value.split(&#x27;-&#x27;)</span></span><br><span class="line"><span class="comment">this.firstName = arr[0]</span></span><br><span class="line"><span class="comment">this.lastName = arr[1]</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125; */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//简写</span></span><br><span class="line"><span class="title function_">fullName</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;get被调用了&#x27;</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">firstName</span> + <span class="string">&#x27;-&#x27;</span> + <span class="variable language_">this</span>.<span class="property">lastName</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="监视属性"><a href="#监视属性" class="headerlink" title="监视属性"></a>监视属性</h2><blockquote><p>官方文档</p><ul><li>watch：<a href="https://v2.cn.vuejs.org/v2/api/#watch">https://v2.cn.vuejs.org/v2/api/#watch</a></li><li>vm.$watch：<a href="https://v2.cn.vuejs.org/v2/api/#vm-watch">https://v2.cn.vuejs.org/v2/api/#vm-watch</a></li></ul></blockquote><h3 id="监视"><a href="#监视" class="headerlink" title="监视"></a>监视</h3><p>监视属性 watch：</p><ol><li>当被监视的属性变化时, 回调函数自动调用, 进行相关操作</li><li>监视的属性<strong>必须存在</strong>，才能进行监视！</li><li>监视的两种写法：<ol><li>new Vue 时传入 <code>watch</code> 配置</li><li>通过 <code>vm.$watch</code> 监视</li></ol></li></ol><h3 id="深度监视"><a href="#深度监视" class="headerlink" title="深度监视"></a>深度监视</h3><ol><li>Vue 中的 watch 默认不监测对象内部值的改变（一层）。</li><li>配置 <code>deep:true</code> 可以监测对象内部值改变（多层）。</li></ol><p>备注：</p><ol><li>Vue 自身可以监测对象内部值的改变，但 Vue 提供的 watch 默认不可以！</li><li>使用 watch 时根据数据的具体结构，决定是否采用深度监视。</li></ol><h3 id="监视简写"><a href="#监视简写" class="headerlink" title="监视简写"></a>监视简写</h3><p>watch 监视的属性可以简写成一个函数，缺点是不能配置 <code>deep</code> <code>immediate</code> … 属性</p><h2 id="计算属性和监视属性的区别"><a href="#计算属性和监视属性的区别" class="headerlink" title="计算属性和监视属性的区别"></a>计算属性和监视属性的区别</h2><p>computed和watch之间的区别：</p><ol><li>computed 能完成的功能，watch 都可以完成。</li><li>watch 能完成的功能，computed 不一定能完成，例如：<strong>watch 可以进行异步操作</strong>。</li></ol><p>两个重要的小原则：</p><ol><li>所被 Vue 管理的函数，最好写成普通函数，这样 this 的指向才是 vm 或 组件实例对象。</li><li>所有不被Vue所管理的函数最好写成箭头函数，这样this的指向才是 vm 或 组件实例对象。如：<ol><li>定时器的回调函数</li><li>ajax 的回调函数</li><li>Promise 的回调函数</li><li>…</li></ol></li></ol><h1 id="Class-与-Style-绑定"><a href="#Class-与-Style-绑定" class="headerlink" title="Class 与 Style 绑定"></a>Class 与 Style 绑定</h1><h2 id="Class-样式"><a href="#Class-样式" class="headerlink" title="Class 样式"></a>Class 样式</h2><p>写法 <code>:class=&quot;xxx&quot;</code> xxx 可以是字符串、对象、数组。</p><ol><li>字符串写法 适用于：类名不确定，要动态获取。</li><li>对象写法 适用于：要绑定多个样式，个数不确定，名字也不确定。</li><li>数组写法 适用于：要绑定多个样式，个数确定，名字也确定，但不确定用不用。</li></ol><h2 id="Style-样式"><a href="#Style-样式" class="headerlink" title="Style 样式"></a>Style 样式</h2><ol><li><code>:style=&quot;&#123;fontSize: xxx&#125;&quot;</code> 其中xxx是动态值。</li><li><code>:style=&quot;[a,b]&quot;</code> 其中a、b是样式对象。</li></ol><h1 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h1><h2 id="v-if"><a href="#v-if" class="headerlink" title="v-if"></a>v-if</h2><p>写法：</p><ol><li>v-if = “表达式” </li><li>v-else-if = “表达式”</li><li>v-else = “表达式”</li></ol><p>适用于：切换频率较低的场景。<br>特点：不展示的DOM元素直接被移除。<br>注意：v-if可以和:v-else-if、v-else一起使用，但要求<strong>结构不能被打断</strong>。</p><h2 id="v-show"><a href="#v-show" class="headerlink" title="v-show"></a>v-show</h2><p>写法：</p><p>v-show = “表达式”</p><p>适用于：切换频率较高的场景。<br>特点：不展示的DOM元素未被移除，仅仅是使用样式<strong>隐藏</strong></p><p>备注：使用 v-if的时，元素可能无法获取到，而使用v-show一定可以获取到</p><h1 id="列表渲染"><a href="#列表渲染" class="headerlink" title="列表渲染"></a>列表渲染</h1><h2 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a>v-for</h2><ol><li>用于展示列表数据</li><li>语法：<code>v-for=&quot;(item, index) in xxx&quot; :key=&quot;index&quot;</code></li><li>可遍历：数组、对象、字符串（用的很少）、指定次数（用的很少)</li></ol><h2 id="key-的内部原理"><a href="#key-的内部原理" class="headerlink" title="key 的内部原理"></a>key 的内部原理</h2><p>面试：vue中的key有什么作用？（key的内部原理）</p><p>虚拟DOM中key的作用：</p><p>key 是虚拟 DOM 对象的标识，当数据发生变化时，Vue会根据<strong>新数据</strong>生成<strong>新的虚拟 DOM</strong><br>随后Vue进行<strong>新虚拟DOM</strong>与<strong>旧虚拟DOM</strong>的差异比较，比较规则如下：</p><ol><li>旧虚拟DOM中找到了与新虚拟DOM相同的 key<ol><li>若虚拟DOM中内容没变, 直接使用之前的真实DOM！</li><li>若虚拟DOM中内容变了, 则生成新的真实DOM，随后替换掉页面中之前的真实DOM。</li></ol></li><li>旧虚拟DOM中未找到与新虚拟DOM相同的 key<ol><li>创建新的真实DOM，随后渲染到到页面。</li></ol></li></ol><p>用index作为key可能会引发的问题：</p><ol><li>若对数据进行：逆序添加、逆序删除等破坏顺序操作: 会产生没有必要的真实DOM更新 ==&gt; 界面效果没问题, 但效率低。</li><li>如果结构中还包含输入类的DOM：会产生错误DOM更新 ==&gt; 界面有问题。</li></ol><p>开发中如何选择key?</p><ol><li>最好使用每条数据的<strong>唯一标识作为key</strong>, 比如id、手机号、身份证号、学号等唯一值。</li><li>如果不存在对数据的逆序添加、逆序删除等破坏顺序操作，仅用于渲染列表用于展示，使用index作为key是没有问题的。</li></ol><h2 id="Vue-数据检测原理"><a href="#Vue-数据检测原理" class="headerlink" title="Vue 数据检测原理"></a>Vue 数据检测原理</h2><p>vue 会监视 <code>data</code> 中<strong>所有层次的数据</strong></p><h3 id="模拟一个数据检测"><a href="#模拟一个数据检测" class="headerlink" title="模拟一个数据检测"></a>模拟一个数据检测</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> data = &#123;</span><br><span class="line"><span class="attr">city</span>:<span class="string">&#x27;郑州&#x27;</span>,</span><br><span class="line"><span class="attr">school</span>:<span class="string">&#x27;郑州大学&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一个监视的实例对象，用于监视data中属性的变化</span></span><br><span class="line"><span class="keyword">const</span> obs = <span class="keyword">new</span> <span class="title class_">Observer</span>(data)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obs)</span><br><span class="line"></span><br><span class="line"><span class="comment">//准备一个vm实例对象</span></span><br><span class="line"><span class="keyword">let</span> vm = &#123;&#125;</span><br><span class="line">vm.<span class="property">_data</span> = data = obs</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Observer</span>(<span class="params">obj</span>)&#123;</span><br><span class="line"><span class="comment">//汇总对象中所有的属性形成一个数组</span></span><br><span class="line"><span class="keyword">const</span> keys = <span class="title class_">Object</span>.<span class="title function_">keys</span>(obj)</span><br><span class="line"><span class="comment">//遍历</span></span><br><span class="line">keys.<span class="title function_">forEach</span>(<span class="function">(<span class="params">k</span>)=&gt;</span>&#123;</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(<span class="variable language_">this</span>,k,&#123;</span><br><span class="line"><span class="title function_">get</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">return</span> obj[k]</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title function_">set</span>(<span class="params">val</span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;k&#125;</span>被改了，我要去解析模板，生成虚拟DOM.....我要开始忙了`</span>)</span><br><span class="line">obj[k] = val</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="监测对象中的数据"><a href="#监测对象中的数据" class="headerlink" title="监测对象中的数据"></a>监测对象中的数据</h3><p>通过 setter 实现监视，且要在 new Vue 时就传入要监测的数据。</p><ol><li>对象中后追加的属性，Vue 默认不做响应式处理</li><li>如需给后添加的属性做响应式，请使用如下API：</li></ol><ul><li>Vue.set(target，propertyName/index，value) 或 </li><li>vm.$set(target，propertyName/index，value)</li></ul><h3 id="监测数组中的数据"><a href="#监测数组中的数据" class="headerlink" title="监测数组中的数据"></a>监测数组中的数据</h3><p>通过包裹数组更新元素的方法实现，本质就是做了两件事</p><ol><li>调用原生对应的方法对数组进行更新。</li><li>重新解析模板，进而更新页面。</li></ol><h2 id="数组更新检测"><a href="#数组更新检测" class="headerlink" title="数组更新检测"></a>数组更新检测</h2><h3 id="变更方法"><a href="#变更方法" class="headerlink" title="变更方法"></a>变更方法</h3><p>Vue 将被侦听的数组的变更方法（<strong>影响原数组的方法</strong>）进行了包装（先调用原生对应的方法，然后再重新解析模板）所以它们也将会触发视图更新。这些被包裹过的方法包括：</p><ol><li>push()</li><li>pop()</li><li>shift()</li><li>unshift()</li><li>splice()</li><li>sort()</li><li>reverse()</li></ol><h3 id="替换数组"><a href="#替换数组" class="headerlink" title="替换数组"></a>替换数组</h3><p>替换数组指不会变更原始数组，而总是返回一个新数组。当使用非变更方法时，可以<strong>用新数组替换旧数组</strong></p><ol><li>filter()</li><li>concat()</li><li>slice()</li></ol><h2 id="Vue-set"><a href="#Vue-set" class="headerlink" title="Vue.set"></a>Vue.set</h2><p>主要用于解决 Vue <strong>无法检测到属性添加</strong>的限制</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">set</span>( object, key, value)</span><br></pre></td></tr></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>Vue.set() 和 vm.$set() 不能给 <code>vm</code> 或 <code>vm的根数据对象</code> <strong>添加属性</strong></p><h1 id="表单输入绑定"><a href="#表单输入绑定" class="headerlink" title="表单输入绑定"></a>表单输入绑定</h1><h2 id="收集表单数据"><a href="#收集表单数据" class="headerlink" title="收集表单数据"></a>收集表单数据</h2><ol><li>若：<code>&lt;input type=&quot;text&quot;/&gt;</code>，则v-model收集的是value值，用户输入的就是value值。</li><li>若：<code>&lt;input type=&quot;radio&quot;/&gt;</code>，则v-model收集的是value值，且要给标签配置value值。</li><li>若：<code>&lt;input type=&quot;checkbox&quot;/&gt;</code><ol><li>没有配置input的value属性，那么收集的就是checked（勾选 or 未勾选，是布尔值）</li><li>配置input的value属性:<ol><li>v-model的初始值是非数组，那么收集的就是checked（勾选 or 未勾选，是布尔值）</li><li>v-model的初始值是<strong>数组</strong>，那么收集的的就是value组成的数组</li></ol></li></ol></li></ol><h2 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h2><ol><li>lazy：失去焦点再收集数据</li><li>number：输入字符串转为有效的数字</li><li>trim：输入首尾空格过滤</li></ol><h1 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h1><p>定义：对要显示的数据进行<strong>特定格式化后再显示</strong>（适用于一些简单逻辑的处理）。</p><p>语法：</p><ol><li>注册过滤器<ol><li>全局过滤器：<code>Vue.filter(name,callback)</code></li><li>局部过滤器：<code>new Vue&#123;filters:&#123;&#125;&#125;</code></li></ol></li><li>使用过滤器：<ol><li>双花括号插值：<code>&#123;&#123; xxx | 过滤器名&#125;&#125;</code></li><li>v-bind 表达式：<code>v-bind:属性 = &quot;xxx | 过滤器名&quot;</code></li></ol></li></ol><p>备注：</p><ol><li>过滤器也可以接收额外参数、多个过滤器也可以串联</li><li>并没有改变原本的数据, 是<strong>基于原始数据</strong>加工产生新的数据</li></ol><h1 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h1><p>生命周期又名：生命周期回调函数、生命周期函数、生命周期钩子。是 Vue在关键时刻帮我们调用的一些特殊名称的函数。<br>生命周期函数的名字不可更改，但函数的具体内容是根据需求编写的。<br>生命周期函数中的 <code>this</code> 指向是 <code>vm</code> 或 <code>组件实例对象</code>。</p><h2 id="生命周期图示"><a href="#生命周期图示" class="headerlink" title="生命周期图示"></a>生命周期图示</h2><p><img src="https://raw.githubusercontent.com/HaloBoys/PicGoMyDevice/main/img/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.png" alt="生命周期"></p><h2 id="常用的生命周期钩子"><a href="#常用的生命周期钩子" class="headerlink" title="常用的生命周期钩子"></a>常用的生命周期钩子</h2><ol><li>mounted: 发送ajax请求、启动定时器、绑定自定义事件、订阅消息等<strong>初始化操作</strong>。</li><li>beforeDestroy: 清除定时器、解绑自定义事件、取消订阅消息等<strong>收尾工作</strong>。</li></ol><h2 id="关于销毁-Vue实例"><a href="#关于销毁-Vue实例" class="headerlink" title="关于销毁 Vue实例"></a>关于销毁 Vue实例</h2><ol><li>销毁后借助 Vue开发者工具看不到任何信息。</li><li>销毁后<strong>自定义事件会失效，但原生DOM事件依然有效</strong>。</li><li>一般不会在 beforeDestroy操作数据，因为即便操作数据，也<strong>不会再触发更新流程</strong>了。</li></ol><h1 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h1><p>组件是用来实现局部(特定)功能效果的<strong>代码集合</strong></p><h2 id="非单文件组件"><a href="#非单文件组件" class="headerlink" title="非单文件组件"></a>非单文件组件</h2><h3 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h3><ol><li>定义组件(创建组件)</li><li>注册组件</li><li>使用组件(写组件标签)</li></ol><h4 id="定义组件"><a href="#定义组件" class="headerlink" title="定义组件"></a>定义组件</h4><p>使用 <code>Vue.extend(options)</code> 创建<br>其中 options 和 new Vue(options) 时传入的那个 options <strong>几乎</strong>一样，但也有点区别:</p><ol><li><code>el</code> 不要写 ——— 最终所有的组件都要经过一个vm的管理，由vm中的el决定服务哪个容器。</li><li><code>data</code> 必须写成函数 ———— 避免组件被复用时，数据存在<strong>引用关系</strong>。</li></ol><p>补充：使用 <code>template</code> 可以配置组件结构。</p><h4 id="注册组件"><a href="#注册组件" class="headerlink" title="注册组件"></a>注册组件</h4><ol><li>局部注册：new Vue 的时候传入 <code>components</code> 选项</li><li>全局注册：<code>Vue.component(&#39;组件名&#39;,组件)</code></li></ol><h4 id="使用组件"><a href="#使用组件" class="headerlink" title="使用组件"></a>使用组件</h4><p><code>&lt;组件名&gt;&lt;/组件名&gt;</code></p><h3 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h3><h4 id="组件命名"><a href="#组件命名" class="headerlink" title="组件命名"></a>组件命名</h4><p>一个单词组成：</p><ol><li>第一种写法(首字母小写)：school</li><li>第二种写法(首字母大写)：School</li></ol><p>多个单词组成：</p><ol><li>第一种写法(kebab-case命名)：my-school</li><li>第二种写法(CamelCase命名)：MySchool (<strong>需要Vue脚手架支持</strong>)</li></ol><p>补充：</p><ol><li>组件名尽可能回避HTML中已有的元素名称，例如：h2、H2都不行。</li><li>可以使用name配置项指定组件在开发者工具中呈现的名字。</li></ol><h4 id="组件标签"><a href="#组件标签" class="headerlink" title="组件标签"></a>组件标签</h4><p>第一种写法：<code>&lt;组件名&gt;&lt;/组件名&gt;</code></p><p>第二种写法：<code>&lt;组件名/&gt;</code></p><p>备注：不用使用脚手架时，<code>&lt;组件名/&gt;</code>单标签会导致后续组件不能渲染。</p><h4 id="组件简写"><a href="#组件简写" class="headerlink" title="组件简写"></a>组件简写</h4><p>const cpn = Vue.extend(options) 可简写为： const cpn = options</p><h3 id="组件嵌套"><a href="#组件嵌套" class="headerlink" title="组件嵌套"></a>组件嵌套</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>组件的嵌套<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">//定义student组件</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">const student = Vue.extend(&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">name:&#x27;student&#x27;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">template:`</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>学生姓名：</span><span class="template-variable">&#123;&#123;<span class="name">name</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>学生年龄：</span><span class="template-variable">&#123;&#123;<span class="name">age</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">`,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">data()&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">return &#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">name:&#x27;Frank&#x27;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">age:18</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;)</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">//定义school组件</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">const school = Vue.extend(&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">name:&#x27;school&#x27;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">template:`</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校名称：</span><span class="template-variable">&#123;&#123;<span class="name">name</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>学校地址：</span><span class="template-variable">&#123;&#123;<span class="name">address</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">student</span>&gt;</span><span class="tag">&lt;/<span class="name">student</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">`,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">data()&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">return &#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">name:&#x27;郑州大学&#x27;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">address:&#x27;郑州&#x27;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">//注册组件（局部）</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">components:&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">student</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;)</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">//定义hello组件</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">const hello = Vue.extend(&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">template:`<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">msg</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span>`,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">data()&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">return &#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">msg:&#x27;Hello World!&#x27;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;)</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">//定义app组件</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">const app = Vue.extend(&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">template:`</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">hello</span>&gt;</span><span class="tag">&lt;/<span class="name">hello</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;<span class="name">school</span>&gt;</span><span class="tag">&lt;/<span class="name">school</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">`,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">components:&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">school,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">hello</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;)</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">//创建vm</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">new Vue(&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">template:&#x27;<span class="tag">&lt;<span class="name">app</span>&gt;</span><span class="tag">&lt;/<span class="name">app</span>&gt;</span>&#x27;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">el:&#x27;#root&#x27;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">//注册组件（局部）</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">components:&#123;app&#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;)</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="单文件组件"><a href="#单文件组件" class="headerlink" title="单文件组件"></a>单文件组件</h2><h2 id="VueComponent"><a href="#VueComponent" class="headerlink" title="VueComponent"></a>VueComponent</h2><ol><li>组件实例对象(vc)，本质是一个名为 <strong>VueComponent 的构造函数</strong>，是 <code>Vue.extend</code> 生成的。</li><li>只需要写 <code>&lt;组件名/&gt;</code> 或 <code>&lt;组件名&gt;&lt;/组件名&gt;</code> ，Vue 解析时会帮我们创建 对应组件的实例对象，即Vue帮我们执行的：<code>new VueComponent(options)</code>。</li><li>关于this指向：<ol><li>组件配置中：data函数、methods中的函数、watch中的函数、computed中的函数 它们的 this 均是 <strong>VueComponent实例对象</strong>。</li><li>new Vue(options)配置中：data函数、methods中的函数、watch中的函数、computed中的函数 它们的 this 均是 <strong>Vue实例对象</strong>。</li></ol></li><li>特别注意：每次调用Vue.extend，<strong>返回的都是一个全新的</strong> <code>VueComponent</code> ！</li><li>一个重要的内置关系：<code>VueComponent.prototype.__proto__ === Vue.prototype</code><ol><li>为什么要有这个关系：让组件实例对象（vc）可以访问到 Vue原型上的属性、方法。</li></ol></li></ol><h1 id="Todo"><a href="#Todo" class="headerlink" title="Todo"></a>Todo</h1><div class='checkbox yellow'><input type="checkbox" />            <p>Vue TodoList 案例做出来，上传到 github</p>            </div><div class='checkbox yellow'><input type="checkbox" />            <p>张天禹老师讲的太好了，回头再刷一遍！</p>            </div><p>vue基础<br>vue-cli<br>vue-router<br>vuex<br>element-ui<br>vue3</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node</title>
      <link href="/2022/08/25%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF_Node/976189ad/"/>
      <url>/2022/08/25%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF_Node/976189ad/</url>
      
        <content type="html"><![CDATA[<h1 id="Node-js-简介"><a href="#Node-js-简介" class="headerlink" title="Node.js 简介"></a>Node.js 简介</h1><p>Node.js是一个基于ChromeV8引擎的 <strong>JavaScript 运行环境</strong></p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220825135418.png" alt="20220825135418"></p><h2 id="Node-js-可以做什么"><a href="#Node-js-可以做什么" class="headerlink" title="Node.js 可以做什么"></a>Node.js 可以做什么</h2><p>Node.js作为一个JavaScript的运行环境，仅仅提供了基础的功能和APl。<br>基于Node.js提供的这些基础能，很多强大的<a href="http://nodejs.cn/learn/introduction-to-nodejs/#nodejs-%E6%A1%86%E6%9E%B6%E5%92%8C%E5%B7%A5%E5%85%B7">框架和工具</a>如雨后春笋，层出不穷：</p><ol><li>基于Express框架（<a href="http://www.expressjs.com.cn/),可以快速构建Web应用">http://www.expressjs.com.cn/),可以快速构建Web应用</a></li><li>基于Electron框架（<a href="https://electronjs.org/),可以构建跨平台的桌面应用">https://electronjs.org/),可以构建跨平台的桌面应用</a></li><li>基于restify框架（<a href="http://restify.com/),可以快速构建API接口项目">http://restify.com/),可以快速构建API接口项目</a></li><li>读写和操作数据库、创建实用的命令行工具辅助前端开发、etc…</li></ol><h1 id="fs-文件系统"><a href="#fs-文件系统" class="headerlink" title="fs 文件系统"></a>fs 文件系统</h1><p>fs模块是Node.js官方提供的、用来操作文件的模块。它提供了一系列的方法和属性，用来满足用户对文件的操作需求<br>fs模块几乎对所有操作提供异步和同步两种操作方式，供开发者选择</p><h2 id="readFile-readFileSync"><a href="#readFile-readFileSync" class="headerlink" title="readFile() readFileSync()"></a>readFile() readFileSync()</h2><h2 id="writeFile-，writeFileSync"><a href="#writeFile-，writeFileSync" class="headerlink" title="writeFile()，writeFileSync()"></a>writeFile()，writeFileSync()</h2><p>注意：</p><ol><li>fs.writeFile() 方法只能用来创建文件，<strong>不能用来创建路径</strong></li><li>fs.writeFile() 重复写入同一个文件，新写入的内容会<strong>覆盖</strong>之前的旧内容</li></ol><h1 id="path-路径模块"><a href="#path-路径模块" class="headerlink" title="path 路径模块"></a>path 路径模块</h1><p>path模块是Node.js官方提供的、用来处理路径的模块。它提供了一系列的方法和属性，用来满足用户对路径的处理需求。</p><h2 id="path-join"><a href="#path-join" class="headerlink" title="path.join()"></a>path.join()</h2><p>path.join() 方法可以把<strong>多个路径片段拼接为完整的路径字符串</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;./files/test.txt&#x27;</span>);</span><br></pre></td></tr></table></figure><p>注意：<code>../</code> 会抵消前面的路径</p><h2 id="path-basename"><a href="#path-basename" class="headerlink" title="path.basename()"></a>path.basename()</h2><p>path.basename() 方法可以获取路径中的最后一部分，经常通过这个方法获取路径中的文件名</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">path.<span class="title function_">basename</span>(<span class="string">&#x27;/foo/bar/baz/asdf/quux.html&#x27;</span>);</span><br><span class="line"><span class="comment">// Returns: &#x27;quux.html&#x27;</span></span><br><span class="line"></span><br><span class="line">path.<span class="title function_">basename</span>(<span class="string">&#x27;/foo/bar/baz/asdf/quux.html&#x27;</span>, <span class="string">&#x27;.html&#x27;</span>);</span><br><span class="line"><span class="comment">// Returns: &#x27;quux&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="path-extname"><a href="#path-extname" class="headerlink" title="path.extname()"></a>path.extname()</h2><p>path.extname() 方法返回路径的扩展名</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">path.<span class="title function_">extname</span>(<span class="string">&#x27;index.html&#x27;</span>);</span><br><span class="line"><span class="comment">// Returns: &#x27;.html&#x27;</span></span><br><span class="line"></span><br><span class="line">path.<span class="title function_">extname</span>(<span class="string">&#x27;index.coffee.md&#x27;</span>);</span><br><span class="line"><span class="comment">// Returns: &#x27;.md&#x27;</span></span><br><span class="line"></span><br><span class="line">path.<span class="title function_">extname</span>(<span class="string">&#x27;index.&#x27;</span>);</span><br><span class="line"><span class="comment">// Returns: &#x27;.&#x27;</span></span><br><span class="line"></span><br><span class="line">path.<span class="title function_">extname</span>(<span class="string">&#x27;index&#x27;</span>);</span><br><span class="line"><span class="comment">// Returns: &#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">path.<span class="title function_">extname</span>(<span class="string">&#x27;.index&#x27;</span>);</span><br><span class="line"><span class="comment">// Returns: &#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">path.<span class="title function_">extname</span>(<span class="string">&#x27;.index.md&#x27;</span>);</span><br><span class="line"><span class="comment">// Returns: &#x27;.md&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="http-模块"><a href="#http-模块" class="headerlink" title="http 模块"></a>http 模块</h1><p>http模块是Node.js官方提供的、用来创建web服务器的模块。<br>通过http模块提供的http.createServer()方法，就能方便的把一台普通的电脑，变成<strong>Web服务器</strong>，从而对外提供Web资源服务。</p><h2 id="搭建web服务器"><a href="#搭建web服务器" class="headerlink" title="搭建web服务器"></a>搭建web服务器</h2><h3 id="创建基本的web服务器"><a href="#创建基本的web服务器" class="headerlink" title="创建基本的web服务器"></a>创建基本的web服务器</h3><ol><li>导入http模块</li><li>创建web服务器实例</li><li>为服务器实例绑定request事件，监听客户端的请求</li><li>启动服务器</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 导入 http 模块</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>)</span><br><span class="line"><span class="comment">// 2. 创建 web 服务器实例</span></span><br><span class="line"><span class="keyword">const</span> server = http.<span class="title function_">createServer</span>()</span><br><span class="line"><span class="comment">// 3. 为服务器实例绑定 request 事件，监听客户端的请求</span></span><br><span class="line">server.<span class="title function_">on</span>(<span class="string">&#x27;request&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Someone visit our web server.&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 4. 启动服务器</span></span><br><span class="line">server.<span class="title function_">listen</span>(<span class="number">8080</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;  </span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;server running at http://127.0.0.1:8080&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="request-对象"><a href="#request-对象" class="headerlink" title="request 对象"></a>request 对象</h2><p>createServer方法的回调函数的第一个参数是一个request对象，拥有以下属性：</p><ol><li><code>url</code> : 发出请求的网址。</li><li><code>method</code> : HTTP请求的方法。</li><li><code>headers</code> : HTTP请求的所有HTTP头信息。</li></ol><h2 id="response-对象"><a href="#response-对象" class="headerlink" title="response 对象"></a>response 对象</h2><p>createServer方法的回调函数的第二个参数是一个response对象</p><ol><li>response.end() 方法用来写入HTTP回应的具体内容，以及回应完成后关闭本次对话</li></ol><p>补充：</p><ol><li>当调用res.end()方法，向客户端发送中文内容的时候，会<strong>出现乱码</strong>问题，此时，需要手动设置内容的编码格式：<br><code>res.setHeader(&#39;Content-Type&#39;,&#39;text/html;charset=utf-8&#39;)</code></li></ol><h1 id="模块化"><a href="#模块化" class="headerlink" title="模块化"></a>模块化</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>概念：模块化是指解决一个复杂问题时，自顶向下逐层把系统划分成若干模块的过程。对于整个系统来说，<strong>模块是可组合、分解和更换的单元</strong>。</p><p>编程领域中的模块化，就是遵守固定的规则，把<strong>一个大文件拆成独立并互相依赖的多个小模块</strong>。</p><ol><li>提高了代码的复用性</li><li>提高了代码的可维护性</li><li>可以实现按需加载</li></ol><p>模块化规范的好处：大家都遵守同样的模块化规范写代码，降低了沟通的成本，极大方便了各个模块之间的相互调用，利人利己。</p><h2 id="Node-js-中的模块"><a href="#Node-js-中的模块" class="headerlink" title="Node.js 中的模块"></a>Node.js 中的模块</h2><p>Node.js遵循了CommonJS模块化规范，CommonJS规定了模块的特性和各模块之间如何相互依赖。<br>CommonJS规定：</p><ol><li>每个模块内部，module变量代表当前模块。</li><li>module变量是一个对象，它的exports属性（即module.exports)是对外的接口。</li><li>加载某个模块，其实是加载该模块的module.exports属性。require()方法用于加载模块。</li></ol><p>Node.js中根据模块来源的不同，将模块分为了3大类，分别是：</p><ol><li>内置模块<br>内置模块是由Node.js官方提供的。（例如: fs、path、http等）</li><li>自定义模块<br>用户创建的每个<code>.js</code>文件，都是自定义模块</li><li>第三方模块<br>由第三方开发出来的模块，并非官方提供的内置模块，也不是用户创建的自定义模块，使用前需要先下载（npm）</li></ol><h2 id="加载模块"><a href="#加载模块" class="headerlink" title="加载模块"></a>加载模块</h2><p>使用<code>require()</code>方法，可以加载需要的内置模块、用户自定义模块、第三方模块进行使用。<br><code>require()</code>方法加载其它模块时，会执行被加载模块中的代码。</p><h3 id="模块的加载机制"><a href="#模块的加载机制" class="headerlink" title="模块的加载机制"></a>模块的加载机制</h3><h4 id="优先从缓存中加载"><a href="#优先从缓存中加载" class="headerlink" title="优先从缓存中加载"></a>优先从缓存中加载</h4><p>模块在第一次加载后会被缓存，这也意味着多次调用 <code>require()</code> 不会导致模块的代码被执行多次。<br>不论是内置模块、用户自定义模块、还是第三方模块，它们<strong>都会优先从缓存中加载</strong>，从而提高模块的加载效率。</p><h4 id="内置模块的加载机制"><a href="#内置模块的加载机制" class="headerlink" title="内置模块的加载机制"></a>内置模块的加载机制</h4><p>内置模块是由Node.js官方提供的模块，<strong>内置模块的加载优先级最高</strong>。</p><h4 id="自定义模块的加载机制"><a href="#自定义模块的加载机制" class="headerlink" title="自定义模块的加载机制"></a>自定义模块的加载机制</h4><p>使用require()加载自定义模块时，必须指定以<code>./</code>或<code>../</code>开头的路径标识符。<br>在加载自定义模块时，如果没有指定<code>./</code>或<code>../</code>这样的路径标识符，则node会把它当作<strong>内置模块</strong>或<strong>第三方模块</strong>进行加载。</p><p>使用require()导入自定义模块时，如果<strong>省略了文件的扩展名</strong>，则Node.js会按顺序分别尝试加载以下的文件：</p><ol><li>按照<code>确切的文件名</code>进行加载</li><li>补全<code>.js</code>扩展名进行加载</li><li>补全<code>.json</code>扩展名进行加载</li><li>补全<code>.node</code>扩展名进行加载</li><li>加载失败，<code>终端报错</code></li></ol><h4 id="第三方模块的加载机制"><a href="#第三方模块的加载机制" class="headerlink" title="第三方模块的加载机制"></a>第三方模块的加载机制</h4><p>如果传递给require()的模块标识符不是一个内置模块，也没有以<code>./</code>或<code>../</code>开头，则Node.js 会从当前模块的父目录开始，尝试从<code>/node_modules</code>文件夹中加载第三方模块。<br>如果没有找到对应的第三方模块，则<code>移动到再上一层父目录中</code>，进行加载，直到文件系统的<code>根目录</code>。</p><h4 id="目录作为模块"><a href="#目录作为模块" class="headerlink" title="目录作为模块"></a>目录作为模块</h4><p>当把目录作为模块标识符，传递给require()进行加载的时候，有三种加载方式：</p><ol><li>在被加载的目录下查找一个叫做<code>package.json</code>的文件，并寻找<code>main</code>属性，作为require()加载的入口</li><li>如果目录里没有package.json文件，或者main入口不存在或无法解析，则Node.js将会试图<strong>加载目录下的</strong><code>index.js</code>文件</li><li>如果以上两步都失败了，则Node.js会在终端打印错误消息，报告模块的缺失：<code>Error:Cannot find module&#39;xxx&#39;</code></li></ol><h2 id="模块作用域"><a href="#模块作用域" class="headerlink" title="模块作用域"></a>模块作用域</h2><p>在自定义模块中定义的变量、方法等成员，只能在当前模块内被访问，这种模块级别的访问限制，叫做模块作用域。作用：<strong>防止了全局变量污染的问题</strong>。</p><h2 id="共享模块"><a href="#共享模块" class="headerlink" title="共享模块"></a>共享模块</h2><h3 id="module"><a href="#module" class="headerlink" title="module"></a>module</h3><p>每个<code>.js</code>自定义模块中都有一个module对象，它里面<strong>存储了和当前模块有关的信息：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Module</span> &#123;</span><br><span class="line">  <span class="attr">id</span>: <span class="string">&#x27;.&#x27;</span>,</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;E:\\FrontEnd\\05-Node\\00-Temp&#x27;</span>,</span><br><span class="line">  <span class="comment">// 默认是一个空对象</span></span><br><span class="line">  <span class="attr">exports</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">parent</span>: <span class="literal">null</span>,</span><br><span class="line">  <span class="attr">filename</span>: <span class="string">&#x27;E:\\FrontEnd\\05-Node\\00-Temp\\01-module.js&#x27;</span>,</span><br><span class="line">  <span class="attr">loaded</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">children</span>: [],</span><br><span class="line">  <span class="attr">paths</span>: [</span><br><span class="line">    <span class="string">&#x27;E:\\FrontEnd\\05-Node\\00-Temp\\node_modules&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;E:\\FrontEnd\\05-Node\\node_modules&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;E:\\FrontEnd\\node_modules&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;E:\\node_modules&#x27;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="module-exports"><a href="#module-exports" class="headerlink" title="module.exports"></a>module.exports</h3><p>自定义模块中，可以使用<code>module.exports</code>对象，将模块内的成员<strong>共享</strong>出去，供外界使用。<br>外界用<code>require()</code>方法导入自定义模块时，得到的就是module.exports所指向的对象。</p><p>注意：使用require()方法导入模块时，导入的结果永远以module.exports<strong>指向的对象为准</strong>（注意 module.exports 覆盖问题）</p><h3 id="exports"><a href="#exports" class="headerlink" title="exports"></a>exports</h3><p>由于module.exports单词写起来比较复杂，为了<strong>简化</strong>向外共享成员的代码，Node提供了exports对象。<br>默认情况下，<strong>exports和module.exports指向同一个对象</strong>。最终共享的结果，还是以module.exports指向的对象为准。</p><h2 id="npm-包"><a href="#npm-包" class="headerlink" title="npm 包"></a>npm 包</h2><p>Node.js中的第三方模块又叫做包。包是由第三方个人或团队开发出来的，免费供所有人使用。<br>包是<strong>基于内置模块封装出来的</strong>，提供了更高级、更方便的API，极大的提高了开发效率。</p><h3 id="下载包"><a href="#下载包" class="headerlink" title="下载包"></a>下载包</h3><p>Node Package Manager(简称npm包管理工具）,这个包管理工具集成在 Node.js 中</p><p><a href="https://www.npmjs.com">https://www.npmjs.com</a><br><a href="https://registry.npmjs.org">https://registry.npmjs.org</a></p><p>下载命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install/[i] pakageName</span><br></pre></td></tr></table></figure><p>补充：</p><ol><li>安装指定版本的包：可以在包名之后，通过 <code>@符号</code> 指定具体的版本。（默认自动安装最新版本的包）</li><li>包的语义化版本规范<ol><li>包的版本号是以“点分十进制”形式进行定义的，总共有三位数字，例如2.24.0</li><li>第1位数字：大版本；第2位数字：功能版本；第3位数字：Bug修复版本</li><li>版本号提升的规则则：只要前面的版本号增长了，则后面的版本号归零</li></ol></li></ol><p>初次装包完成后，在项目文件夹下多一个<code>node_modules</code>的文件夹和<code>package-lock.json</code>的配置文件。<br>不要手动修改 node_modules或package-lock.json文件中的任何代码，<strong>npm包管理工具会自动维护它们</strong>。</p><h4 id="NPM-镜像服务器"><a href="#NPM-镜像服务器" class="headerlink" title="NPM 镜像服务器"></a>NPM 镜像服务器</h4><p>淘宝在国内搭建了一个服务器，专门把国外官方服务器上的包<strong>同步</strong>到国内的服务器，然后在国内提供下包的服务。从而极大的提高了下包的速度。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看当前的下包镜像源</span></span><br><span class="line">npm config get registry</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将下包的镜像源切换为淘宝镜像源</span></span><br><span class="line">npm config <span class="built_in">set</span> registry=https://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure><h4 id="nrm"><a href="#nrm" class="headerlink" title="nrm"></a>nrm</h4><p>nrm 工具，可以更方便的<strong>切换下包的镜像源</strong>。利用nrm提供的终端命令，可以快速查看和切换下包的镜像源。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过npm包管理器，将nrm安装为全局可用的工具</span></span><br><span class="line">npm i nrm -g</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有可用的镜像源</span></span><br><span class="line">nrm <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#将下包的镜像源切换为指定镜像</span></span><br><span class="line">nrm use 镜像名</span><br></pre></td></tr></table></figure><h4 id="i5ting-toc"><a href="#i5ting-toc" class="headerlink" title="i5ting_toc"></a>i5ting_toc</h4><p>i5ting_toc 是一个可以把 <strong>md文档 转为 html页面</strong> 的小工具</p><h4 id="包的分类"><a href="#包的分类" class="headerlink" title="包的分类"></a>包的分类</h4><ol><li>项目包<br>安装到项目 <code>node_modules</code> 目录中的包，都是项目包</li><li>全局包<br>执行npm install命令时，添加 <code>-g</code> 参数，会把包安装为全局包<br>全局包会被安装到：<code>C:\Users\用户名\AppData\Roaming\npm\node_modules</code> 目录<br>只有<strong>工具性质的包</strong>，才有全局安装的必要性。因为它们提供了好用的终端命令</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm i 包名 -g <span class="comment"># 全局安装指定的包</span></span><br><span class="line"></span><br><span class="line">npm uninstall 包名 -g <span class="comment"># 卸载安装指定的包</span></span><br></pre></td></tr></table></figure><h3 id="卸载包"><a href="#卸载包" class="headerlink" title="卸载包"></a>卸载包</h3><p>运行 <code>npm uninstall</code> 命令，来卸载指定的包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall pakageName</span><br></pre></td></tr></table></figure><h3 id="node-modules"><a href="#node-modules" class="headerlink" title="node_modules"></a>node_modules</h3><p>node_modules 文件夹用来存放所有已安装到项目中的包。require()导入第三方包时，就是从这个目录中查找并加载包。</p><h4 id="忽略方案"><a href="#忽略方案" class="headerlink" title="忽略方案"></a>忽略方案</h4><p>第三方包的体积过大，不方便团队成员之间共享项目源代码。</p><p>解决方案：</p><ul><li>共享时剔除node_modules，在项目根目录中，把 node_modules文件夹，添加到 <code>.gitignore</code> 忽略文件中。</li><li>创建一个叫做package.json的配置文件，即可用来记录项目中安装了哪些包。</li></ul><h3 id="package-lock-json"><a href="#package-lock-json" class="headerlink" title="package-lock.json"></a>package-lock.json</h3><p>package-lock.json 配置文件用来记录<strong>node_modules目录下的每一个包的下载信息</strong>，例如包的名字、版本号、下载地址等。</p><h3 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h3><p>npm规定，在<strong>项目根目录</strong>中，必须提供一个叫做 <code>package.json</code> 的包管理配置文件。用来记录与项目有关的一些配置信息。例如：</p><ol><li>项目的名称、版本号、描述等</li><li>项目中都用到了哪些包</li><li>哪些包只在开发期间会用到</li><li>那些包在开发和部署时都需要用到</li></ol><h4 id="快速创建-package-json"><a href="#快速创建-package-json" class="headerlink" title="快速创建 package.json"></a>快速创建 package.json</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init -y</span><br></pre></td></tr></table></figure><p>注意：</p><ol><li><code>npm init -y</code>命令只能在英文的目录下成功运行！不要使用中文，不能出现空格。</li><li>运行npm install命令安装包的时候，npm包管理工具会<strong>自动把包的名称和版本号，记录到package.json中</strong>。</li></ol><h4 id="dependencies-节点"><a href="#dependencies-节点" class="headerlink" title="dependencies 节点"></a>dependencies 节点</h4><p>package.json文件中，有一个dependencies节点，专门用来记录您使用npm install命令安装了哪些包。</p><h4 id="一次性安装所有的包"><a href="#一次性安装所有的包" class="headerlink" title="一次性安装所有的包"></a>一次性安装所有的包</h4><p>执行 <code>npm install</code> 命令时，npm 包管理工具会<strong>先读取 package.json 中的 dependencies 节点</strong>，读取到记录的所有依赖包名称和版本号之后，npm包管理工具会把这些包一次性下载到项目中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><h4 id="devDependencies-节点"><a href="#devDependencies-节点" class="headerlink" title="devDependencies 节点"></a>devDependencies 节点</h4><p>包只在项目<strong>开发阶段会用到，在项目上线之后不会用到</strong>，则建议把这些包记录到 <code>devDependencies</code> 节点中。<br>与之对应的，如果某些包在开发和项目上线之后都需要用到，则建议把这些包记录到 <code>dependencies</code> 节点中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装指定的包，并记录到 devDependencies 节点中</span></span><br><span class="line">npm install 包名 --save-dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上面命令的简写：</span></span><br><span class="line">npm i 包名 -D</span><br></pre></td></tr></table></figure><h4 id="规范的包结构"><a href="#规范的包结构" class="headerlink" title="规范的包结构"></a>规范的包结构</h4><p>一个规范的包，它的组成结构，必须符合以下3点要求：</p><ol><li>包必须以<strong>单独的目录</strong>而存在</li><li>包的顶级目录下要必须包含 <code>package.json</code> 这个包管理配置文件</li><li>package.json中必须包含 <code>name</code>,<code>version</code>,<code>main</code> 这三个属性，分别代表包的<strong>名字、版本号、包的入口</strong>。</li></ol><h3 id="npm-包开发"><a href="#npm-包开发" class="headerlink" title="npm 包开发"></a>npm 包开发</h3><h4 id="包的基本结构"><a href="#包的基本结构" class="headerlink" title="包的基本结构"></a>包的基本结构</h4><ol><li>创建文件夹作为包的<strong>根目录</strong></li><li>在文件夹中，新建如下三个文件：<ol><li>package.json(包管理配置文件）</li><li>index.js (包的入口文件）</li><li>README.md(包的说明文档）</li></ol></li><li>初始化 package.json <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;PakageName&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;index.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;test&quot;</span><span class="punctuation">:</span> <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;xxx&quot;</span><span class="punctuation">,</span><span class="string">&quot;xxx&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;license&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ISC&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="发布包"><a href="#发布包" class="headerlink" title="发布包"></a>发布包</h4><ol><li>访问 <code>https://www.npmjs.com/</code> 网站注册账号</li><li>登录账号<ol><li>npm 账号注册完成后，可以在终端中执行 <code>npm login</code> 命令，依次输入用户名、密码、邮箱后，即可登录成功</li><li>注意：在运行 <code>npm login</code> 命令之前，必须先把下包的服务器地址切换为 <strong>npm的官方服务器</strong>。否则会导致发布包失败！</li></ol></li><li>将终端切换到包的<strong>根目录</strong>，运行 <code>npm publish</code> 命令，即可将包发布到 npm上（注意：<strong>包名不能雷同</strong>）。</li></ol><h4 id="删除包"><a href="#删除包" class="headerlink" title="删除包"></a>删除包</h4><p>运行 <code>npm unpublish 包名--force</code> 命令，即可从 npm 删除已发布的包。</p><p>注意：</p><ol><li>npm unpublish 命令只能删除72小时以内发布的包</li><li>npm unpublish 删除的包，在24小时内不允许重复发布</li></ol><h1 id="Express"><a href="#Express" class="headerlink" title="Express"></a>Express</h1><h2 id="初识-Express"><a href="#初识-Express" class="headerlink" title="初识 Express"></a>初识 Express</h2><h3 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h3><p>官方文档：<a href="https://expressjs.com/zh-cn/">https://expressjs.com/zh-cn/</a></p><p>Express 的作用和 Node.js内置的http模块类似，<strong>是基于内置的http模块进一步封装出来的</strong>，专门用来创建Web服务器，能够极大的提高开发效率。<br>Express 的本质：就是一个npm上的第三方包，提供了快速创建Web服务器的便捷方法。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install express@4.17.1</span><br></pre></td></tr></table></figure><h3 id="创建基本的Web服务器"><a href="#创建基本的Web服务器" class="headerlink" title="创建基本的Web服务器"></a>创建基本的Web服务器</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>()</span><br><span class="line"><span class="keyword">const</span> port = <span class="number">3000</span></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&#x27;Hello World!&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(port, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Example app listening on port <span class="subst">$&#123;port&#125;</span>`</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="监听-GET-请求"><a href="#监听-GET-请求" class="headerlink" title="监听 GET 请求"></a>监听 GET 请求</h4><p>通过 <code>app.get()</code> 方法，可以监听客户端的GET请求</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">参数1:客户端请求的URL地址</span></span><br><span class="line"><span class="comment">参数2:请求对应的处理函数</span></span><br><span class="line"><span class="comment">req:请求对象（包含了与请求相关的属性与方法）</span></span><br><span class="line"><span class="comment">res:响应对象（包含了与响应相关的属性与方法） </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;请求URL&#x27;</span>, <span class="keyword">function</span>(<span class="params">request, response</span>) &#123;</span><br><span class="line">  <span class="comment">// 处理函数</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="监听POST请求"><a href="#监听POST请求" class="headerlink" title="监听POST请求"></a>监听POST请求</h4><p>通过 <code>app.post()</code> 方法，可以监听客户端的POST请求</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">参数1:客户端请求的URL地址</span></span><br><span class="line"><span class="comment">参数2:请求对应的处理函数</span></span><br><span class="line"><span class="comment">req:请求对象（包含了与请求相关的属性与方法）</span></span><br><span class="line"><span class="comment">res:响应对象（包含了与响应相关的属性与方法） </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;请求URL&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line">  <span class="comment">// 处理函数</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="响应客户端"><a href="#响应客户端" class="headerlink" title="响应客户端"></a>响应客户端</h4><p>通过 <code>response.send()</code> 方法，可以把处理好的内容，发送给客户端</p><h4 id="获取-URL-中携带的查询参数"><a href="#获取-URL-中携带的查询参数" class="headerlink" title="获取 URL 中携带的查询参数"></a>获取 URL 中携带的查询参数</h4><p>通过 <code>request.query</code> 对象，可以访问到客户端通过<strong>查询字符串</strong>的形式，发送到服务器的参数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;请求URL&#x27;</span>, <span class="keyword">function</span>(<span class="params">request, response</span>) &#123;</span><br><span class="line">  <span class="comment">// request.query 默认是一个空对象</span></span><br><span class="line">  request.<span class="property">query</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="获取-URL-中的动态参数"><a href="#获取-URL-中的动态参数" class="headerlink" title="获取 URL 中的动态参数"></a>获取 URL 中的动态参数</h4><p>通过 <code>request.params</code> 对象，可以访问到URL中，通过 <code>:</code> 匹配到的动态参数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;请求URL:动态参数&#x27;</span>, <span class="keyword">function</span>(<span class="params">request, response</span>) &#123;</span><br><span class="line">  <span class="comment">// request.params 默认是一个空对象</span></span><br><span class="line">  request.<span class="property">params</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="express-static"><a href="#express-static" class="headerlink" title="express.static()"></a>express.static()</h4><p><code>express.static()</code> 可以非常方便地创建一个静态资源服务器</p><p>Express 在指定的静态目录中查找文件，并对外提供资源的访问路径。<strong>存放静态文件的目录名不会出现在URL中</strong>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将 dir 目录下的文件对外开放访问</span></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">static</span>(<span class="string">&#x27;dir&#x27;</span>));</span><br></pre></td></tr></table></figure><p>挂载路径前缀：</p><p>如果希望在托管的静态资源访问路径之前，挂载路径前缀，则可以使用如下的方式：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 访问方式： http://xxxx/public/dir/..</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&#x27;/public&#x27;</span>,express.<span class="title function_">static</span>(<span class="string">&#x27;dir&#x27;</span>))</span><br></pre></td></tr></table></figure><h3 id="nodemoon"><a href="#nodemoon" class="headerlink" title="nodemoon"></a>nodemoon</h3><p><a href="https://www.npmjs.com/package/nodemon">nodemoon</a> 能够监听项目文件的变动，<strong>当代码被修改后，nodemon会自动帮我们重启项目</strong>，极大方便了开发和调试。</p><h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g nodemon</span><br></pre></td></tr></table></figure><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>将 <code>node</code> 命令替换为 <code>nodemon</code> 命令，使用 <code>nodemon xxx.js</code> 来启动项目</p><h2 id="Express-路由"><a href="#Express-路由" class="headerlink" title="Express 路由"></a>Express 路由</h2><blockquote><p>官方文档</p><ul><li>基本路由：<a href="https://expressjs.com/zh-cn/starter/basic-routing.html">https://expressjs.com/zh-cn/starter/basic-routing.html</a></li><li>路由指南：<a href="https://expressjs.com/zh-cn/guide/routing.html">https://expressjs.com/zh-cn/guide/routing.html</a></li></ul></blockquote><p>Express中，路由指的是<strong>客户端的请求</strong>与<strong>服务器处理函数</strong>之间的映射关系。</p><h3 id="基本路由"><a href="#基本路由" class="headerlink" title="基本路由"></a>基本路由</h3><p>Express中的路由分3部分组成，分别是<code>请求的类型</code>、<code>请求的URL地址</code>、<code>处理函数</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">app 是 express 的实例。</span></span><br><span class="line"><span class="comment">METHOD 是 HTTP 请求方法。</span></span><br><span class="line"><span class="comment">PATH 是服务器上的路径。</span></span><br><span class="line"><span class="comment">HANDLER 是在路由匹配时执行的函数。 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">METHOD</span>(<span class="variable constant_">PATH</span>, <span class="variable constant_">HANDLER</span>)</span><br></pre></td></tr></table></figure><h3 id="路由匹配"><a href="#路由匹配" class="headerlink" title="路由匹配"></a>路由匹配</h3><p>请求到达服务器之后，需要先经过路由的匹配，匹配时，会按照路由的<strong>先后顺序进行匹配</strong>，如果<strong>请求类型</strong>和<strong>请求的URL同时匹配成功</strong>，才会调用对应的处理函数。</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/202208261618948.png" alt="路由匹配"></p><h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// GET method route</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&#x27;GET request to the homepage&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// POST method route</span></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&#x27;POST request to the homepage&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="模块化路由"><a href="#模块化路由" class="headerlink" title="模块化路由"></a>模块化路由</h3><p>为了方便对路由进行模块化的管理，Express不建议将路由直接挂载到<code>app</code>上，而是推荐<strong>将路由抽离为单独的模块</strong>。</p><p>抽离步骤：</p><ol><li>创建路由模块对应的<code>.js</code>文件</li><li>调用 <code>express.Router()</code> 函数创建路由对象</li><li>向路由对象上挂载具体的路由</li><li>使用 <code>module.exports</code> 向外共享路由对象</li><li>使用 <code>app.use()</code> 函数<strong>注册</strong>路由模块<ol><li>app.use() 函数作用：用来注册全局中间件</li></ol></li></ol><p>定义路由：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// router.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="comment">// 创建路由对象</span></span><br><span class="line"><span class="keyword">var</span> router = express.<span class="title class_">Router</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 向路由对象上挂载具体的路由</span></span><br><span class="line">router.<span class="title function_">use</span>(<span class="keyword">function</span> <span class="title function_">timeLog</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Time: &#x27;</span>, <span class="title class_">Date</span>.<span class="title function_">now</span>());</span><br><span class="line">  <span class="title function_">next</span>();</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 定义 the home page route</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&#x27;Birds home page&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 定义 the about route</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/about&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&#x27;About birds&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 向外共享路由对象</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router;</span><br></pre></td></tr></table></figure><p>使用路由：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// server.js</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 导入路由模块</span></span><br><span class="line"><span class="keyword">const</span> userRouter = <span class="built_in">require</span>(<span class="string">&#x27;./router.js&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 使用app.use()注册路由模块。并添加统一的访问前缀/api【可选】</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&#x27;/api&#x27;</span>,userRouter);</span><br></pre></td></tr></table></figure><h2 id="Express-中间件"><a href="#Express-中间件" class="headerlink" title="Express 中间件"></a>Express 中间件</h2><blockquote><p>官方文档</p><ul><li>编写中间件：<a href="https://expressjs.com/zh-cn/guide/writing-middleware.html">https://expressjs.com/zh-cn/guide/writing-middleware.html</a></li><li>使用中间件：<a href="https://expressjs.com/zh-cn/guide/using-middleware.html">https://expressjs.com/zh-cn/guide/using-middleware.html</a></li></ul></blockquote><p>中间件（Middleware） 特指业务流程的中间处理环节。</p><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>当一个请求到达Express的服务器之后，可以连续调用多个中间件，从而对这次请求进行<strong>预处理</strong>。</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220826170212.png" alt="20220826170212"></p><p>Express 的中间件，本质上就是一个 <code>function 处理函数</code>，<strong>中间件函数的形参列表中，必须包含 <code>next</code> 参数</strong></p><p><img src="https://raw.githubusercontent.com/HaloBoys/PicGoMyDevice/main/img/20220826170744.png" alt="20220826170744"></p><p>next 函数</p><p>next 函数是实现多个中间件<strong>连续调用</strong>的关键，它表示把流转关系<strong>转交给下一个中间件或路由</strong>。</p><h3 id="中间件函数"><a href="#中间件函数" class="headerlink" title="中间件函数"></a>中间件函数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mw = <span class="keyword">function</span> (<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;这是一个最简单的中间件函数&#x27;</span>);</span><br><span class="line">  <span class="comment">// next() 方法将流转关系转交给下一个中间件或路由</span></span><br><span class="line">  <span class="title function_">next</span>();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="中间件的作用"><a href="#中间件的作用" class="headerlink" title="中间件的作用"></a>中间件的作用</h3><p>多个中间件之间，<strong>共享同一份 req 和 res 。</strong><br>基于这样的特性，我们可以在<strong>上游</strong>的中间件中，统一为 req 或 res 对象添加<strong>自定义的属性或方法</strong>，供<strong>下游</strong>的中间件或路由进行使用。</p><h3 id="全局生效的中间件"><a href="#全局生效的中间件" class="headerlink" title="全局生效的中间件"></a>全局生效的中间件</h3><p>客户端发起的任何请求，到达服务器之后，<strong>都会触发的中间件</strong>，叫做全局生效的中间件。<br>通过调用 <code>app.use(中间件函数)</code> ，即可定义一个全局生效的中间件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 全局生效的中间件</span></span><br><span class="line">app.<span class="title function_">use</span>(中间件函数)</span><br></pre></td></tr></table></figure><p>补充：可以使用 <code>app.use()</code> <strong>连续定义多个全局中间件</strong>。客户端请求到达服务器之后，会按照中间件定义的先后顺序依次进行调用。</p><h3 id="局部生效的中间件"><a href="#局部生效的中间件" class="headerlink" title="局部生效的中间件"></a>局部生效的中间件</h3><p>定义在路由参数中的中间是局部中间件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mw = <span class="keyword">function</span> (<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;局部中间件演示&#x27;</span>);</span><br><span class="line">  <span class="comment">// next() 方法将流转关系转交给下一个中间件或路由</span></span><br><span class="line">  <span class="title function_">next</span>();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 路由</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>,mw,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&#x27;HOME&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>补充：可以在路由中，通过如下两种等价的方式，使用多个局部中间件：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 写法一</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>,mw1,nw2,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&#x27;HOME&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 写法二</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>,[mw1,nw2],<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&#x27;HOME&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="中间件注意事项"><a href="#中间件注意事项" class="headerlink" title="中间件注意事项"></a>中间件注意事项</h3><ol><li>一定要在<strong>路由之前</strong>注册中间件</li><li>客户端发送过来的请求，可以连续调用多个中间件进行处理</li><li>执行完中间件的业务代码之后，<strong>必须调用next()函数</strong></li><li>为了防止代码逻辑混乱，调用next()函数后<strong>不要再写额外的代码</strong></li><li>连续调用多个中间件时，多个中间件之间，<strong>共享</strong>req和res对象</li></ol><h3 id="中间件分类"><a href="#中间件分类" class="headerlink" title="中间件分类"></a>中间件分类</h3><p>Express 官方把常见的中间件用法，分成 5大类</p><ol><li>应用级别的中间件</li><li>路由级别的中间件</li><li>错误级别的中间件</li><li>Express 内置的中间件</li><li>第三方的中间件</li></ol><h4 id="应用级别的中间件"><a href="#应用级别的中间件" class="headerlink" title="应用级别的中间件"></a>应用级别的中间件</h4><p>通过 <code>app.use()</code> 或 <code>app.get()</code> 或 <code>app.post()</code> <strong>绑定到app实例上</strong>的中间件，叫做应用级别的中间</p><h4 id="路由级别的中间件"><a href="#路由级别的中间件" class="headerlink" title="路由级别的中间件"></a>路由级别的中间件</h4><p>绑定到 <code>express.Router()</code> 实例上的中间件，叫做路由级别的中间件，路由级别中间件<strong>绑定到router实例上</strong></p><h4 id="错误级别的中间件"><a href="#错误级别的中间件" class="headerlink" title="错误级别的中间件"></a>错误级别的中间件</h4><p>错误级别中间件的作用：专门用来捕获整个项目中发生的异常错误，从而防止项目异常崩溃的问题</p><p>格式：错误级别中间件的 function 处理函数中，必须有4个形参，形参顺序从前到后，分别是（<strong>err,req,res,next</strong>）</p><p>注意：错误级别的中间件，<strong>必须注册在所有路由之后！</strong></p><h4 id="Express-内置的中间件"><a href="#Express-内置的中间件" class="headerlink" title="Express 内置的中间件"></a>Express 内置的中间件</h4><p>Express 内置了3个常用的中间件，极大的提高了Express项目的开发效率和体验：</p><ol><li>express.static 快速托管 <code>静态资源</code> 的内置中间件</li><li>express.json 解析 <code>JSON</code> 格式的请求体数据</li><li>express.urlencoded 解析 <code>URL-encoded</code> 格式的请求体数据</li></ol><h4 id="第三方的中间件"><a href="#第三方的中间件" class="headerlink" title="第三方的中间件"></a>第三方的中间件</h4><p>非 Express 官方内置的，而是由<strong>第三方开发出来的中间件</strong>，叫做第三方中间件。<br>可以按需下载并配置第三方中间件，从而提高项目的<strong>开发效率</strong>。</p><p>使用第三方中间件：</p><ol><li>运行 <code>npm install 中间件名称</code> 安装中间件</li><li>使用 <code>require</code> 导入中间件</li><li>调用 <code>app.use()</code> 注册并使用中间件</li></ol><h2 id="Express-写接口"><a href="#Express-写接口" class="headerlink" title="Express 写接口"></a>Express 写接口</h2><h3 id="解决跨域"><a href="#解决跨域" class="headerlink" title="解决跨域"></a>解决跨域</h3><p>解决接口跨域问题的方案主要有两种：</p><ol><li>CORS（推荐）</li><li>JSONP（只支持GET请习）</li></ol><h4 id="CORS-响应头"><a href="#CORS-响应头" class="headerlink" title="CORS 响应头"></a>CORS 响应头</h4><h5 id="Access-Control-Allow-Origin"><a href="#Access-Control-Allow-Origin" class="headerlink" title="Access-Control-Allow-Origin"></a>Access-Control-Allow-Origin</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">origin 参数的值指定了允许访问该资源的外域URL</span></span><br><span class="line"><span class="comment">通配符 * 表示允许来自任何域的请求 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title class_">Access</span>-<span class="title class_">Control</span>-<span class="title class_">Allow</span>-<span class="title class_">Origin</span>: &lt;origin&gt; | *</span><br></pre></td></tr></table></figure><h5 id="Access-Control-Allow-Headers"><a href="#Access-Control-Allow-Headers" class="headerlink" title="Access-Control-Allow-Headers"></a>Access-Control-Allow-Headers</h5><p>默认情况下，CORS仅支持客户端向服务器发送如下的9个请求头：</p><ol><li>Accept</li><li>Accept-Language</li><li>Content-Language</li><li>DPR</li><li>Downlink</li><li>Save-Data</li><li>Viewport-Width</li><li>Width</li><li>Content-Type</li></ol><p>如果客户端向服务器发送了额外的请求头信息则需要在服务器端，通过 <code>Access-Control-Allow-Headers</code> <strong>对额外的请求头进行声明</strong>，否则这次请求会失败！</p><h5 id="Access-Control-Allow-Methods"><a href="#Access-Control-Allow-Methods" class="headerlink" title="Access-Control-Allow-Methods"></a>Access-Control-Allow-Methods</h5><p>默认情况下，CORS仅支持客户端发起 GET、POST、HEAD 请求。</p><p>如果客户端希望通过 <code>PUT</code>、<code>DELETE</code> 等方式请求服务器的资源，则需要在服务器端，通过 <code>Access-Control-Alow-Methods</code> 来指明实际请求所允许使用的HTTP方法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 只允许 POST、GET、DELETE、HEAD请求方法</span></span><br><span class="line">res.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Methods&quot;</span>,<span class="string">&quot;POST,GET,DELETE,HEAD&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//允许所有的HTTP请求方法</span></span><br><span class="line">res.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Methods&quot;</span>,<span class="string">&quot;*&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="CORS-请求分类"><a href="#CORS-请求分类" class="headerlink" title="CORS 请求分类"></a>CORS 请求分类</h4><p>根据请求方式和请求头的不同，可以将CORS的请求分为两大类，分别是：简单请求和预检请求</p><p>简单请求和预检请求的区别：</p><ul><li>简单请求的特点：客户端与服务器之间只会发生一次请求。</li><li>预检请求的特点：客户端与服务器之间会发生两次请求，OPTION预检请求成功之后，才会发起真正的请求。</li></ul><h5 id="简单请求"><a href="#简单请求" class="headerlink" title="简单请求"></a>简单请求</h5><ol><li>请求方式：GET、POST、HEAD三者之一</li><li>HTTP 头部信息不超过以下几种字段：<strong>无自定义头部字段</strong>、Accept、Accept-Language、Content-Language、DPR、Downlink、Save-Data、Viewport-Width、Width、Content-Type</li></ol><h5 id="预检请求"><a href="#预检请求" class="headerlink" title="预检请求"></a>预检请求</h5><ol><li>请求方式为GET、POST、HEAD之外的请求 Method 类型</li><li>请求头中包含自定义头部字段</li><li>向服务器发送了 <code>application/json</code> 格式的数据</li></ol><p>在浏览器与服务器正式通信之前，浏览器会先发送<code>OPTION请求</code>进行预检，以获知服务器是否允许该实际请求，所以这一次的OPTION请求称为“预检请求”。<br><strong>服务器成功响应预检请求后，才会发送真正的请求，并且携带真实数据。</strong></p><h4 id="cors中间件解决跨域"><a href="#cors中间件解决跨域" class="headerlink" title="cors中间件解决跨域"></a>cors中间件解决跨域</h4><p>浏览器的同源安全策略默认会阻止网页<code>跨域</code>获取资源。但如果<strong>接口服务器配置了CORS相关的HTTP响应头</strong>，就可以<strong>解除</strong>浏览器端的跨域访问限制。（CORS主要在服务器端进行配置。客户端浏览器无须做任何额外的配置。）</p><p>cors 是 Express 的一个第三方中间件。通过安装和配置cors中间件，可以很方便地解决跨域问题。</p><p>使用步骤：</p><ol><li>运行 <code>npm install cors</code> 安装中间件</li><li>使用 <code>const cors = require(&#39;cors&#39;)</code> 导入中间件</li><li>在路由之前调用 <code>app.use(cors())</code> 配置中间件</li></ol><h4 id="JSONP"><a href="#JSONP" class="headerlink" title="JSONP"></a>JSONP</h4><p>JSONP 概念：</p><p>浏览器端通过<code>&lt;script&gt;</code>标签的<code>src</code>属性，请求服务器上的数据，同时，<strong>服务器返回一个函数的调用</strong>。这种请求数据的方式叫做JSONP。</p><p>特点：</p><ol><li>JSONP 不属于真正的Ajax请求，因为它没有使用<code>XMLHttpRequest</code>这个对象。</li><li>JSONP 仅支持GET请求，不支持 POST、PUT、DELETE 等请求。</li></ol><p>注意事项：</p><p>如果项目中已经配置了CORS跨域资源共享，为了防止冲突，必须在配置CORS中间件之前声明JSONP的接口</p><h1 id="数据库与身份验证"><a href="#数据库与身份验证" class="headerlink" title="数据库与身份验证"></a>数据库与身份验证</h1><h2 id="数据库的基本概念"><a href="#数据库的基本概念" class="headerlink" title="数据库的基本概念"></a>数据库的基本概念</h2><h3 id="数据库的数据组织结构"><a href="#数据库的数据组织结构" class="headerlink" title="数据库的数据组织结构"></a>数据库的数据组织结构</h3><p>在传统型数据库中，数据的组织结构分为：</p><ol><li>数据库（database)</li><li>数据表（table)</li><li>数据行（row)</li><li>字段（field）</li></ol><h2 id="安装并配置-MySQL"><a href="#安装并配置-MySQL" class="headerlink" title="安装并配置 MySQL"></a>安装并配置 MySQL</h2><h3 id="MySQL-相关软件"><a href="#MySQL-相关软件" class="headerlink" title="MySQL 相关软件"></a>MySQL 相关软件</h3><ol><li>MySQL Server: 专门用来提供数据存储和服务的软件</li><li>MySQL Workbench: 可视化的MySQL管理工具</li></ol><h2 id="MySQL的基本使用"><a href="#MySQL的基本使用" class="headerlink" title="MySQL的基本使用"></a>MySQL的基本使用</h2><h3 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h3><p>DataType 数据类型：</p><ol><li>int 整数</li><li>varchar(len)字符串</li><li>tinyint(1)布尔值</li></ol><p>字段的特殊标识：</p><ol><li>PK(Primary Key) 主键、唯一标识</li><li>NN(Not Null) 值不允许为空</li><li>UQ(Unique) 值唯一</li><li>AI(Auto Increment) 值自动增长</li></ol><h3 id="SQL-介绍"><a href="#SQL-介绍" class="headerlink" title="SQL 介绍"></a>SQL 介绍</h3><p>SQL(英文全称：Structured Query Language)是结构化查询语言，专门用来访问和处理数据库的编程语言。能够让我们以编程的形式，操作数据库里面的数据。</p><ol><li>SQL是一门数据库编程语言（SQL语句中的关键字<strong>对大小写不敏感</strong>。）</li><li>使用SQL语言编写出来的代码，叫做SQL语句</li><li>SQL语言只能在关系型数据库中使用（例如MySQL、Oracle、SQL Server)。非关系型数据库（例如 Mongodb)不支持SQL语言。</li></ol><h3 id="SQL-语句"><a href="#SQL-语句" class="headerlink" title="SQL 语句"></a>SQL 语句</h3><ol><li>查询数据（select)</li><li>插入数据（insert into)</li><li>更新数据（update)</li><li>删除数据（delete)</li></ol><p>where条件、and和or运算符、orderby排序、count(*)函数</p><h4 id="SELECT"><a href="#SELECT" class="headerlink" title="SELECT"></a>SELECT</h4><p>SELECT 语句用于从表中查询数据。执行的结果被存储在一个结果表中（称为结果集）</p><p>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 从 FROM 指定的【表中】，查询出【所有的】数据。*表示【所有列】</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 表名称</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 从 FROM 指定的【表中】，查询出指定列名称（字段）的数据。</span></span><br><span class="line"><span class="keyword">SELECT</span> 列名称 <span class="keyword">FROM</span> 表名称</span><br></pre></td></tr></table></figure><h4 id="INSERT-INTO"><a href="#INSERT-INTO" class="headerlink" title="INSERT INTO"></a>INSERT INTO</h4><p>INSERT INTO 语句用于向数据表中插入新的数据行</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 列和值要一一对应，多个列和多个值之间，使用英文的逗号分隔</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> table_name (列<span class="number">1</span>,列<span class="number">2</span>,...) <span class="keyword">VALUES</span> (值<span class="number">1</span>,值<span class="number">2</span>,...)</span><br></pre></td></tr></table></figure><h4 id="UPDATE"><a href="#UPDATE" class="headerlink" title="UPDATE"></a>UPDATE</h4><p>UPDATE 语句用于修改表中的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 用 UPDATE 指定要更新哪个表中的数据 用 SET 指定列对应的新值 用 WHERE 指定更新的条件</span></span><br><span class="line"><span class="keyword">UPDATE</span> 表名称 <span class="keyword">SET</span> 列名称 <span class="operator">=</span> 新值 <span class="keyword">WHERE</span> 列名称 <span class="operator">=</span> 某值</span><br></pre></td></tr></table></figure><h4 id="DELETE"><a href="#DELETE" class="headerlink" title="DELETE"></a>DELETE</h4><p>DELETE 语句用于删除表中的行</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 从指定的表中，根据 WHERE 条件，删除对应的数据行</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> 表名称 <span class="keyword">WHERE</span> 列名称 <span class="operator">=</span> 值</span><br></pre></td></tr></table></figure><h4 id="WHERE-子句"><a href="#WHERE-子句" class="headerlink" title="WHERE 子句"></a>WHERE 子句</h4><p>WHERE 子句用于<strong>限定</strong>选择的标准。在 SELECT、UPDATE、DELETE 语句中，皆可使用WHERE子句来限定选择的标准。 </p><h4 id="AND-和-OR-运算符"><a href="#AND-和-OR-运算符" class="headerlink" title="AND 和 OR 运算符"></a>AND 和 OR 运算符</h4><p>AND 和 OR 可在 WHERE 子语句中<strong>把两个或多个条件结合起来</strong>。AND 表示必须同时满足多个条件，OR 表示只要满足任意一个条件即可。</p><h4 id="ORDER-BY"><a href="#ORDER-BY" class="headerlink" title="ORDER BY"></a>ORDER BY</h4><p>ORDER BY 语句用于根据指定的列对结果集进行排序。</p><ul><li>ORDER BY 语句默认按照升序（<code>ASC</code>）对记录进行排序。</li><li>可以使用 <code>DESC</code> 关键字按照降序对记录进行排序。</li><li>多重排序</li></ul><h4 id="COUNT-函数"><a href="#COUNT-函数" class="headerlink" title="COUNT(*) 函数"></a>COUNT(*) 函数</h4><p>COUNT(*) 函数 用于返回查询结果的总数据条数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> 表名称</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 如果希望给查询出来的列名称设置别名，可以使用AS关键字</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">As</span> Total <span class="keyword">FROM</span> 表名称</span><br></pre></td></tr></table></figure><h2 id="Express-中操作-MySQL"><a href="#Express-中操作-MySQL" class="headerlink" title="Express 中操作 MySQL"></a>Express 中操作 MySQL</h2><h3 id="安装与配置mysql模块"><a href="#安装与配置mysql模块" class="headerlink" title="安装与配置mysql模块"></a>安装与配置mysql模块</h3><h4 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install mysql</span><br></pre></td></tr></table></figure><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mysql = <span class="built_in">require</span>(<span class="string">&#x27;mysql&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> connection = mysql.<span class="title function_">createConnection</span>(&#123;</span><br><span class="line">  host : <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">  user : <span class="string">&#x27;me&#x27;</span>,</span><br><span class="line">  password : <span class="string">&#x27;secret&#x27;</span>,</span><br><span class="line">  database : <span class="string">&#x27;my_db&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">connection.<span class="title function_">connect</span>();</span><br><span class="line"> </span><br><span class="line">connection.<span class="title function_">query</span>(<span class="string">&#x27;SELECT 1 + 1 AS solution&#x27;</span>, <span class="keyword">function</span> (<span class="params">error, results, fields</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (error) <span class="keyword">throw</span> error;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;The solution is: &#x27;</span>, results[<span class="number">0</span>].<span class="property">solution</span>);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">connection.<span class="title function_">end</span>();</span><br></pre></td></tr></table></figure><h2 id="前后端的身份认证"><a href="#前后端的身份认证" class="headerlink" title="前后端的身份认证"></a>前后端的身份认证</h2><h3 id="Web-开发模式"><a href="#Web-开发模式" class="headerlink" title="Web 开发模式"></a>Web 开发模式</h3><h4 id="服务端渲染"><a href="#服务端渲染" class="headerlink" title="服务端渲染"></a>服务端渲染</h4><p>服务端渲染的概念：服务器发送给客户端的HTML页面，是在服务器通过字符串的拼接，动态生成的</p><p>优点：</p><ol><li>前端耗时少。因为服务器端负责动态生成HTML内容，浏览器只需要直接渲染页面即可。尤其是移动端，更省电。</li><li>有利于SEO。因为服务器端响应的是完整的HTML页面内容，所以爬虫更容易爬取获得信息，更有利于SEO。</li></ol><p>缺点：</p><ol><li>占用服务器端资源。即服务器端完成HTML页面内容的拼接，如果请求较多，会对服务器造成一定的访问压力。</li><li>不利于前后端分离，开发效率低。使用服务器端渲染，则无法进行分工合作，尤其对于前端复杂度高的项目，不利于项目高效开发。</li></ol><h4 id="前后端分离"><a href="#前后端分离" class="headerlink" title="前后端分离"></a>前后端分离</h4><p>前后端分离的概念：前后端分离的开发模式，依赖于Ajax技术的广泛应用。简而言之，前后端分离的Web开发模式，就是后端只负责提供API接口，前端使用Ajax调用接口的开发模式。</p><p>优点：</p><ol><li>开发体验好。前端专注于UI页面的开发，后端专注于api的开发，且前端有更多的选择性。</li><li>用户体验好。Ajax技术的广泛应用，极大的提高了用户的体验，可以轻松实现页面的局部刷新。</li><li>减轻了服务器端的渲染压力。因为页面最终是在每个用户的浏览器中生成的。</li></ol><p>缺点：</p><ol><li>不利于SEO。因为完整的HTML页面需要在客户端动态拼接完成，所以爬虫对无法爬取页面的有效信息。(解决方案：利用Vue、React等前端框架的 <code>SSR</code> (server side render)技术能够很好的解决SEO问题！)</li></ol><h3 id="身份认证"><a href="#身份认证" class="headerlink" title="身份认证"></a>身份认证</h3><p>不同开发模式下的身份认证：</p><p>对于<code>服务端渲染</code>和<code>前后端分离</code>这两种开发模式来说，分别有着不同的身份认证方案：</p><ol><li>服务端渲染推荐使用 <code>Session 认证机制</code></li><li>前后端分离推荐使用 <code>JWT 认证机制</code></li></ol><h4 id="Session-认证机制"><a href="#Session-认证机制" class="headerlink" title="Session 认证机制"></a>Session 认证机制</h4><h5 id="HTTP协议的无状态性"><a href="#HTTP协议的无状态性" class="headerlink" title="HTTP协议的无状态性"></a>HTTP协议的无状态性</h5><p>HTTP协议的无状态性，指的是客户端的每次HTTP请求都是<strong>独立</strong>的，连续多个请求之间没有直接的关系，服务器<strong>不会主动保留每次HTTP请求的状态</strong>。</p><h5 id="解决-HTTP-无状态的限制"><a href="#解决-HTTP-无状态的限制" class="headerlink" title="解决 HTTP 无状态的限制"></a>解决 HTTP 无状态的限制</h5><p>客户端第一次请求服务器的时候，服务器通过<strong>响应头的形式</strong>，向客户端发送一个身份认证的Cookie,客户端会自动将Cookie保存在浏览器中。随后，当客户端浏览器每次请求服务器的时候，浏览器会自动将身份认证相关的Cookie,通过请求头的形式发送给服务器，服务器即可验明客户端的身份。</p><h5 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h5><p>Cookie 是<strong>存储在用户浏览器中的一段不超过4KB的字符串</strong>。它由一个<strong>名称</strong>（Name)、一个<strong>值</strong>（Value)和其它几个用于控制 Cookie 有效期、安全性、使用范围 的可选属性组成。<br>不同域名下的 Cookie <strong>各自独立</strong>，每当客户端发起请求时，会<strong>自动</strong>把当前域名下所有未过期的 Cookie 一同发送到服务器。</p><h5 id="Cookie-特性"><a href="#Cookie-特性" class="headerlink" title="Cookie 特性"></a>Cookie 特性</h5><ol><li>自动发送</li><li>域名独立</li><li>过期时限</li><li>4KB限制</li></ol><h5 id="Cookie-安全性"><a href="#Cookie-安全性" class="headerlink" title="Cookie 安全性"></a>Cookie 安全性</h5><p>由于Cookie是存储在浏览器中的，而且浏览器也提供了读写Cookie的API,因此Cookie很容易被伪造，不具有安全性。因此不建议服务器将重要的隐私数据，通过Cookie的形式发送给浏览器。<br>注意：千万不要使用Cookie存储重要且隐私的数据！比如用户的身份信息、密码等。</p><h5 id="Session-的工作原理"><a href="#Session-的工作原理" class="headerlink" title="Session 的工作原理"></a>Session 的工作原理</h5><p><img src="https://raw.githubusercontent.com/HaloBoys/PicGoMyDevice/main/img/Session.jpg" alt="Session"></p><h5 id="Session-认证的局限性"><a href="#Session-认证的局限性" class="headerlink" title="Session 认证的局限性"></a>Session 认证的局限性</h5><p>Session认证机制需要配合Cookie才能实现。由于Cookie默认不支持跨域访问，所以，当涉及到前端跨域请求后端接口的时候，需要做很多额外的配置，才能实现跨域Session认证。</p><p>注意：</p><ol><li>当前端请求后端接口<strong>不存在跨域问题</strong>的时候，推荐使用Session身份认证机制。</li><li>当前端需要跨域请求后端接口的时候，不推荐使用Session身份认证机制，推荐使用<code>JWT</code>认证机制。</li></ol><h5 id="Express-中使用-Session-认证"><a href="#Express-中使用-Session-认证" class="headerlink" title="Express 中使用 Session 认证"></a>Express 中使用 Session 认证</h5><p>express-session：<a href="https://www.npmjs.com/package/express-session">https://www.npmjs.com/package/express-session</a></p><h4 id="JWT-认证机制"><a href="#JWT-认证机制" class="headerlink" title="JWT 认证机制"></a>JWT 认证机制</h4><p>JWT (英文全称：JSON Web Token) 是目前最流行的跨域认证解决方案。</p><h5 id="JWT-工作原理"><a href="#JWT-工作原理" class="headerlink" title="JWT 工作原理"></a>JWT 工作原理</h5><p><img src="https://raw.githubusercontent.com/HaloBoys/PicGoMyDevice/main/img/20220827155819.png" alt="20220827155819"></p><p>原理：用户的信息通过Token字符串的形式，保存在客户端浏览器中。服务器通过还原Token字符串的形式来认证用户的身份。</p><h5 id="JWT-组成部分"><a href="#JWT-组成部分" class="headerlink" title="JWT 组成部分"></a>JWT 组成部分</h5><p>JWT 通常由三部分组成，分别是 <code>Header（头部）</code>、<code>Payload（有效荷载）</code>、<code>Signature（签名）</code>。三者之间使用英文的 <code>.</code> 分隔</p><p>Payload 部分才是真正的用户信息，它是用户信息经过加密之后生成的字符串。<br>Header 和 Signature 是安全性相关的部分，只是为了保证 Token 的安全性。</p><h5 id="JWT-使用方式"><a href="#JWT-使用方式" class="headerlink" title="JWT 使用方式"></a>JWT 使用方式</h5><p>客户端收到服务器返回的 JWT 之后，通常会将它储存在 localStorage 或 sessionStorage 中。<br>此后，客户端每次与服务器通信，都要带上这个JWT的字符串，从而进行身份认证。推荐的做法是把 JWT 放在 HTTP请求头的 <code>Authorization</code> 字段中，格式如下：</p><h5 id="Express-中使用-JWT"><a href="#Express-中使用-JWT" class="headerlink" title="Express 中使用 JWT"></a>Express 中使用 JWT</h5><p>jsonwebtoken：<a href="https://www.npmjs.com/package/jsonwebtoken">https://www.npmjs.com/package/jsonwebtoken</a><br>express-jwt：<a href="https://www.npmjs.com/package/express-jwt">https://www.npmjs.com/package/express-jwt</a></p><p>jsonwebtoken 用于<strong>生成</strong>JWT字符串<br>express-jwt 用于将JWT字符串解析<strong>还原</strong>成JSON对象</p><h1 id="Todo"><a href="#Todo" class="headerlink" title="Todo"></a>Todo</h1><div class='checkbox green'><input type="checkbox" />            <p>大事件API接口项目 文档：<a href="http://www.escook.cn:8088/#/">http://www.escook.cn:8088/#/</a> 教程：<a href="https://www.bilibili.com/video/BV1a34y167AZ?p=77&amp;vd_source=3ed70d49b47a074637711a68e7f42b04">https://www.bilibili.com/video/BV1a34y167AZ?p=77&amp;vd_source=3ed70d49b47a074637711a68e7f42b04</a></p>            </div>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> Node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WebPack</title>
      <link href="/2022/08/22%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF_WebPack/976189ad/"/>
      <url>/2022/08/22%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF_WebPack/976189ad/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>官方文档：<a href="https://www.webpackjs.com">https://www.webpackjs.com</a><br>参考文档：<a href="http://xxpromise.gitee.io/webpack5-docs">http://xxpromise.gitee.io/webpack5-docs</a></p><h2 id="为什么需要打包工具？"><a href="#为什么需要打包工具？" class="headerlink" title="为什么需要打包工具？"></a>为什么需要打包工具？</h2><p>开发时，我们会使用框架（React、Vue),ES6模块化语法，Less/Sass等cs预处理器等语法进行开发。这样的代码要想在浏览器运行<strong>必须经过编译成浏览器能识别的JS、Css等语法</strong>，才能运行。所以我们需要打包工具帮我们做完这些事。除此之外，打包工具还能<strong>压缩代码、做兼容性处理、提升代码性能</strong>等。</p><h2 id="有哪些打包工具？"><a href="#有哪些打包工具？" class="headerlink" title="有哪些打包工具？"></a>有哪些打包工具？</h2><ul><li>Grunt</li><li>Gulp</li><li>Parcel</li><li>Webpack</li><li>Rollup</li><li>Vite</li><li>…</li></ul><h2 id="Webpack-介绍"><a href="#Webpack-介绍" class="headerlink" title="Webpack 介绍"></a>Webpack 介绍</h2><p>Webpack是一个静态资源打包工具。它会以一个或多个文件作为打包的入口，将我们整个项目所有文件编译组合成一个或多个文件输出出去。<br>Webpack输出的文件叫做 <code>bundle</code></p><h2 id="WebPack-快速开始"><a href="#WebPack-快速开始" class="headerlink" title="WebPack 快速开始"></a>WebPack 快速开始</h2><p>WebPack 安装：<a href="https://www.webpackjs.com/guides/installation/">https://www.webpackjs.com/guides/installation/</a></p><ol><li>项目根目录运行 <code>npm init -y</code> 初始化 <code>package.json</code> 文件</li><li><code>npm install --save-dev webpack</code></li><li><code>npm install --save-dev webpack-cli</code> 【 webpack 4+ 版本，需要安装 CLI】</li><li>执行 <code>npx webpack ./src/main.js --mode=[development/production]</code></li></ol><h1 id="五大概念"><a href="#五大概念" class="headerlink" title="五大概念"></a>五大概念</h1><h2 id="entry-入口）"><a href="#entry-入口）" class="headerlink" title="entry(入口）"></a>entry(入口）</h2><p>指示Webpack从哪个文件开始打包</p><h2 id="output-输出）"><a href="#output-输出）" class="headerlink" title="output(输出）"></a>output(输出）</h2><p>指示Webpack打包完的文件输出到哪里去，如何命名等</p><h2 id="loader-加载器）"><a href="#loader-加载器）" class="headerlink" title="loader(加载器）"></a>loader(加载器）</h2><p>Webpack本身只能处理 <code>js、json</code> 等资源，其他资源需要借助 loader, Webpack才能解析</p><h2 id="plugins-插件）"><a href="#plugins-插件）" class="headerlink" title="plugins(插件）"></a>plugins(插件）</h2><p>扩展Webpack的功能</p><h2 id="mode-模式）"><a href="#mode-模式）" class="headerlink" title="mode(模式）"></a>mode(模式）</h2><h3 id="mode-development"><a href="#mode-development" class="headerlink" title="mode: development"></a>mode: development</h3><p>开发模式主要做两件事：</p><ol><li>编译代码，使浏览器能识别运行<br>开发时我们有样式资源、字体图标、图片资源、html资源等，webpack默认都不能处理这些资源，所以我们要<strong>加载配置</strong>来编译这些资源</li><li>代码质量检查，树立代码规范<br>提前检查代码的一些隐患，让代码运行时能更加健壮。<br>提前检查代码规范和格式，统一团队编码风格，让代码更优雅美观。</li></ol><h3 id="mode-production"><a href="#mode-production" class="headerlink" title="mode: production"></a>mode: production</h3><p>生产模式是开发完成代码后，生成代码将来部署上线。这个模式下我们主要对代码进行优化，让其运行性能更好。</p><p>主要从两个角度出发:</p><ol><li>优化代码运行性能</li><li>优化代码打包速度</li></ol><h3 id="模式配置"><a href="#模式配置" class="headerlink" title="模式配置"></a>模式配置</h3><h4 id="文件目录"><a href="#文件目录" class="headerlink" title="文件目录"></a>文件目录</h4><p>需要分别准备两个配置文件来放不同的配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">├── webpack (项目根目录)</span><br><span class="line">    ├── config (Webpack配置文件目录)</span><br><span class="line">    │    ├── webpack.dev.js(开发模式配置文件)</span><br><span class="line">    │    └── webpack.prod.js(生产模式配置文件)</span><br></pre></td></tr></table></figure><h4 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx webpack --config ./config/webpack.prod.js</span><br></pre></td></tr></table></figure><h4 id="配置运行指令"><a href="#配置运行指令" class="headerlink" title="配置运行指令"></a>配置运行指令</h4><p>为了方便运行不同模式的指令，可以将指令定义在 <code>package.json</code> 中 <code>scripts</code> 里面</p><p>快捷启动指令：</p><ul><li>开发模式：npm start 或 npm run dev</li><li>生产模式：npm run build</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;npm run dev&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;npx webpack serve --config ./config/webpack.dev.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;npx webpack --config ./config/webpack.prod.js&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h1 id="配置-configuration"><a href="#配置-configuration" class="headerlink" title="配置(configuration)"></a>配置(configuration)</h1><h2 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h2><p>在项目根目录下新建文件：<strong>webpack.config.js</strong></p><p>配置完成后直接在终端运行：<code>npx webpack</code> 即可，它会找到 webpack.config.js 文件中的入口进行打包</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">   <span class="comment">// 入口</span></span><br><span class="line">   <span class="attr">entry</span>: <span class="string">&#x27;./src/main.js&#x27;</span>,</span><br><span class="line">   <span class="comment">// 输出</span></span><br><span class="line">   <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="comment">// 绝对路径</span></span><br><span class="line">    <span class="attr">path</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;dist&#x27;</span>),</span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;foo.bundle.js&#x27;</span></span><br><span class="line">   &#125;,</span><br><span class="line">   <span class="comment">// 加载器</span></span><br><span class="line">   <span class="attr">module</span>: &#123;</span><br><span class="line">      <span class="attr">rules</span>: [</span><br><span class="line">      <span class="comment">// 模块规则（配置 loader、解析器等选项）</span></span><br><span class="line">    ],</span><br><span class="line">   &#125;,</span><br><span class="line">   <span class="comment">// 插件</span></span><br><span class="line">   <span class="attr">plugins</span>: [</span><br><span class="line">     <span class="comment">//...</span></span><br><span class="line">   ],</span><br><span class="line">   <span class="comment">// 模式</span></span><br><span class="line">   <span class="attr">mode</span>: <span class="string">&#x27;development&#x27;</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="入口文件打包输出文件名"><a href="#入口文件打包输出文件名" class="headerlink" title="入口文件打包输出文件名"></a>入口文件打包输出文件名</h2><p>默认所有文件都是打包在一个目录中，显得结构非常乱，可以配置不同文件的打包路径</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">```javascript</span><br><span class="line">const path = require(&#x27;path&#x27;);</span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line">   // 入口</span><br><span class="line">   entry: &#x27;./src/main.js&#x27;,</span><br><span class="line">   // 输出</span><br><span class="line">   output: &#123;</span><br><span class="line">    // 绝对路径</span><br><span class="line">    path: path.resolve(__dirname, &#x27;dist&#x27;),</span><br><span class="line"><span class="deletion">-    filename: &#x27;foo.bundle.js&#x27;</span></span><br><span class="line"><span class="addition">+    filename: &#x27;static/js/foo.bundle.js&#x27;</span></span><br><span class="line">   &#125;,</span><br><span class="line">   // 加载器</span><br><span class="line">   module: &#123;</span><br><span class="line">      rules: [</span><br><span class="line">    # 如图片静态资源</span><br><span class="line"><span class="addition">+   &#123;</span></span><br><span class="line"><span class="addition">+       test:/\.(png|jpe?g|gif|webp|svg)$/,</span></span><br><span class="line"><span class="addition">+       type:&quot;asset&quot;,</span></span><br><span class="line"><span class="addition">+       parser:&#123;</span></span><br><span class="line"><span class="addition">+           dataUr1Condition:&#123;</span></span><br><span class="line"><span class="addition">+           # 小于10kb的图片转base64</span></span><br><span class="line"><span class="addition">+           # 优点：减少请求数量缺点：体积会更大</span></span><br><span class="line"><span class="addition">+           maxSize:10*1024,//10kb</span></span><br><span class="line"><span class="addition">+           &#125;,</span></span><br><span class="line"><span class="addition">+       &#125;,</span></span><br><span class="line"><span class="addition">+   &#125;,</span></span><br><span class="line"><span class="addition">+    generator: &#123;</span></span><br><span class="line"><span class="addition">+       # 输出图片名称及路径</span></span><br><span class="line"><span class="addition">+       # [hash:10] hash 值取前 10 位</span></span><br><span class="line"><span class="addition">+       filename: &#x27;static/images/[hash:10][ext][query]&#x27;,</span></span><br><span class="line"><span class="addition">+    &#125;,</span></span><br><span class="line">    ],</span><br><span class="line">   &#125;,</span><br><span class="line">   // 插件</span><br><span class="line">   plugins: [</span><br><span class="line">     //...</span><br><span class="line">   ],</span><br><span class="line">   // 模式</span><br><span class="line">   mode: &#x27;development&#x27;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="自动清空上次打包内容"><a href="#自动清空上次打包内容" class="headerlink" title="自动清空上次打包内容"></a>自动清空上次打包内容</h2><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">   output: &#123;</span><br><span class="line">    path: path.resolve(__dirname, &#x27;dist&#x27;),</span><br><span class="line">    filename: &#x27;static/js/foo.bundle.js&#x27;,</span><br><span class="line"><span class="addition">+   # 原理：在打包前，将path整个目录内容清空，再进行打包</span></span><br><span class="line"><span class="addition">+   clean: true,</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="loader"><a href="#loader" class="headerlink" title="loader"></a>loader</h1><p>文档：<a href="https://www.webpackjs.com/loaders/">https://www.webpackjs.com/loaders/</a></p><p>如果遇到 webpack 不能处理的资源，都需要找到对应的 loader 对其进行转换。</p><h2 id="使用-loader"><a href="#使用-loader" class="headerlink" title="使用 loader"></a>使用 loader</h2><p>有<strong>三种</strong>使用 loader 的方式：</p><h3 id="配置（推荐）"><a href="#配置（推荐）" class="headerlink" title="配置（推荐）"></a>配置（推荐）</h3><p>在 webpack.config.js 文件中指定 loader</p><p><strong>module.rules</strong> 允许在 webpack 配置中指定多个 loader：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.css$/</span>,</span><br><span class="line">        <span class="attr">use</span>: [</span><br><span class="line">          &#123; <span class="attr">loader</span>: <span class="string">&#x27;style-loader&#x27;</span> &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">loader</span>: <span class="string">&#x27;css-loader&#x27;</span>,</span><br><span class="line">            <span class="attr">options</span>: &#123;</span><br><span class="line">              <span class="attr">modules</span>: <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="内联"><a href="#内联" class="headerlink" title="内联"></a>内联</h3><p>见文档</p><h3 id="CLI"><a href="#CLI" class="headerlink" title="CLI"></a>CLI</h3><p>见文档</p><h2 id="loader-特性"><a href="#loader-特性" class="headerlink" title="loader 特性"></a>loader 特性</h2><ol><li>loader 支持链式传递。能够对资源使用流水线(pipeline)。<strong>多个 loader 执行顺序：从右到左</strong>。loader 链中的第一个 loader 返回值给下一个 loader。在最后一个 loader，返回 webpack 所预期的 JavaScript。</li><li>loader 可以是同步的，也可以是异步的。</li><li>loader 运行在 Node.js 中，并且能够执行任何可能的操作。</li><li>loader 接收查询参数。用于对 loader 传递配置。</li><li>loader 也能够使用 options 对象进行配置。</li><li>除了使用 package.json 常见的 main 属性，还可以将普通的 npm 模块导出为 loader，做法是在 package.json 里定义一个 loader 字段。</li><li>插件(plugin)可以为 loader 带来更多特性。</li><li>loader 能够产生额外的任意文件。</li></ol><h2 id="处理样式资源"><a href="#处理样式资源" class="headerlink" title="处理样式资源"></a>处理样式资源</h2><p>Webpack本身是不能识别样式资源的，所以我们需要借助 Loader 来处理 <strong>Css、Less、Sass、Scss、Styl</strong> 样式资源</p><h3 id="css-loader"><a href="#css-loader" class="headerlink" title="css-loader"></a>css-loader</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev css-loader</span><br><span class="line">npm install --save-dev style-loader</span><br></pre></td></tr></table></figure><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>webpack.config.js</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  module: &#123;</span><br><span class="line"><span class="addition">+    rules: [</span></span><br><span class="line"><span class="addition">+      &#123;</span></span><br><span class="line"><span class="addition">+        test: /\.css$/,</span></span><br><span class="line">        #  注意执行顺序是从后往前</span><br><span class="line"><span class="addition">+        use: [ &#x27;style-loader&#x27;, &#x27;css-loader&#x27; ]</span></span><br><span class="line"><span class="addition">+      &#125;</span></span><br><span class="line"><span class="addition">+    ]</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="less-loader"><a href="#less-loader" class="headerlink" title="less-loader"></a>less-loader</h3><p>less-loader：<a href="https://www.webpackjs.com/loaders/less-loader/">https://www.webpackjs.com/loaders/less-loader/</a></p><h3 id="sass-loader"><a href="#sass-loader" class="headerlink" title="sass-loader"></a>sass-loader</h3><p>sass-loader：<a href="https://www.webpackjs.com/loaders/sass-loader/">https://www.webpackjs.com/loaders/sass-loader/</a></p><h2 id="处理图片资源"><a href="#处理图片资源" class="headerlink" title="处理图片资源"></a>处理图片资源</h2><p>过去在Webpack4时，我们处理图片资源通过 <code>file-loader</code> 和 <code>url-loader</code> 进行处理<br>现在Webpack5已经将两个Loader功能内置到Webpack里了，我们只需要简单配置即可处理图片资源</p><p>拓展：</p><p>一般<strong>体积较小的图片会将其转换为 base64 格式</strong>，优点：减少请求数量缺点：体积会更大</p><p>webpack.config.js:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    // 加载器</span><br><span class="line">    module: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      // 模块规则（配置 loader、解析器等选项）</span><br><span class="line"><span class="addition">+   &#123;</span></span><br><span class="line"><span class="addition">+       test:/\.(png|jpe?g|gif|webp|svg)$/,</span></span><br><span class="line"><span class="addition">+       type:&quot;asset&quot;,</span></span><br><span class="line"><span class="addition">+       parser:&#123;</span></span><br><span class="line"><span class="addition">+           dataUr1Condition:&#123;</span></span><br><span class="line"><span class="addition">+           # 小于10kb的图片转base64</span></span><br><span class="line"><span class="addition">+           # 优点：减少请求数量缺点：体积会更大</span></span><br><span class="line"><span class="addition">+           maxSize:10*1024,//10kb</span></span><br><span class="line"><span class="addition">+           &#125;,</span></span><br><span class="line"><span class="addition">+       &#125;,</span></span><br><span class="line"><span class="addition">+   &#125;,</span></span><br><span class="line"><span class="addition">+    generator: &#123;</span></span><br><span class="line"><span class="addition">+       # 输出图片名称及路径</span></span><br><span class="line"><span class="addition">+       # [hash:10] hash 值取前 10 位</span></span><br><span class="line"><span class="addition">+       filename: &#x27;static/images/[hash:10][ext][query]&#x27;,</span></span><br><span class="line"><span class="addition">+    &#125;,</span></span><br><span class="line">    ],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="处理字体图标资源和其他资源"><a href="#处理字体图标资源和其他资源" class="headerlink" title="处理字体图标资源和其他资源"></a>处理字体图标资源和其他资源</h2><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  module: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">        # `type: &quot;asset/resource&quot;` 和 `type: &quot;asset&quot;`的区别：</span><br><span class="line">        # 1. `type: &quot;asset/resource&quot;` 相当于`file-loader`, 将文件转化成 Webpack 能识别的资源，其他不做处理</span><br><span class="line">        # 2. `type: &quot;asset&quot;` 相当于`url-loader`, 将文件转化成 Webpack 能识别的资源，同时小于某个大小的资源会处理成 data URI 形式</span><br><span class="line"><span class="addition">+      &#123;</span></span><br><span class="line"><span class="addition">+        test: /\.(ttf|woff2?|map4|map3|avi)$/,</span></span><br><span class="line"><span class="addition">+        type: &quot;asset/resource&quot;,</span></span><br><span class="line"><span class="addition">+        generator: &#123;</span></span><br><span class="line"><span class="addition">+          filename: &quot;static/media/[hash:8][ext][query]&quot;,</span></span><br><span class="line"><span class="addition">+        &#125;,</span></span><br><span class="line"><span class="addition">+      &#125;,</span></span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="处理-js-资源"><a href="#处理-js-资源" class="headerlink" title="处理 js 资源"></a>处理 js 资源</h2><blockquote><ol><li>团队对代码格式是有严格要求的，我们不能由肉眼去检测代码格式，需要使用专业的工具（<code>Eslint</code>）来检测。</li><li>Webpack 对 js 处理是有限的，只能编译 js 中 ES 模块化语法，不能编译其他语法，导致 js 不能在低版本浏览器中运行。（<code>Babel</code>）</li></ol></blockquote><h3 id="Eslint-（代码格式）"><a href="#Eslint-（代码格式）" class="headerlink" title="Eslint （代码格式）"></a>Eslint （代码格式）</h3><p>参考：<a href="http://xxpromise.gitee.io/webpack5-docs/base/javascript.html#eslint">http://xxpromise.gitee.io/webpack5-docs/base/javascript.html#eslint</a></p><h4 id="在-Webpack-中使用"><a href="#在-Webpack-中使用" class="headerlink" title="在 Webpack 中使用"></a>在 Webpack 中使用</h4><h5 id="下载包"><a href="#下载包" class="headerlink" title="下载包"></a>下载包</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i eslint-webpack-plugin eslint -D</span><br></pre></td></tr></table></figure><h5 id="创建-eslintrc-js-配置文件"><a href="#创建-eslintrc-js-配置文件" class="headerlink" title="创建.eslintrc.js 配置文件"></a>创建.eslintrc.js 配置文件</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">// 继承 Eslint 规则</span></span><br><span class="line">  <span class="attr">extends</span>: [<span class="string">&quot;eslint:recommended&quot;</span>],</span><br><span class="line">  <span class="attr">env</span>: &#123;</span><br><span class="line">    <span class="attr">node</span>: <span class="literal">true</span>, <span class="comment">// 启用node中全局变量</span></span><br><span class="line">    <span class="attr">browser</span>: <span class="literal">true</span>, <span class="comment">// 启用浏览器中全局变量</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">parserOptions</span>: &#123;</span><br><span class="line">    <span class="attr">ecmaVersion</span>: <span class="number">6</span>,</span><br><span class="line">    <span class="attr">sourceType</span>: <span class="string">&quot;module&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">rules</span>: &#123;</span><br><span class="line">    <span class="string">&quot;no-var&quot;</span>: <span class="number">2</span>, <span class="comment">// 不能使用 var 定义变量</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="webpack-config-js"><a href="#webpack-config-js" class="headerlink" title="webpack.config.js"></a>webpack.config.js</h5><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="addition">+ const ESLintWebpackPlugin = require(&quot;eslint-webpack-plugin&quot;);</span></span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line">  plugins: [</span><br><span class="line"><span class="addition">+    new ESLintWebpackPlugin(&#123;</span></span><br><span class="line"><span class="addition">+      # 指定检查文件的根目录</span></span><br><span class="line"><span class="addition">+      context: path.resolve(__dirname, &quot;src&quot;),</span></span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h5><p>推荐在 vscode 中安装 Eslint 插件，即可不用编译就能看到错误，可以提前解决。<br>但是此时就会对项目<strong>所有文件</strong>默认进行 Eslint 检查了，dist 目录下的打包后文件就会报错。<br>但是我们<strong>只需要检查 src 下面的文件</strong>，不需要检查 dist 下面的文件。所以可以使用 <strong>Eslint 忽略文件</strong>解决。<br>在项目根目录新建 <code>.eslintignore</code> 文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 忽略dist目录下所有文件</span><br><span class="line">dist</span><br></pre></td></tr></table></figure><h3 id="Babel-（兼容性处理）"><a href="#Babel-（兼容性处理）" class="headerlink" title="Babel （兼容性处理）"></a>Babel （兼容性处理）</h3><p>参考：<a href="http://xxpromise.gitee.io/webpack5-docs/base/javascript.html#babel">http://xxpromise.gitee.io/webpack5-docs/base/javascript.html#babel</a></p><h2 id="处理-Html-资源"><a href="#处理-Html-资源" class="headerlink" title="处理 Html 资源"></a>处理 Html 资源</h2><p>默认 html 中需要我们手动地去引入打包好的资源，随着项目复杂程度越来越高，手动引入效率低，容易出错。webpack 中可以通过插件来自动引入。</p><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i html-webpack-plugin -D</span><br></pre></td></tr></table></figure><h3 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h3><p>webpack.config.js</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="addition">+ const HtmlWebpackPlugin = require(&quot;html-webpack-plugin&quot;);</span></span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line">  plugins: [</span><br><span class="line"><span class="addition">+    new HtmlWebpackPlugin(&#123;</span></span><br><span class="line"><span class="addition">+      # 以 public/index.html 为模板创建文件</span></span><br><span class="line"><span class="addition">+      # 新的html文件有两个特点：1. 内容和源文件一致 2. 自动引入打包生成的js等资源</span></span><br><span class="line"><span class="addition">+      template: path.resolve(__dirname, &quot;public/index.html&quot;),</span></span><br><span class="line"><span class="addition">+    &#125;),</span></span><br><span class="line">  ],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="自动化（devServer）"><a href="#自动化（devServer）" class="headerlink" title="自动化（devServer）"></a>自动化（devServer）</h1><p>每次改完源代码都需要手动输入指令才能编译代码，效率低。可以通过 <code>webpack-dev-server</code> 实现自动化编译。所有代码都会在<strong>内存中编译打包</strong>，并不会输出到 dist 目录下</p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i webpack-dev-server -D</span><br></pre></td></tr></table></figure><h2 id="配置-2"><a href="#配置-2" class="headerlink" title="配置"></a>配置</h2><p>webpack.config.js</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  // 开发服务器（不会输出资源，在内存中编译打包的）</span><br><span class="line"><span class="addition">+  devServer: &#123;</span></span><br><span class="line"><span class="addition">+    host: &quot;localhost&quot;, // 启动服务器域名</span></span><br><span class="line"><span class="addition">+    port: &quot;3000&quot;, // 启动服务器端口号</span></span><br><span class="line"><span class="addition">+    open: true, // 是否自动打开浏览器</span></span><br><span class="line"><span class="addition">+  &#125;,</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="运行指令"><a href="#运行指令" class="headerlink" title="运行指令"></a>运行指令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx webpack serve</span><br></pre></td></tr></table></figure><h1 id="Css-处理"><a href="#Css-处理" class="headerlink" title="Css 处理"></a>Css 处理</h1><h2 id="提取-Css-成单独文件"><a href="#提取-Css-成单独文件" class="headerlink" title="提取 Css 成单独文件"></a>提取 Css 成单独文件</h2><p>Css 文件目前被打包到 js 文件中，当 js 文件加载时，会创建一个 style 标签来生成样式。这样对于网站来说，会出现<strong>闪屏现象</strong>，用户体验不好，我们应该是单独的 Css 文件，<strong>通过 link 标签加载</strong>性能才好。webpack 中有 <code>mini-css-extract-plugin</code> 插件可以帮助我们做到。</p><h3 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i mini-css-extract-plugin -D</span><br></pre></td></tr></table></figure><h3 id="配置-3"><a href="#配置-3" class="headerlink" title="配置"></a>配置</h3><p>webpack.prod.js</p><p><strong>注意：所有使用 <code>&quot;style-loader&quot;</code> 的地方都要替换成：<code>MiniCssExtractPlugin.loader</code></strong></p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="addition">+ const MiniCssExtractPlugin = require(&quot;mini-css-extract-plugin&quot;);</span></span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line">  plugins: [</span><br><span class="line"><span class="addition">+    // 提取css成单独文件</span></span><br><span class="line"><span class="addition">+    new MiniCssExtractPlugin(&#123;</span></span><br><span class="line"><span class="addition">+      // 定义输出文件名和目录</span></span><br><span class="line"><span class="addition">+      filename: &quot;static/css/main.css&quot;,</span></span><br><span class="line"><span class="addition">+    &#125;),</span></span><br><span class="line">  ],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="Css-兼容性处理"><a href="#Css-兼容性处理" class="headerlink" title="Css 兼容性处理"></a>Css 兼容性处理</h2><h3 id="安装-3"><a href="#安装-3" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i postcss-loader postcss postcss-preset-env -D</span><br></pre></td></tr></table></figure><h3 id="配置-4"><a href="#配置-4" class="headerlink" title="配置"></a>配置</h3><p>webpack.prod.js</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  module: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        // 用来匹配 .css 结尾的文件</span><br><span class="line">        test: /\.css$/,</span><br><span class="line">        // use 数组里面 Loader 执行顺序是从右到左</span><br><span class="line">        use: [</span><br><span class="line">          MiniCssExtractPlugin.loader,</span><br><span class="line">          &quot;css-loader&quot;,</span><br><span class="line">          &#123;</span><br><span class="line"><span class="addition">+            loader: &quot;postcss-loader&quot;,</span></span><br><span class="line"><span class="addition">+            options: &#123;</span></span><br><span class="line"><span class="addition">+              postcssOptions: &#123;</span></span><br><span class="line"><span class="addition">+                plugins: [</span></span><br><span class="line"><span class="addition">+                  &quot;postcss-preset-env&quot;, // 能解决大多数样式兼容性问题</span></span><br><span class="line"><span class="addition">+                ],</span></span><br><span class="line"><span class="addition">+              &#125;,</span></span><br><span class="line"><span class="addition">+            &#125;,</span></span><br><span class="line">          &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: /\.less$/,</span><br><span class="line">        use: [</span><br><span class="line">          MiniCssExtractPlugin.loader,</span><br><span class="line">          &quot;css-loader&quot;,</span><br><span class="line">          &#123;</span><br><span class="line"><span class="addition">+            loader: &quot;postcss-loader&quot;,</span></span><br><span class="line"><span class="addition">+            options: &#123;</span></span><br><span class="line"><span class="addition">+              postcssOptions: &#123;</span></span><br><span class="line"><span class="addition">+                plugins: [</span></span><br><span class="line"><span class="addition">+                  &quot;postcss-preset-env&quot;, // 能解决大多数样式兼容性问题</span></span><br><span class="line"><span class="addition">+                ],</span></span><br><span class="line"><span class="addition">+              &#125;,</span></span><br><span class="line"><span class="addition">+            &#125;,</span></span><br><span class="line">          &#125;,</span><br><span class="line">          &quot;less-loader&quot;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: /\.s[ac]ss$/,</span><br><span class="line">        use: [</span><br><span class="line">          MiniCssExtractPlugin.loader,</span><br><span class="line">          &quot;css-loader&quot;,</span><br><span class="line">          &#123;</span><br><span class="line"><span class="addition">+            loader: &quot;postcss-loader&quot;,</span></span><br><span class="line"><span class="addition">+            options: &#123;</span></span><br><span class="line"><span class="addition">+              postcssOptions: &#123;</span></span><br><span class="line"><span class="addition">+                plugins: [</span></span><br><span class="line"><span class="addition">+                  &quot;postcss-preset-env&quot;, // 能解决大多数样式兼容性问题</span></span><br><span class="line"><span class="addition">+                ],</span></span><br><span class="line"><span class="addition">+              &#125;,</span></span><br><span class="line"><span class="addition">+            &#125;,</span></span><br><span class="line">          &#125;,</span><br><span class="line">          &quot;sass-loader&quot;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: /\.styl$/,</span><br><span class="line">        use: [</span><br><span class="line">          MiniCssExtractPlugin.loader,</span><br><span class="line">          &quot;css-loader&quot;,</span><br><span class="line">          &#123;</span><br><span class="line"><span class="addition">+            loader: &quot;postcss-loader&quot;,</span></span><br><span class="line"><span class="addition">+            options: &#123;</span></span><br><span class="line"><span class="addition">+              postcssOptions: &#123;</span></span><br><span class="line"><span class="addition">+                plugins: [</span></span><br><span class="line"><span class="addition">+                  &quot;postcss-preset-env&quot;, // 能解决大多数样式兼容性问题</span></span><br><span class="line"><span class="addition">+                ],</span></span><br><span class="line"><span class="addition">+              &#125;,</span></span><br><span class="line"><span class="addition">+            &#125;,</span></span><br><span class="line">          &#125;,</span><br><span class="line">          &quot;stylus-loader&quot;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="合并配置"><a href="#合并配置" class="headerlink" title="合并配置"></a>合并配置</h3><p>将上面配置中地重复性代码抽离出来</p><p>webpack.prod.js</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">// 获取处理样式的 Loaders</span><br><span class="line"><span class="addition">+ const getStyleLoaders = (preProcessor) =&gt; &#123;</span></span><br><span class="line"><span class="addition">+   return [</span></span><br><span class="line"><span class="addition">+     MiniCssExtractPlugin.loader,</span></span><br><span class="line"><span class="addition">+     &quot;css-loader&quot;,</span></span><br><span class="line"><span class="addition">+     &#123;</span></span><br><span class="line"><span class="addition">+       loader: &quot;postcss-loader&quot;,</span></span><br><span class="line"><span class="addition">+       options: &#123;</span></span><br><span class="line"><span class="addition">+         postcssOptions: &#123;</span></span><br><span class="line"><span class="addition">+           plugins: [</span></span><br><span class="line"><span class="addition">+             &quot;postcss-preset-env&quot;, // 能解决大多数样式兼容性问题</span></span><br><span class="line"><span class="addition">+           ],</span></span><br><span class="line"><span class="addition">+         &#125;,</span></span><br><span class="line"><span class="addition">+       &#125;,</span></span><br><span class="line"><span class="addition">+     &#125;,</span></span><br><span class="line"><span class="addition">+     preProcessor,</span></span><br><span class="line"><span class="addition">+   ].filter(Boolean);</span></span><br><span class="line"><span class="addition">+ &#125;;</span></span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line">  module: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        // 用来匹配 .css 结尾的文件</span><br><span class="line">        test: /\.css$/,</span><br><span class="line">        // use 数组里面 Loader 执行顺序是从右到左</span><br><span class="line"><span class="addition">+        use: getStyleLoaders(),</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: /\.less$/,</span><br><span class="line"><span class="addition">+        use: getStyleLoaders(&quot;less-loader&quot;),</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: /\.s[ac]ss$/,</span><br><span class="line"><span class="addition">+        use: getStyleLoaders(&quot;sass-loader&quot;),</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        test: /\.styl$/,</span><br><span class="line"><span class="addition">+        use: getStyleLoaders(&quot;stylus-loader&quot;),</span></span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="控制兼容性"><a href="#控制兼容性" class="headerlink" title="控制兼容性"></a>控制兼容性</h3><p>可以在 <code>package.json</code> 文件中添加 <code>browserslist</code> 来控制样式的兼容性做到什么程度</p><p>更多 browserslist 配置，查看 <a href="https://github.com/browserslist/browserslist">browserslist 文档</a></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;browserslist&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;last 2 version&quot;</span><span class="punctuation">,</span> <span class="string">&quot;&gt; 1%&quot;</span><span class="punctuation">,</span> <span class="string">&quot;not dead&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="Css-压缩"><a href="#Css-压缩" class="headerlink" title="Css 压缩"></a>Css 压缩</h2><h3 id="安装-4"><a href="#安装-4" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i css-minimizer-webpack-plugin -D</span><br></pre></td></tr></table></figure><h3 id="配置-5"><a href="#配置-5" class="headerlink" title="配置"></a>配置</h3><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="addition">+ const CssMinimizerPlugin = require(&quot;css-minimizer-webpack-plugin&quot;);</span></span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line">    plugins: [</span><br><span class="line">    new ESLintWebpackPlugin(&#123;</span><br><span class="line">    // css压缩</span><br><span class="line"><span class="addition">+    new CssMinimizerPlugin(),</span></span><br><span class="line">  ],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Webpack-优化"><a href="#Webpack-优化" class="headerlink" title="Webpack 优化"></a>Webpack 优化</h1><p>主要从从以下角度来进行优化：</p><ol><li>提升开发体验</li><li>提升打包构建速度</li><li>减少代码体积</li><li>优化代码运行性能</li></ol><h2 id="提升开发体验"><a href="#提升开发体验" class="headerlink" title="提升开发体验"></a>提升开发体验</h2><h3 id="SourceMap"><a href="#SourceMap" class="headerlink" title="SourceMap"></a>SourceMap</h3><p>开发时我们运行的代码是经过 webpack 编译后的所有 css 和 js 合并成了一个文件，并且多了其他代码。此时如果代码运行出错则很难去发现错误出现在哪里<br>SourceMap（源代码映射）是一个用来生成源代码与构建后代码一一映射的文件的方案。它会生成一个 xxx.map 文件，里面包含源代码和构建后代码每一行、每一列的映射关系。当构建后代码出错了，会通过 xxx.map 文件，从构建后代码出错位置<strong>找到映射后源代码出错位置</strong>，从而让浏览器提示源代码文件出错位置，<strong>帮助我们更快的找到错误根源和调试</strong>。</p><p>SourceMap 的值有很多种情况，详情可以查看 <a href="https://webpack.js.org/configuration/devtool/#root">Webpack DevTool 文档</a></p><p>实际开发时我们只需要关注两种情况即可：</p><h4 id="开发模式：cheap-module-source-map"><a href="#开发模式：cheap-module-source-map" class="headerlink" title="开发模式：cheap-module-source-map"></a>开发模式：cheap-module-source-map</h4><p>优点：<strong>打包编译速度快，只包含行映射</strong><br>缺点：没有列映射</p><p>webpack.dev.js</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  mode: &quot;development&quot;,</span><br><span class="line"><span class="addition">+  devtool: &quot;cheap-module-source-map&quot;,</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="生产模式：source-map"><a href="#生产模式：source-map" class="headerlink" title="生产模式：source-map"></a>生产模式：source-map</h4><p>优点：<strong>包含行/列映射</strong><br>缺点：打包编译速度更慢</p><p>webpack.prod.js</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  mode: &quot;production&quot;,</span><br><span class="line"><span class="addition">+  devtool: &quot;source-map&quot;,</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="提升打包构建速度"><a href="#提升打包构建速度" class="headerlink" title="提升打包构建速度"></a>提升打包构建速度</h2><h3 id="HMR"><a href="#HMR" class="headerlink" title="HMR"></a>HMR</h3><p>HotModuleReplacement（HMR/热模块替换）：在程序运行中，替换、添加或删除模块，而无需重新加载整个页面。</p><p>开发时我们修改了其中一个模块代码，Webpack 默认会将所有模块全部重新打包编译，速度很慢。所以我们需要做到修改某个模块代码，就只有这个模块代码需要重新打包编译，其他模块不变，这样打包速度就能变快。</p><h4 id="配置-6"><a href="#配置-6" class="headerlink" title="配置"></a>配置</h4><p>webpack.dev.js</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  // 其他省略</span><br><span class="line">  devServer: &#123;</span><br><span class="line">    host: &quot;localhost&quot;, // 启动服务器域名</span><br><span class="line">    port: &quot;3000&quot;, // 启动服务器端口号</span><br><span class="line">    open: true, // 是否自动打开浏览器</span><br><span class="line"><span class="addition">+    hot: true, // 开启HMR功能（只能用于开发环境，生产环境不需要了）</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>css 样式经过 style-loader 处理，已经具备 HMR 功能了。 但是 js 还不行</p><h4 id="JS-配置"><a href="#JS-配置" class="headerlink" title="JS 配置"></a>JS 配置</h4><p>main.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 判断是否支持HMR功能</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">module</span>.<span class="property">hot</span>) &#123;</span><br><span class="line">  <span class="variable language_">module</span>.<span class="property">hot</span>.<span class="title function_">accept</span>(<span class="string">&quot;./js/xxx.js&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面这样写会很麻烦，所以实际开发我们会使用其他 loader 来解决</p><p>如：</p><ol><li><a href="https://github.com/vuejs/vue-loader">vue-loader</a></li><li><a href="https://github.com/gaearon/react-hot-loader">react-hot-loader</a></li></ol><h3 id="OneOf"><a href="#OneOf" class="headerlink" title="OneOf"></a>OneOf</h3><p>打包时每个文件都会经过所有 loader 处理，虽然因为 test 正则原因实际没有处理上，但是都要过一遍，比较慢。<br>OneOf 顾名思义就是只能匹配上一个 loader, 剩下的就不匹配了（开发模式和生产模式都可以使用）</p><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">oneOf</span>: [</span><br><span class="line">        <span class="comment">// 将所有的 loader 放到这个里面</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Include-Exclude"><a href="#Include-Exclude" class="headerlink" title="Include/Exclude"></a>Include/Exclude</h3><p>开发时我们需要使用第三方的库或插件，所有文件都下载到 <code>node_modules</code> 中了。而这些文件是不需要编译可以直接使用的。<br>所以我们在对 js 文件处理时，要排除 <code>node_modules</code> 下面的文件。<code>Include / Exclude</code> 只能使用一个。<br>include：包含，只处理 xxx 文件<br>exclude：排除，除了 xxx 文件以外其他文件都处理</p><h4 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   <span class="attr">test</span>: <span class="regexp">/\.js$/</span>,</span><br><span class="line">   <span class="comment">// exclude: /node_modules/, // 排除node_modules代码不编译</span></span><br><span class="line">   <span class="attr">include</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&quot;../src&quot;</span>), <span class="comment">// 也可以用包含</span></span><br><span class="line">   <span class="attr">loader</span>: <span class="string">&quot;babel-loader&quot;</span>,</span><br><span class="line">&#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Cache"><a href="#Cache" class="headerlink" title="Cache"></a>Cache</h3><p>每次打包时 js 文件都要经过 Eslint 检查 和 Babel 编译，速度比较慢。我们<strong>可以缓存之前的 Eslint 检查 和 Babel 编译结果</strong>，这样第二次打包时速度就会更快了。</p><h4 id="使用-2"><a href="#使用-2" class="headerlink" title="使用"></a>使用</h4><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">const path = require(&quot;path&quot;);</span><br><span class="line">const ESLintWebpackPlugin = require(&quot;eslint-webpack-plugin&quot;);</span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line">  module: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">       &#123;</span><br><span class="line">         test: /\.js$/,</span><br><span class="line">         // exclude: /node_modules/, // 排除node_modules代码不编译</span><br><span class="line">         include: path.resolve(__dirname, &quot;../src&quot;), // 也可以用包含</span><br><span class="line">         loader: &quot;babel-loader&quot;,</span><br><span class="line"><span class="addition">+         options: &#123;</span></span><br><span class="line"><span class="addition">+           cacheDirectory: true, // 开启babel编译缓存</span></span><br><span class="line"><span class="addition">+           cacheCompression: false, // 缓存文件不要压缩</span></span><br><span class="line"><span class="addition">+         &#125;,</span></span><br><span class="line">       &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    new ESLintWebpackPlugin(&#123;</span><br><span class="line">      // 指定检查文件的根目录</span><br><span class="line">      context: path.resolve(__dirname, &quot;../src&quot;),</span><br><span class="line">      exclude: &quot;node_modules&quot;, // 默认值</span><br><span class="line"><span class="addition">+      cache: true, // 开启缓存</span></span><br><span class="line"><span class="addition">+      // 缓存目录</span></span><br><span class="line"><span class="addition">+      cacheLocation: path.resolve(</span></span><br><span class="line"><span class="addition">+        __dirname,</span></span><br><span class="line"><span class="addition">+        &quot;../node_modules/.cache/.eslintcache&quot;</span></span><br><span class="line">      ),</span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="Thead"><a href="#Thead" class="headerlink" title="Thead"></a>Thead</h3><p>当项目越来越庞大时，打包速度越来越慢，甚至于需要一个下午才能打包出来代码。这个速度是比较慢的。<br>我们想要继续提升打包速度，其实就是要提升 js 的打包速度，因为其他文件都比较少。<br>而对 js 文件处理主要就是 eslint 、babel、Terser 三个工具，所以我们要提升它们的运行速度。<br>我们可以开启多进程同时处理 js 文件，这样速度就比之前的单进程打包更快了。</p><p>深入：<a href="http://xxpromise.gitee.io/webpack5-docs/senior/liftingSpeed.html#thead">http://xxpromise.gitee.io/webpack5-docs/senior/liftingSpeed.html#thead</a></p><h2 id="减少代码体积"><a href="#减少代码体积" class="headerlink" title="减少代码体积"></a>减少代码体积</h2><h3 id="Tree-Shaking"><a href="#Tree-Shaking" class="headerlink" title="Tree Shaking"></a>Tree Shaking</h3><p>Tree Shaking 是一个术语，通常用于描述移除 JavaScript 中的<strong>没有使用上的代码</strong>。Webpack 已经默认开启了这个功能，无需其他配置。</p><p>注意：它依赖 ES Module</p><h3 id="Babel"><a href="#Babel" class="headerlink" title="Babel"></a>Babel</h3><p>Babel 为编译的每个文件都插入了辅助代码，使代码体积过大！<br>Babel 对一些公共方法使用了非常小的辅助代码，比如 _extend。默认情况下会被添加到每一个需要它的文件中。<br>你可以将这些辅助代码作为一个独立模块，来避免重复引入。<br><code>@babel/plugin-transform-runtime</code>: 禁用了 Babel 自动对每个文件的 runtime 注入，而是引入 <code>@babel/plugin-transform-runtime</code> 并且使所有辅助代码从这里引用</p><h4 id="安装-5"><a href="#安装-5" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i @babel/plugin-transform-runtime -D</span><br></pre></td></tr></table></figure><h4 id="配置-7"><a href="#配置-7" class="headerlink" title="配置"></a>配置</h4><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    loader: &quot;babel-loader&quot;,</span><br><span class="line">    options: &#123;</span><br><span class="line"><span class="addition">+        plugins: [&quot;@babel/plugin-transform-runtime&quot;], // 减少代码体积</span></span><br><span class="line">    &#125;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="Image-Minimizer"><a href="#Image-Minimizer" class="headerlink" title="Image Minimizer"></a>Image Minimizer</h3><p><code>image-minimizer-webpack-plugin</code> 是用来压缩图片的插件。如果项目中引用了较多图片，那么图片体积会比较大，将来请求速度比较慢。我们可以对图片进行压缩，减少图片体积。<br>注意：如果项目中图片都是在线链接，那么就不需要了。本地项目静态图片才需要进行压缩。</p><h4 id="安装-6"><a href="#安装-6" class="headerlink" title="安装"></a>安装</h4><p>下载包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i image-minimizer-webpack-plugin imagemin -D</span><br></pre></td></tr></table></figure><p>两种压缩模式：</p><p><a href="https://baike.baidu.com/item/%E6%97%A0%E6%8D%9F%E3%80%81%E6%9C%89%E6%8D%9F%E5%8E%8B%E7%BC%A9">有损/无损压缩的区别</a></p><p>无损压缩：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install imagemin-gifsicle imagemin-jpegtran imagemin-optipng imagemin-svgo -D</span><br></pre></td></tr></table></figure><p>有损压缩：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install imagemin-gifsicle imagemin-mozjpeg imagemin-pngquant imagemin-svgo -D</span><br></pre></td></tr></table></figure><h4 id="配置-8"><a href="#配置-8" class="headerlink" title="配置"></a>配置</h4><p>无损压缩配置为例：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="addition">+const ImageMinimizerPlugin = require(&quot;image-minimizer-webpack-plugin&quot;);</span></span><br><span class="line"></span><br><span class="line">optimization: &#123;</span><br><span class="line">// 压缩图片</span><br><span class="line">new ImageMinimizerPlugin(&#123;</span><br><span class="line"><span class="addition">+minimizer: &#123;</span></span><br><span class="line"><span class="addition">+ implementation: ImageMinimizerPlugin.imageminGenerate,</span></span><br><span class="line"><span class="addition">+ options: &#123;</span></span><br><span class="line"><span class="addition">+   plugins: [</span></span><br><span class="line"><span class="addition">+     [&quot;gifsicle&quot;, &#123; interlaced: true &#125;],</span></span><br><span class="line"><span class="addition">+     [&quot;jpegtran&quot;, &#123; progressive: true &#125;],</span></span><br><span class="line"><span class="addition">+     [&quot;optipng&quot;, &#123; optimizationLevel: 5 &#125;],</span></span><br><span class="line"><span class="addition">+     [</span></span><br><span class="line"><span class="addition">+       &quot;svgo&quot;,</span></span><br><span class="line"><span class="addition">+       &#123;</span></span><br><span class="line"><span class="addition">+         plugins: [</span></span><br><span class="line"><span class="addition">+           &quot;preset-default&quot;,</span></span><br><span class="line"><span class="addition">+           &quot;prefixIds&quot;,</span></span><br><span class="line"><span class="addition">+           &#123;</span></span><br><span class="line"><span class="addition">+             name: &quot;sortAttrs&quot;,</span></span><br><span class="line"><span class="addition">+             params: &#123;</span></span><br><span class="line"><span class="addition">+               xmlnsOrder: &quot;alphabetical&quot;,</span></span><br><span class="line"><span class="addition">+             &#125;,</span></span><br><span class="line"><span class="addition">+           &#125;,</span></span><br><span class="line"><span class="addition">+         ],</span></span><br><span class="line"><span class="addition">+       &#125;,</span></span><br><span class="line"><span class="addition">+     ],</span></span><br><span class="line"><span class="addition">+   ],</span></span><br><span class="line"><span class="addition">+ &#125;,</span></span><br><span class="line"><span class="addition">+&#125;,</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="优化代码运行性能"><a href="#优化代码运行性能" class="headerlink" title="优化代码运行性能"></a>优化代码运行性能</h2><h3 id="Code-Split"><a href="#Code-Split" class="headerlink" title="Code Split"></a>Code Split</h3><p>打包代码时会将所有 js 文件打包到一个文件中，体积太大了。我们如果只要渲染首页，就应该只加载首页的 js 文件，其他文件不应该加载<br>所以我们需要将打包生成的文件进行代码分割，生成多个 js 文件，渲染哪个页面就只加载某个 js 文件，这样加载的资源就少，速度就更快</p><p>代码分割（Code Split）主要做了两件事：</p><ol><li>分割文件：将打包生成的文件进行分割，生成多个 js 文件</li><li>按需加载：需要哪个文件就加载哪个文件</li></ol><h3 id="Preload-Prefetch"><a href="#Preload-Prefetch" class="headerlink" title="Preload / Prefetch"></a>Preload / Prefetch</h3><p>前面已经做了代码分割，同时会使用 import 动态导入语法来进行代码按需加载（我们也叫懒加载，比如路由懒加载就是这样实现的）<br>但是加载速度还不够好，比如：是用户点击按钮时才加载这个资源的，<strong>如果资源体积很大，那么用户会感觉到明显卡顿效果</strong><br>我们想在浏览器空闲时间，加载后续需要使用的资源。我们就需要用上 Preload 或 Prefetch 技术。</p><p><code>Preload</code>：告诉浏览器<strong>立即加载</strong>资源<br><code>Prefetch</code>：告诉浏览器在<strong>空闲时才开始加载</strong>资源</p><p>共同点：</p><p>都只会加载资源，并不执行<br>都有缓存<br>兼容性较差。(Preload 相对于 Prefetch 兼容性好一点。)</p><p>区别：</p><p>Preload加载优先级高，Prefetch加载优先级低<br>Preload只能加载当前页面需要使用的资源，Prefetch可以加载当前页面资源，也可以加载下一个页面需要使用的资源</p><p>总结：</p><p>当前页面优先级高的资源用 Preload 加载<br>下一个页面需要使用的资源用 Prefetch 加载</p><h3 id="Network-Cache"><a href="#Network-Cache" class="headerlink" title="Network Cache"></a>Network Cache</h3><p>将来开发时我们对静态资源会使用缓存来优化，这样浏览器第二次请求资源就能读取缓存了，速度很快。<br>但是这样的话就会有一个问题, 因为前后输出的文件名是一样的，都叫 main.js，一旦将来发布新版本，因为文件名没有变化导致浏览器会直接读取缓存，不会加载新资源，项目也就没法更新了。<br>所以我们从文件名入手，确保更新前后文件名不一样，这样就可以做缓存了。</p><h3 id="Core-js"><a href="#Core-js" class="headerlink" title="Core-js"></a>Core-js</h3><p>过去我们使用 babel 对 js 代码进行了兼容性处理，其中使用@babel/preset-env 智能预设来处理兼容性问题。<br>它能将 ES6 的一些语法进行编译转换，比如箭头函数、点点点运算符等。但是如果是 async 函数、promise 对象、数组的一些方法（includes）等，它没办法处理。<br>所以此时我们 js 代码仍然存在兼容性问题，一旦遇到低版本浏览器会直接报错。所以我们想要将 js 兼容性问题彻底解决</p><p>core-js 是专门用来做 ES6 以及以上 API 的 polyfill<br>polyfill 翻译过来叫做垫片/补丁。就是用社区上提供的一段代码，让我们在不兼容某些新特性的浏览器上，使用该新特性。</p><h3 id="PWA"><a href="#PWA" class="headerlink" title="PWA"></a>PWA</h3><p>开发 Web App 项目，项目一旦处于网络离线情况，就没法访问了。我们希望给项目提供离线体验。<br>渐进式网络应用程序(progressive web application - PWA)：是一种可以提供类似于 native app(原生应用程序) 体验的 Web App 的技术。其中最重要的是，在 <strong>离线(offline) 时应用程序能够继续运行功能</strong>。内部通过 Service Workers 技术实现的。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> WebPack </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>220819</title>
      <link href="/2022/08/19%E9%9A%8F%E7%AC%94/220819/94a71e9c/"/>
      <url>/2022/08/19%E9%9A%8F%E7%AC%94/220819/94a71e9c/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, this password doesn't look right. Please try again." data-whm="Sorry, this article cannot be verified, but you can still see the decrypted content.">  <script id="hbeData" type="hbeData" data-hmacdigest="6db70fbb7c44c3e747cafc16dd4d805ad377f39c041b45a3bb3145c85fe41bd0"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-surge">      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="Enter Password.">Enter Password.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
          <category> Diary </category>
          
          <category> 小黄 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Axios</title>
      <link href="/2022/08/17%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF_Axios/976189ad/"/>
      <url>/2022/08/17%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF_Axios/976189ad/</url>
      
        <content type="html"><![CDATA[<p>Axios 官方文档：<a href="https://axios-http.com/zh/docs/intro">https://axios-http.com/zh/docs/intro</a></p><p>CDN：<code>&lt;script src=&quot;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js&quot;&gt;&lt;/script&gt;</code></p><h1 id="Json-Server"><a href="#Json-Server" class="headerlink" title="Json-Server"></a>Json-Server</h1><p>JSON-Server 是一个 Node 模块，运行 Express 服务器，你可以指定一个 json 文件作为 api 的数据源，详情戳Github。</p><p>Github：<a href="https://github.com/typicode/json-server">https://github.com/typicode/json-server</a></p><h2 id="快速使用"><a href="#快速使用" class="headerlink" title="快速使用"></a>快速使用</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><code>npm install -g json-server</code></p><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><p>Create a db.json file with some data</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;posts&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span> <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span> <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;json-server&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;typicode&quot;</span> <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;comments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span> <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span> <span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="string">&quot;some comment&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;postId&quot;</span><span class="punctuation">:</span> <span class="number">1</span> <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;profile&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;typicode&quot;</span> <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="开启"><a href="#开启" class="headerlink" title="开启"></a>开启</h3><p>Start JSON Server</p><p><code>json-server --watch db.json</code></p><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p>通过：<code>http://localhost:3000/</code> 地址访问</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220821204547.png" alt="20220821204547"></p><h1 id="Axios-特性"><a href="#Axios-特性" class="headerlink" title="Axios 特性"></a>Axios 特性</h1><ol><li>基于 xhr + promise 的异步 ajax 请求库</li><li>浏览器端 /node 端都可以使用</li><li>支持请求／响应拦截器</li><li>支持请求取消</li><li>请求 / 响应数据转换</li><li>批量发送多个请求</li></ol><h1 id="Axios-API"><a href="#Axios-API" class="headerlink" title="Axios API"></a>Axios API</h1><ol><li><strong>axios(config)</strong>: 通用/最本质的发任意类型请求的方式</li><li>axios(url[, config]): 可以只指定 url 发 get 请求</li><li>axios.request(config): 等同于 axios(config)</li><li>axios.get(url[, config]): 发 get 请求</li><li>axios.delete(url[, config]): 发 delete 请求</li><li>axios.post(url[, data, config]): 发 post 请求</li><li>axios.put(url[, data, config]): 发 put 请求</li></ol><h1 id="请求配置"><a href="#请求配置" class="headerlink" title="请求配置"></a>请求配置</h1><p>这些是创建请求时可以用的配置选项。<strong>只有 url 是必需的</strong>。如果没有指定 method，请求将默认使用 GET 方法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="comment">// `url` 是用于请求的服务器 URL</span></span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;/user&#x27;</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// `method` 是创建请求时使用的方法</span></span><br><span class="line">  <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>, <span class="comment">// 默认值</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// `baseURL` 将自动加在 `url` 前面，除非 `url` 是一个绝对 URL。</span></span><br><span class="line">  <span class="comment">// 它可以通过设置一个 `baseURL` 便于为 axios 实例的方法传递相对 URL</span></span><br><span class="line">  <span class="attr">baseURL</span>: <span class="string">&#x27;https://some-domain.com/api/&#x27;</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// `transformRequest` 允许在向服务器发送前，修改请求数据</span></span><br><span class="line">  <span class="comment">// 它只能用于 &#x27;PUT&#x27;, &#x27;POST&#x27; 和 &#x27;PATCH&#x27; 这几个请求方法</span></span><br><span class="line">  <span class="comment">// 数组中最后一个函数必须返回一个字符串， 一个Buffer实例，ArrayBuffer，FormData，或 Stream</span></span><br><span class="line">  <span class="comment">// 你可以修改请求头。</span></span><br><span class="line">  <span class="attr">transformRequest</span>: [<span class="keyword">function</span> (<span class="params">data, headers</span>) &#123;</span><br><span class="line">    <span class="comment">// 对发送的 data 进行任意转换处理</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">  &#125;],</span><br><span class="line"></span><br><span class="line">  <span class="comment">// `transformResponse` 在传递给 then/catch 前，允许修改响应数据</span></span><br><span class="line">  <span class="attr">transformResponse</span>: [<span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">    <span class="comment">// 对接收的 data 进行任意转换处理</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">  &#125;],</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 自定义请求头</span></span><br><span class="line">  <span class="attr">headers</span>: &#123;<span class="string">&#x27;X-Requested-With&#x27;</span>: <span class="string">&#x27;XMLHttpRequest&#x27;</span>&#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// `params` 是与请求一起发送的 URL 参数</span></span><br><span class="line">  <span class="comment">// 必须是一个简单对象或 URLSearchParams 对象</span></span><br><span class="line">  <span class="attr">params</span>: &#123;</span><br><span class="line">    <span class="attr">ID</span>: <span class="number">12345</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// `paramsSerializer`是可选方法，主要用于序列化`params`</span></span><br><span class="line">  <span class="comment">// (e.g. https://www.npmjs.com/package/qs, http://api.jquery.com/jquery.param/)</span></span><br><span class="line">  <span class="attr">paramsSerializer</span>: <span class="keyword">function</span> (<span class="params">params</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Qs</span>.<span class="title function_">stringify</span>(params, &#123;<span class="attr">arrayFormat</span>: <span class="string">&#x27;brackets&#x27;</span>&#125;)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// `data` 是作为请求体被发送的数据</span></span><br><span class="line">  <span class="comment">// 仅适用 &#x27;PUT&#x27;, &#x27;POST&#x27;, &#x27;DELETE 和 &#x27;PATCH&#x27; 请求方法</span></span><br><span class="line">  <span class="comment">// 在没有设置 `transformRequest` 时，则必须是以下类型之一:</span></span><br><span class="line">  <span class="comment">// - string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams</span></span><br><span class="line">  <span class="comment">// - 浏览器专属: FormData, File, Blob</span></span><br><span class="line">  <span class="comment">// - Node 专属: Stream, Buffer</span></span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">firstName</span>: <span class="string">&#x27;Fred&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 发送请求体数据的可选语法</span></span><br><span class="line">  <span class="comment">// 请求方式 post</span></span><br><span class="line">  <span class="comment">// 只有 value 会被发送，key 则不会</span></span><br><span class="line">  <span class="attr">data</span>: <span class="string">&#x27;Country=Brasil&amp;City=Belo Horizonte&#x27;</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// `timeout` 指定请求超时的毫秒数。</span></span><br><span class="line">  <span class="comment">// 如果请求时间超过 `timeout` 的值，则请求会被中断</span></span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">1000</span>, <span class="comment">// 默认值是 `0` (永不超时)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// `withCredentials` 表示跨域请求时是否需要使用凭证</span></span><br><span class="line">  <span class="attr">withCredentials</span>: <span class="literal">false</span>, <span class="comment">// default</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// `adapter` 允许自定义处理请求，这使测试更加容易。</span></span><br><span class="line">  <span class="comment">// 返回一个 promise 并提供一个有效的响应 （参见 lib/adapters/README.md）。</span></span><br><span class="line">  <span class="attr">adapter</span>: <span class="keyword">function</span> (<span class="params">config</span>) &#123;</span><br><span class="line">    <span class="comment">/* ... */</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// `auth` HTTP Basic Auth</span></span><br><span class="line">  <span class="attr">auth</span>: &#123;</span><br><span class="line">    <span class="attr">username</span>: <span class="string">&#x27;janedoe&#x27;</span>,</span><br><span class="line">    <span class="attr">password</span>: <span class="string">&#x27;s00pers3cret&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// `responseType` 表示浏览器将要响应的数据类型</span></span><br><span class="line">  <span class="comment">// 选项包括: &#x27;arraybuffer&#x27;, &#x27;document&#x27;, &#x27;json&#x27;, &#x27;text&#x27;, &#x27;stream&#x27;</span></span><br><span class="line">  <span class="comment">// 浏览器专属：&#x27;blob&#x27;</span></span><br><span class="line">  <span class="attr">responseType</span>: <span class="string">&#x27;json&#x27;</span>, <span class="comment">// 默认值</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// `responseEncoding` 表示用于解码响应的编码 (Node.js 专属)</span></span><br><span class="line">  <span class="comment">// 注意：忽略 `responseType` 的值为 &#x27;stream&#x27;，或者是客户端请求</span></span><br><span class="line">  <span class="comment">// Note: Ignored for `responseType` of &#x27;stream&#x27; or client-side requests</span></span><br><span class="line">  <span class="attr">responseEncoding</span>: <span class="string">&#x27;utf8&#x27;</span>, <span class="comment">// 默认值</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// `xsrfCookieName` 是 xsrf token 的值，被用作 cookie 的名称</span></span><br><span class="line">  <span class="attr">xsrfCookieName</span>: <span class="string">&#x27;XSRF-TOKEN&#x27;</span>, <span class="comment">// 默认值</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// `xsrfHeaderName` 是带有 xsrf token 值的http 请求头名称</span></span><br><span class="line">  <span class="attr">xsrfHeaderName</span>: <span class="string">&#x27;X-XSRF-TOKEN&#x27;</span>, <span class="comment">// 默认值</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// `onUploadProgress` 允许为上传处理进度事件</span></span><br><span class="line">  <span class="comment">// 浏览器专属</span></span><br><span class="line">  <span class="attr">onUploadProgress</span>: <span class="keyword">function</span> (<span class="params">progressEvent</span>) &#123;</span><br><span class="line">    <span class="comment">// 处理原生进度事件</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// `onDownloadProgress` 允许为下载处理进度事件</span></span><br><span class="line">  <span class="comment">// 浏览器专属</span></span><br><span class="line">  <span class="attr">onDownloadProgress</span>: <span class="keyword">function</span> (<span class="params">progressEvent</span>) &#123;</span><br><span class="line">    <span class="comment">// 处理原生进度事件</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// `maxContentLength` 定义了node.js中允许的HTTP响应内容的最大字节数</span></span><br><span class="line">  <span class="attr">maxContentLength</span>: <span class="number">2000</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// `maxBodyLength`（仅Node）定义允许的http请求内容的最大字节数</span></span><br><span class="line">  <span class="attr">maxBodyLength</span>: <span class="number">2000</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// `validateStatus` 定义了对于给定的 HTTP状态码是 resolve 还是 reject promise。</span></span><br><span class="line">  <span class="comment">// 如果 `validateStatus` 返回 `true` (或者设置为 `null` 或 `undefined`)，</span></span><br><span class="line">  <span class="comment">// 则promise 将会 resolved，否则是 rejected。</span></span><br><span class="line">  <span class="attr">validateStatus</span>: <span class="keyword">function</span> (<span class="params">status</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> status &gt;= <span class="number">200</span> &amp;&amp; status &lt; <span class="number">300</span>; <span class="comment">// 默认值</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// `maxRedirects` 定义了在node.js中要遵循的最大重定向数。</span></span><br><span class="line">  <span class="comment">// 如果设置为0，则不会进行重定向</span></span><br><span class="line">  <span class="attr">maxRedirects</span>: <span class="number">5</span>, <span class="comment">// 默认值</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// `socketPath` 定义了在node.js中使用的UNIX套接字。</span></span><br><span class="line">  <span class="comment">// e.g. &#x27;/var/run/docker.sock&#x27; 发送请求到 docker 守护进程。</span></span><br><span class="line">  <span class="comment">// 只能指定 `socketPath` 或 `proxy` 。</span></span><br><span class="line">  <span class="comment">// 若都指定，这使用 `socketPath` 。</span></span><br><span class="line">  <span class="attr">socketPath</span>: <span class="literal">null</span>, <span class="comment">// default</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// `httpAgent` and `httpsAgent` define a custom agent to be used when performing http</span></span><br><span class="line">  <span class="comment">// and https requests, respectively, in node.js. This allows options to be added like</span></span><br><span class="line">  <span class="comment">// `keepAlive` that are not enabled by default.</span></span><br><span class="line">  <span class="attr">httpAgent</span>: <span class="keyword">new</span> http.<span class="title class_">Agent</span>(&#123; <span class="attr">keepAlive</span>: <span class="literal">true</span> &#125;),</span><br><span class="line">  <span class="attr">httpsAgent</span>: <span class="keyword">new</span> https.<span class="title class_">Agent</span>(&#123; <span class="attr">keepAlive</span>: <span class="literal">true</span> &#125;),</span><br><span class="line"></span><br><span class="line">  <span class="comment">// `proxy` 定义了代理服务器的主机名，端口和协议。</span></span><br><span class="line">  <span class="comment">// 您可以使用常规的`http_proxy` 和 `https_proxy` 环境变量。</span></span><br><span class="line">  <span class="comment">// 使用 `false` 可以禁用代理功能，同时环境变量也会被忽略。</span></span><br><span class="line">  <span class="comment">// `auth`表示应使用HTTP Basic auth连接到代理，并且提供凭据。</span></span><br><span class="line">  <span class="comment">// 这将设置一个 `Proxy-Authorization` 请求头，它会覆盖 `headers` 中已存在的自定义 `Proxy-Authorization` 请求头。</span></span><br><span class="line">  <span class="comment">// 如果代理服务器使用 HTTPS，则必须设置 protocol 为`https`</span></span><br><span class="line">  <span class="attr">proxy</span>: &#123;</span><br><span class="line">    <span class="attr">protocol</span>: <span class="string">&#x27;https&#x27;</span>,</span><br><span class="line">    <span class="attr">host</span>: <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="attr">port</span>: <span class="number">9000</span>,</span><br><span class="line">    <span class="attr">auth</span>: &#123;</span><br><span class="line">      <span class="attr">username</span>: <span class="string">&#x27;mikeymike&#x27;</span>,</span><br><span class="line">      <span class="attr">password</span>: <span class="string">&#x27;rapunz3l&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// see https://axios-http.com/zh/docs/cancellation</span></span><br><span class="line">  <span class="attr">cancelToken</span>: <span class="keyword">new</span> <span class="title class_">CancelToken</span>(<span class="keyword">function</span> (<span class="params">cancel</span>) &#123;</span><br><span class="line">  &#125;),</span><br><span class="line"></span><br><span class="line">  <span class="comment">// `decompress` indicates whether or not the response body should be decompressed </span></span><br><span class="line">  <span class="comment">// automatically. If set to `true` will also remove the &#x27;content-encoding&#x27; header </span></span><br><span class="line">  <span class="comment">// from the responses objects of all decompressed responses</span></span><br><span class="line">  <span class="comment">// - Node only (XHR cannot turn off decompression)</span></span><br><span class="line">  <span class="attr">decompress</span>: <span class="literal">true</span> <span class="comment">// 默认值</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="默认配置"><a href="#默认配置" class="headerlink" title="默认配置"></a>默认配置</h1><p>可以指定默认配置，简化代码，它将作用于每个请求。</p><h2 id="全局-axios-默认值"><a href="#全局-axios-默认值" class="headerlink" title="全局 axios 默认值"></a>全局 axios 默认值</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">axios.<span class="property">defaults</span>.<span class="property">baseURL</span> = <span class="string">&#x27;https://api.example.com&#x27;</span>;</span><br><span class="line">axios.<span class="property">defaults</span>.<span class="property">headers</span>.<span class="property">common</span>[<span class="string">&#x27;Authorization&#x27;</span>] = <span class="variable constant_">AUTH_TOKEN</span>;</span><br><span class="line">axios.<span class="property">defaults</span>.<span class="property">headers</span>.<span class="property">post</span>[<span class="string">&#x27;Content-Type&#x27;</span>] = <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="自定义实例默认值"><a href="#自定义实例默认值" class="headerlink" title="自定义实例默认值"></a>自定义实例默认值</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建实例时配置默认值</span></span><br><span class="line"><span class="keyword">const</span> instance = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="string">&#x27;https://api.example.com&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建实例后修改默认值</span></span><br><span class="line">instance.<span class="property">defaults</span>.<span class="property">headers</span>.<span class="property">common</span>[<span class="string">&#x27;Authorization&#x27;</span>] = <span class="variable constant_">AUTH_TOKEN</span>;</span><br></pre></td></tr></table></figure><h2 id="配置的优先级"><a href="#配置的优先级" class="headerlink" title="配置的优先级"></a>配置的优先级</h2><p>配置将会按优先级进行合并。它的顺序是：（后面的优先级要高于前面的）</p><ol><li>在 <code>lib/defaults.js</code> 中找到的库默认值</li><li>实例的 <code>defaults</code> 属性</li><li>请求的 <code>config</code> 参数</li></ol><h1 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h1><p>拦截器分为请求拦截器和响应拦截器</p><p>请求拦截器：在发送请求之前，对请求的参数作一些处理和检测。<br>响应拦截器：在处理结果之前，可以对返回的数据作一些预处理。</p><h2 id="添加拦截器"><a href="#添加拦截器" class="headerlink" title="添加拦截器"></a>添加拦截器</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加请求拦截器</span></span><br><span class="line">axios.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(<span class="keyword">function</span> (<span class="params">config</span>) &#123;</span><br><span class="line">    <span class="comment">// 在发送请求之前做些什么</span></span><br><span class="line">    <span class="keyword">return</span> config;</span><br><span class="line">  &#125;, <span class="keyword">function</span> (<span class="params">error</span>) &#123;</span><br><span class="line">    <span class="comment">// 对请求错误做些什么</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加响应拦截器</span></span><br><span class="line">axios.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(<span class="keyword">function</span> (<span class="params">response</span>) &#123;</span><br><span class="line">    <span class="comment">// 2xx 范围内的状态码都会触发该函数。</span></span><br><span class="line">    <span class="comment">// 对响应数据做点什么</span></span><br><span class="line">    <span class="keyword">return</span> response;</span><br><span class="line">  &#125;, <span class="keyword">function</span> (<span class="params">error</span>) &#123;</span><br><span class="line">    <span class="comment">// 超出 2xx 范围的状态码都会触发该函数。</span></span><br><span class="line">    <span class="comment">// 对响应错误做点什么</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><h2 id="移除拦截器"><a href="#移除拦截器" class="headerlink" title="移除拦截器"></a>移除拦截器</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> myInterceptor = axios.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;<span class="comment">/*...*/</span>&#125;);</span><br><span class="line">axios.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">eject</span>(myInterceptor);</span><br></pre></td></tr></table></figure><h2 id="实例的拦截器"><a href="#实例的拦截器" class="headerlink" title="实例的拦截器"></a>实例的拦截器</h2><p>可以给自定义的 axios 实例添加拦截器。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> instance = axios.<span class="title function_">create</span>();</span><br><span class="line">instance.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;<span class="comment">/*...*/</span>&#125;);</span><br></pre></td></tr></table></figure><h1 id="取消请求"><a href="#取消请求" class="headerlink" title="取消请求"></a>取消请求</h1><h2 id="AbortController"><a href="#AbortController" class="headerlink" title="AbortController"></a>AbortController</h2><p>从 v0.22.0 开始，Axios 支持以 fetch API 方式—— AbortController 取消请求：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> controller = <span class="keyword">new</span> <span class="title class_">AbortController</span>();</span><br><span class="line"></span><br><span class="line">axios.<span class="title function_">get</span>(<span class="string">&#x27;/foo/bar&#x27;</span>, &#123;</span><br><span class="line">   <span class="attr">signal</span>: controller.<span class="property">signal</span></span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="keyword">function</span>(<span class="params">response</span>) &#123;</span><br><span class="line">   <span class="comment">//...</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 取消请求</span></span><br><span class="line">controller.<span class="title function_">abort</span>()</span><br></pre></td></tr></table></figure><h2 id="CancelToken【已弃用】"><a href="#CancelToken【已弃用】" class="headerlink" title="CancelToken【已弃用】"></a>CancelToken【已弃用】</h2><h1 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h1><h2 id="源码目录结构"><a href="#源码目录结构" class="headerlink" title="源码目录结构"></a>源码目录结构</h2><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220821230707.png" alt="20220821230707"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> Axios </category>
          
      </categories>
      
      
        <tags>
            
            <tag> http </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ajax</title>
      <link href="/2022/08/16%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF_Ajax/976189ad/"/>
      <url>/2022/08/16%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF_Ajax/976189ad/</url>
      
        <content type="html"><![CDATA[<h1 id="网络传输协议"><a href="#网络传输协议" class="headerlink" title="网络传输协议"></a>网络传输协议</h1><h2 id="常见协议"><a href="#常见协议" class="headerlink" title="常见协议"></a>常见协议</h2><ol><li>HTTP HTTPS 超文本传输协议 </li><li>FTP 文件传输协议</li><li>SMTP 简单邮件传输协议</li></ol><h2 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h2><p>HTTP协议是超文本传输协议，网站是基于HTTP协议的，例如网站的图片、CSS、JS等都是基于HTTP协议进行传输的。</p><p>HTTP协议主要由<code>请求</code>和<code>响应</code>构成（HTTP协议是由从客户机到服务器的请求(Request)和从服务器到客户机的响应(Response)<strong>进行了约束和规范</strong>）</p><h3 id="常用请求方法"><a href="#常用请求方法" class="headerlink" title="常用请求方法"></a>常用请求方法</h3><h4 id="POST"><a href="#POST" class="headerlink" title="POST"></a>POST</h4><p>特性</p><ol><li>GET请求是放在url中，<strong>POST则放在body中</strong></li></ol><h4 id="GET"><a href="#GET" class="headerlink" title="GET"></a>GET</h4><p>特性</p><ol><li>GET 比POST更不安全，因为参数直接<strong>暴露在URL上</strong>，所以不能用来传递敏感信息。</li><li>GET 请求在URL中传送的参数是有长度限制的，而POST没有</li></ol><h4 id="PUT"><a href="#PUT" class="headerlink" title="PUT"></a>PUT</h4><h4 id="DELETE"><a href="#DELETE" class="headerlink" title="DELETE"></a>DELETE</h4><h3 id="状态码"><a href="#状态码" class="headerlink" title="状态码"></a>状态码</h3><h4 id="常见"><a href="#常见" class="headerlink" title="常见"></a>常见</h4><ol><li>200代表成功</li><li>304文档未修改</li><li>403没有权限</li><li>404未找到</li><li>500服务器错误</li></ol><div class="table-container"><table><thead><tr><th>状态码</th><th>含义</th></tr></thead><tbody><tr><td>100~199</td><td>表示成功接收请求，要求客户端继续提交下一次请求才能完成整个处理过程</td></tr><tr><td>200~299</td><td>表示成功接收请求并已完成整个处理过程</td></tr><tr><td>300~399</td><td>为完成请求，客户需进一步细化请求。例如，请求的资源已经移动一个新地址</td></tr><tr><td>400~499</td><td>客户端的请求有错误</td></tr><tr><td>500~599</td><td>服务器端出现错误</td></tr></tbody></table></div><h3 id="请求-请求报文"><a href="#请求-请求报文" class="headerlink" title="请求/请求报文"></a>请求/请求报文</h3><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220817151947.png" alt="20220817151947"></p><p>规范格式：请求行、请求头、请求主体</p><p>简单概括：请求报文包括：请求行、请求头、请求主体，主要有送的方法，浏览器的信息，和发送的数据。</p><h4 id="请求行"><a href="#请求行" class="headerlink" title="请求行"></a>请求行</h4><p>由 请求方式、请求URL、协议版本 构成</p><h4 id="请求头"><a href="#请求头" class="headerlink" title="请求头"></a>请求头</h4><p>Host：localhost请求的主机<br>Cache-Control：max-age=0控制缓存<br>Accept：<em>/</em> 接受的文档MIME类型<br>User-Agent：很重要<br>Referer：从哪个URL跳转过来的<br>Accept-Encoding：可接受的压缩格式</p><h4 id="请求主体"><a href="#请求主体" class="headerlink" title="请求主体"></a>请求主体</h4><p>传递给服务端的数据</p><p>注：以post形式提交表单的时候，请求头里会设置 <code>Content-Type: application/x-www-form-urlencoded</code>，以get形式当不需要。</p><h3 id="响应-响应报文"><a href="#响应-响应报文" class="headerlink" title="响应/响应报文"></a>响应/响应报文</h3><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220817152129.png" alt="20220817152129"></p><p>规范格式：状态行、响应头、响应主体 </p><p>简单概括：响应报文包括：状态行、响应头、响应主体，主要是服务器的信息浏览器中直接可以看到的内容。</p><h4 id="状态行"><a href="#状态行" class="headerlink" title="状态行"></a>状态行</h4><p>由协议版本号、<strong>状态码</strong>和状态信息构成</p><h4 id="响应头"><a href="#响应头" class="headerlink" title="响应头"></a>响应头</h4><p>Date：响应时间<br>Server：服务器信息<br>Content-Length：响应主体长度<br>Content-Type：响应资源的MIME类型</p><h4 id="响应主体"><a href="#响应主体" class="headerlink" title="响应主体"></a>响应主体</h4><p>服务端返回给客户端的内容</p><h1 id="XML-了解"><a href="#XML-了解" class="headerlink" title="XML (了解)"></a>XML (了解)</h1><blockquote><ul><li>XML是一种标记语言，很类似 HTML，其宗旨是用来<strong>传输数据</strong>，具有自我描述性（固定的格式的数据）</li><li>虽然可以描述和传输复杂数据，但是其<strong>解析过于复杂</strong>并且体积较大，<strong>实际开发很少使用</strong></li></ul></blockquote><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><ol><li>必须有一个根元素</li><li>不可有空格、不可以数字或 <code>.</code> 开头、大小写敏感</li><li>不可交叉嵌套</li><li>属性双引号（浏览器自动修正成双引号了）</li><li>特殊符号要使用实体</li><li>注释和HTML一样</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">customeTagName</span>&gt;</span>...<span class="tag">&lt;/<span class="name">customeTagName</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><p>解析步骤类似使用 JS 获取 DOM 元素。</p><h1 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h1><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON">JSON</a> (JavaScript Object Notation) 是一种语法，用来序列化<strong>对象、数组、数值、字符串、布尔值和 null</strong>，是一种轻量级的文本数据交换格式。</p><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ol><li>JSON 的载体是<strong>字符串</strong></li><li>JSON 数据的<code>属性名、属性值，</code>必须使用<strong>双引号</strong>包裹。</li><li>JSON 对象键值对之间使用逗号（<code>,</code>）分隔。</li></ol><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><h3 id="JSON-parse"><a href="#JSON-parse" class="headerlink" title="JSON.parse()"></a>JSON.parse()</h3><h3 id="JSON-stringify"><a href="#JSON-stringify" class="headerlink" title="JSON.stringify()"></a>JSON.stringify()</h3><h1 id="AJAX-编程"><a href="#AJAX-编程" class="headerlink" title="AJAX 编程"></a>AJAX 编程</h1><blockquote><ul><li>AJAX 即 <code>Asynchronous Javascript And XML</code>，利用 <code>XMLHttpRequest</code> 发送请求。</li><li>AJAX 不是一门的新的语言，而是对现有持术的综合利用。本质是在HTTP协议的基础上<strong>以异步的方式与服务器进行通信</strong>。</li></ul></blockquote><h2 id="面试问题：用过Ajax吗？"><a href="#面试问题：用过Ajax吗？" class="headerlink" title="面试问题：用过Ajax吗？"></a>面试问题：用过Ajax吗？</h2><p>用过，用在不刷新页面获取数据，用法是创建异步对象、请求行、请求头、回调函数、请求主体，请求响应回来之后会触发<strong>回调函数</strong>而我们渲染页面的操作就是写在回调函数中<br>在我写的项目里面结合ajax基本是这么用的：</p><ol><li>发送之前修改页面结构</li><li>数据回来之后 修改页面结构</li></ol><p>我从后台拿到的数据一般是 JSON,曾经碰到过用 XML 的不知道贵公司用的是哪种方式交互数据？<br>每次都自己写，太过于重复。于是试着自己封装了ajax，可以设置 get post data url success<br>后来发现 jQuery有ajax 开始使用 jQuery的ajax。jQuery的 ajax中帮我们实现了：自动转化数据的操作<br>试着修改了一下自己封装的 ajax工具函数也实现了自动转化数据的功能，原理就是获取返回的 content-type做判断即可。<br>所以我在项目中如果用了jQuery的ajax直接使用jQuery的ajax的ajax如果不需要用jQuery的ajax那么我就用自己封装的 Ajax<br>随着数据的复杂程度变高我发现修改 dom元素很繁琐，找到了模板引擎这个东西对比了一下用 art-template（原理是正则替换文本）</p><h2 id="GET-和-POST请求区别（面试）"><a href="#GET-和-POST请求区别（面试）" class="headerlink" title="GET 和 POST请求区别（面试）"></a>GET 和 POST请求区别（面试）</h2><ol><li>GET 没有请求主体，使用 xhr.send(null)</li><li>GET 可以通过在请求 URL上添加请求参数</li><li>GET 大小限制约 4K，POST则没有限制</li><li>POST 可以通过 xhr.send(‘xxx=xxx&amp;xxx=xxx’)</li><li>POST 发送数据时需要设置请求头 <code>xhr.setRequestHeader(&quot;Content-type&quot;,&quot;application/x-www-form-urlencoded&quot;);</code></li></ol><h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><ol><li>xhr.open() 规定请求的类型、URL 以及是否异步处理请求</li><li>xhr.setRequestHeader() 设置请求头</li><li>xhr.send() 发送请求主体get方式使用xhr.send(null)</li><li>xhr.onreadystatechange = function () {} 监听响应状态<ol><li>xhr.readyState = 0 时，UNSENT open尚未调用</li><li>xhr.readyState = 1 时，OPENED open已调用</li><li>xhr.readyState = 2 时，HEADERS_RECEIVED 接收到头信息</li><li>xhr.readyState = 3 时，LOADING 接收到响应主体</li><li><strong>xhr.readyState = 4 时，DONE 响应完成</strong></li></ol></li><li>xhr.status表示响应码，如200</li><li>xhr.statusText表示响应信息，如OK</li><li>xhr.getAllResponseHeaders() 获取全部响应头信息</li><li>xhr.getResponseHeader(‘key’) 获取指定头信息</li><li>xhr.responseText、xhr.responseXML都表示响应主体</li></ol><p>补充：onreadystatechange 事件 是 onload 事件的兼容性方案。</p><h2 id="AJAX-封装"><a href="#AJAX-封装" class="headerlink" title="AJAX 封装"></a>AJAX 封装</h2><p>代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 格式化请求参数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">formatParams</span>(<span class="params">data</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> arr = []</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> name <span class="keyword">in</span> data) &#123;</span><br><span class="line">        arr.<span class="title function_">push</span>(<span class="built_in">encodeURIComponent</span>(name) + <span class="string">&#x27;=&#x27;</span> + <span class="built_in">encodeURIComponent</span>(data[name]))</span><br><span class="line">    &#125;</span><br><span class="line">    arr.<span class="title function_">push</span>((<span class="string">&#x27;v=&#x27;</span> + <span class="title class_">Math</span>.<span class="title function_">random</span>()).<span class="title function_">replace</span>(<span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> arr.<span class="title function_">join</span>(<span class="string">&#x27;&amp;&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 封装 ajax</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">ajax</span>(<span class="params">options</span>) &#123;</span><br><span class="line">    <span class="comment">// 调用函数时如果options没有指定，就给它赋值&#123;&#125;,一个空的Object</span></span><br><span class="line">    options = options || &#123;&#125;</span><br><span class="line">    <span class="comment">// 请求格式GET、POST，默认为GET</span></span><br><span class="line">    options.<span class="property">method</span> = (options.<span class="property">method</span> || <span class="string">&#x27;GET&#x27;</span>).<span class="title function_">toUpperCase</span>()</span><br><span class="line">    <span class="comment">// 响应数据格式，默认 json</span></span><br><span class="line">    options.<span class="property">dataType</span> = options.<span class="property">dataType</span> || <span class="string">&#x27;json&#x27;</span></span><br><span class="line">    options.<span class="property">timeout</span> = options.<span class="property">timeout</span> || <span class="number">30000</span></span><br><span class="line">    <span class="comment">// options.data请求的数据</span></span><br><span class="line">    <span class="keyword">let</span> params = <span class="title function_">formatParams</span>(options.<span class="property">data</span>)</span><br><span class="line">    <span class="keyword">let</span> xhr</span><br><span class="line">    <span class="comment">// 考虑兼容性</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">XMLHttpRequest</span>) &#123;</span><br><span class="line">        xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>()</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">ActiveObject</span>) &#123;</span><br><span class="line">        <span class="comment">// 兼容IE6以下版本</span></span><br><span class="line">        xhr = <span class="keyword">new</span> <span class="title class_">ActiveXobject</span>(<span class="string">&#x27;Microsoft.XMLHTTP&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 启动并发送一个请求</span></span><br><span class="line">    <span class="keyword">if</span> (options.<span class="property">method</span> == <span class="string">&#x27;GET&#x27;</span>) &#123;</span><br><span class="line">        xhr.<span class="title function_">open</span>(<span class="string">&#x27;get&#x27;</span>, options.<span class="property">url</span> + <span class="string">&#x27;?&#x27;</span> + params, <span class="literal">true</span>)</span><br><span class="line">        xhr.<span class="title function_">send</span>(<span class="literal">null</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (options.<span class="property">method</span> == <span class="string">&#x27;POST&#x27;</span>) &#123;</span><br><span class="line">        xhr.<span class="title function_">open</span>(<span class="string">&#x27;post&#x27;</span>, options.<span class="property">url</span>, <span class="literal">true</span>)</span><br><span class="line">        <span class="comment">// 设置表单提交时的内容类型</span></span><br><span class="line">        <span class="comment">// Content-type数据请求的格式</span></span><br><span class="line">        xhr.<span class="title function_">setRequestHeader</span>(<span class="string">&#x27;Content-type&#x27;</span>, <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>)</span><br><span class="line">        xhr.<span class="title function_">send</span>(params)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置有效时间</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (xhr.<span class="property">readySate</span> != <span class="number">4</span>) &#123;</span><br><span class="line">            xhr.<span class="title function_">abort</span>()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, options.<span class="property">timeout</span>)</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">      接收</span></span><br><span class="line"><span class="comment">      options.success成功之后的回调函数  options.error失败后的回调函数</span></span><br><span class="line"><span class="comment">      xhr.responseText,xhr.responseXML  获得字符串形式的响应数据或者XML形式的响应数据</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    xhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (xhr.<span class="property">readyState</span> == <span class="number">4</span>) &#123;</span><br><span class="line">            <span class="keyword">let</span> status = xhr.<span class="property">status</span></span><br><span class="line">            <span class="keyword">if</span> ((status &gt;= <span class="number">200</span> &amp;&amp; status &lt; <span class="number">300</span>) || status == <span class="number">304</span>) &#123;</span><br><span class="line">                options.<span class="property">success</span> &amp;&amp; options.<span class="title function_">success</span>(xhr.<span class="property">responseText</span>, xhr.<span class="property">responseXML</span>)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                options.<span class="property">error</span> &amp;&amp; options.<span class="title function_">error</span>(status)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">ajax</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;http://localhost:3000/test_get&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;name&#x27;</span>,</span><br><span class="line">        <span class="attr">age</span>: <span class="number">24</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(data, <span class="string">&#x27;asdasdsa&#x27;</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="jQuery-Ajax"><a href="#jQuery-Ajax" class="headerlink" title="jQuery Ajax"></a>jQuery Ajax</h1><p>jQuery 为我们提供了更强大的 <strong><a href="https://www.jq22.com/chm/jquery/index.html">Ajax 封装</a></strong> 详情查文档。</p><p>常用：</p><p>jQuery.ajax(url,[settings]) </p><div class="table-container"><table><thead><tr><th>settings 常用参数</th><th>Description</th></tr></thead><tbody><tr><td>dataType</td><td>预期服务器返回的数据类型，当服务器没有指定返回的数据格式时，可以前端来指定。</td></tr></tbody></table></div><h1 id="模板引擎"><a href="#模板引擎" class="headerlink" title="模板引擎"></a>模板引擎</h1><p><a href="https://aui.github.io/art-template/zh-cn/">art-template</a> 是一个简约、超快的模板引擎</p><p>原理：利用正则表达式，替换模板当中预先定义好的标签</p><h1 id="瀑布流"><a href="#瀑布流" class="headerlink" title="瀑布流"></a>瀑布流</h1><p>瀑布流是一种布局方案，用于实现元素内容宽度相同但是高度不同的效果。视觉表现为参差不齐的多栏布局，随着页面滚动条向下滚动，这种布局还会不断加载数据块并附加至当前尾部。</p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220820182858.png" alt="20220820182858"></p><h2 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h2><h3 id="Masonry"><a href="#Masonry" class="headerlink" title="Masonry"></a>Masonry</h3><p><a href="https://masonry.desandro.com/">Masonry</a> is a JavaScript grid layout library. It works by placing elements in optimal position based on available vertical space, sort of like a mason fitting stones in a wall. You’ve probably seen it in use all over the Internet.</p><h1 id="同源与跨域"><a href="#同源与跨域" class="headerlink" title="同源与跨域"></a>同源与跨域</h1><h2 id="同源"><a href="#同源" class="headerlink" title="同源"></a>同源</h2><p>同源策略是浏览器的一种安全策略，所谓同源是指，<code>域名</code>，<code>协议</code>，<code>端口</code>完全相同</p><h2 id="跨域"><a href="#跨域" class="headerlink" title="跨域"></a>跨域</h2><p><code>域名</code>，<code>协议</code>，<code>端口</code> 有一个不同则跨域（不同网站之间发送请求则称之跨域，浏览器默认是限制了跨域访问的）</p><p>例如：<a href="http://www.example.com/">http://www.example.com/</a></p><div class="table-container"><table><thead><tr><th>域名</th><th>是否同源</th><th>描述</th></tr></thead><tbody><tr><td><a href="http://api.example.com/detail.html">http://api.example.com/detail.html</a></td><td>不同源</td><td>域名不同</td></tr><tr><td>https//www.example.com/detail.html</td><td>不同源</td><td>协议不同</td></tr><tr><td><a href="http://www.example.com:8080/detail.html">http://www.example.com:8080/detail.html</a></td><td>不同源</td><td>端口不同</td></tr><tr><td><a href="http://api.example.com:8080/detail.html">http://api.example.com:8080/detail.html</a></td><td>不同源</td><td>域名、端口不同</td></tr><tr><td><a href="https://api.example.com/detail.html">https://api.example.com/detail.html</a></td><td>不同源</td><td>协议、域名不同</td></tr><tr><td><a href="https://www.example.com:8080/detail.html">https://www.example.com:8080/detail.html</a></td><td>不同源</td><td>端口、协议不同</td></tr><tr><td><a href="http://www.example.com/detail/index.html">http://www.example.com/detail/index.html</a></td><td>同源</td><td>只是目录不同</td></tr></tbody></table></div><h2 id="跨域解决方案"><a href="#跨域解决方案" class="headerlink" title="跨域解决方案"></a>跨域解决方案</h2><h3 id="CORS"><a href="#CORS" class="headerlink" title="CORS"></a>CORS</h3><blockquote><p>CORS（ cross origin resource sharing 跨域资源共享 ）<strong>HTML5 +</strong></p></blockquote><p>普通跨域请求：只服务端设置 <code>Access-Control-Allow-Origin</code> 即可，前端无须设置，若要带cookie请求：前后端都需要设置。</p><p>例如php设置:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Access-Control-Allow-Origin: *&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="JSONP"><a href="#JSONP" class="headerlink" title="JSONP"></a>JSONP</h3><p>有 src 属性的标签没有跨域限制。（如：img script iframe）<br><strong>JSONP（JSON with Padding）的原理就是使用 script 标签的 src 属性支持跨域访问</strong></p><h4 id="原生实现"><a href="#原生实现" class="headerlink" title="原生实现"></a>原生实现</h4><p>浏览器端：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">   <span class="keyword">var</span> script = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">   script.<span class="property">type</span> = <span class="string">&#x27;text/javascript&#x27;</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 传参一个回调函数名给后端，方便后端返回时执行这个在前端定义的回调函数</span></span><br><span class="line">   script.<span class="property">src</span> = <span class="string">&#x27;http://www.xxx.com:80/backData.php?callback = doSomething&#x27;</span>;</span><br><span class="line">   <span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">appendChild</span>(script);</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 回调执行函数</span></span><br><span class="line">   <span class="keyword">function</span> <span class="title function_">doSomething</span>(<span class="params">data</span>) &#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">   &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>服务器端：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// backData.php:</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$methodName</span> = <span class="variable">$_GET</span>(<span class="string">&#x27;callback&#x27;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$methodName</span>.<span class="string">&#x27;(&#123;&quot;name&quot;:&quot;frank&quot;,&quot;age&quot;:18&#125;)&#x27;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="面试常问"><a href="#面试常问" class="headerlink" title="面试常问"></a>面试常问</h4><h5 id="JSONP-原理"><a href="#JSONP-原理" class="headerlink" title="JSONP 原理"></a>JSONP 原理</h5><ol><li>利用 script 标签的 src 属性支持跨域访问</li><li>script 标签的后面写上需要请求服务器的页面，并携带一个方法的名作为参数</li><li>服务器接收到名字之后<strong>拼接一个方法的调用在参数中</strong> 传入需要给浏览器的数据</li><li>返回给浏览器，浏览器把他当做 js 解析</li></ol><h5 id="JSONP可以发post请求吗？"><a href="#JSONP可以发post请求吗？" class="headerlink" title="JSONP可以发post请求吗？"></a>JSONP可以发post请求吗？</h5><p>只能发送 get 请求，不能发送 post 请求</p><h5 id="JSONP跟ajax有没有关系？"><a href="#JSONP跟ajax有没有关系？" class="headerlink" title="JSONP跟ajax有没有关系？"></a>JSONP跟ajax有没有关系？</h5><p>没有</p><h5 id="jQuery中的JSONP跟ajax有没有关系？"><a href="#jQuery中的JSONP跟ajax有没有关系？" class="headerlink" title="jQuery中的JSONP跟ajax有没有关系？"></a>jQuery中的JSONP跟ajax有没有关系？</h5><p>没有，虽然 jQuery 中的 JSONP 是在 Ajax 函数中添加<code>dataType: &#39;jsonp&#39;</code>属性来完成跨域的，但是 jQuery 内部是动态创建script 标签追加到DOM树，只是为了方便调用才这么封装的，跟 Ajax 没有关系</p><h1 id="XHR-2-0"><a href="#XHR-2-0" class="headerlink" title="XHR 2.0"></a>XHR 2.0</h1><p>官方文档：<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest">https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest</a></p><p>新特性：</p><h2 id="快速格式化表单数据"><a href="#快速格式化表单数据" class="headerlink" title="快速格式化表单数据"></a>快速格式化表单数据</h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/FormData">FormData</a></p><p>FormData 接口提供了一种表示表单数据的键值对 key/value 的构造方式，并且可以轻松的将数据通过 XMLHttpRequest.send() 方法发送出去</p><h2 id="ajax上传文件"><a href="#ajax上传文件" class="headerlink" title="ajax上传文件"></a>ajax上传文件</h2><p>表单中使用 file 表单，然后使用 FormData 接口将数据直接上传，服务器端接收。</p><h2 id="上传进度监控"><a href="#上传进度监控" class="headerlink" title="上传进度监控"></a>上传进度监控</h2><p>使用 XMLHttpRequest 的 onprogress 事件实现</p><h1 id="Todo"><a href="#Todo" class="headerlink" title="Todo"></a>Todo</h1><div class='checkbox green'><input type="checkbox" />            <p>能熟练讲出 ajax 原理</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>后面回过头有空把人员管理案例敲一遍（最好使用vue或者另一种方式实现）</p>            </div>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> Ajax </category>
          
      </categories>
      
      
        <tags>
            
            <tag> http </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Echarts【待学习】</title>
      <link href="/2022/08/12TEMP/%E5%89%8D%E7%AB%AF_Echarts/976189ad/"/>
      <url>/2022/08/12TEMP/%E5%89%8D%E7%AB%AF_Echarts/976189ad/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> Echarts </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 可视化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery【待学习】</title>
      <link href="/2022/08/12TEMP/%E5%89%8D%E7%AB%AF_jQuery/976189ad/"/>
      <url>/2022/08/12TEMP/%E5%89%8D%E7%AB%AF_jQuery/976189ad/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> jQuery </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>自考计划</title>
      <link href="/2022/08/08%E5%8F%91%E5%B1%95/%E5%8F%91%E5%B1%95_%E8%A7%84%E5%88%92_Hobby_Scheme_%E8%87%AA%E8%80%83%E8%AE%A1%E5%88%92/f75e92e9/"/>
      <url>/2022/08/08%E5%8F%91%E5%B1%95/%E5%8F%91%E5%B1%95_%E8%A7%84%E5%88%92_Hobby_Scheme_%E8%87%AA%E8%80%83%E8%AE%A1%E5%88%92/f75e92e9/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本科学历提升分类：三加二、<strong>大自考（目标）</strong>、小自考、网教（含金量依次递减）</p></blockquote><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><ol><li>大专毕业后还能考吗？读自考本科有什么限制条件吗？需要去学校上学吗？</li><li>自考流程是什么，怎么报名？</li><li>我能够在户籍外的省份自考，并且拿到自考本科证。</li><li>自考的考试全部通过后，用上学吗？</li><li>自考从开始准备到能拿到证书大概多长时间？</li><li>如果正在工作，还有时间来自考吗？</li><li>怎么查询自己的专业都有哪些课程，去哪里买教材，何时考试，去哪里考？多久能毕业？</li><li>自考本科考完如何申请毕业，毕业后的就业情况如何，会不会被歧视？</li></ol><h1 id="报名流程"><a href="#报名流程" class="headerlink" title="报名流程"></a>报名流程</h1><blockquote><p>选择专业应该结合自己职业规划选择</p></blockquote><p>登陆所在省教育考试院网站：【河南】教育考试院 <a href="http://www.haeea.cn/">http://www.haeea.cn/</a> → 找到自考入口 → 注册报名 有注册时间段限制</p><p>参考：</p><ul><li><a href="http://www.haeea.cn/a/202202/42752.shtml">http://www.haeea.cn/a/202202/42752.shtml</a> （报名须知）</li><li><a href="https://www.zikao365.com/henan/news/ch20220425142408.shtml">https://www.zikao365.com/henan/news/ch20220425142408.shtml</a> （河南自考新生注册报考流程）</li></ul><p>河南 2022 年下半年</p><p>网上报名及报考时间：2022年09月03日09:00 — 09月07日18:00；<br>考籍转出外省办理时间：2022年09月01日09:00-18:00(网上申请)；<br>省内考籍变更申请时间：2022年09月01日09:00-18:00(网上申请)；<br>全国统一考试时间：2022年10月22日—10月25日（共4天），上午9:00-11:30、下午14:30-17:00;</p><p>目前目标：郑州大学 —&gt; 软件工程专业</p><ol><li>选择专业</li><li>考试报名</li><li>考试安排</li><li>购买教材</li><li>准考证打印</li><li>参加考试</li><li>查询成绩</li><li>实践考核</li><li>毕业/学位申请</li></ol><h2 id="郑大软件工程自考"><a href="#郑大软件工程自考" class="headerlink" title="郑大软件工程自考"></a>郑大软件工程自考</h2><p>郑大自考软件工程专业课程设置：<a href="https://www.zdzkzsw.com/article/966.html">https://www.zdzkzsw.com/article/966.html</a></p><p>主考学校：郑州大学&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;开考形式：面向社会</p><table abs_visibility="true">    <tbody abs_visibility="true">        <tr>            <td>            <p><b>序号</b></p>            </td>            <td>            <p><b>课程代码</b></p>            </td>            <td>            <p><b>课程名称</b></p>            </td>            <td>            <p><b>学分</b></p>            </td>            <td>            <p><b>备 &nbsp;注</b></p>            </td>        </tr>        <tr>            <td>            <p>1</p>            </td>            <td>            <p>03708</p>            </td>            <td>            <p>中国近现代史纲要</p>            </td>            <td>            <p>2</p>            </td>            <td>            <p>&nbsp;</p>            </td>        </tr>        <tr>            <td>            <p>2</p>            </td>            <td>            <p>03709</p>            </td>            <td>            <p>马克思主义基本原理概论</p>            </td>            <td>            <p>4</p>            </td>            <td>            <p>&nbsp;</p>            </td>        </tr>        <tr>            <td>            <p>3</p>            </td>            <td>            <p>00015</p>            </td>            <td>            <p>英语 (二)</p>            </td>            <td>            <p>14</p>            </td>            <td>            <p>&nbsp;</p>            </td>        </tr>        <tr>            <td>            <p>4</p>            </td>            <td>            <p>02141</p>            </td>            <td>            <p>计算机网络技术</p>            </td>            <td>            <p>4</p>            </td>            <td>            <p>证书课程</p>            </td>        </tr>        <tr abs_visibility="true">            <td>            <p>5</p>            </td>            <td>            <p>02333</p>            </td>            <td abs_visibility="true">            <p abs_visibility="true"><span abs_visibility="true">软件工程 </span></p>            </td>            <td>            <p>3</p>            </td>            <td>            <p>&nbsp;</p>            </td>        </tr>        <tr abs_visibility="true">            <td>            <p>6</p>            </td>            <td>            <p>02334</p>            </td>            <td abs_visibility="true">            <p abs_visibility="true"><span abs_visibility="true">软件工程（实践） </span></p>            </td>            <td>            <p>1</p>            </td>            <td>            <p>&nbsp;</p>            </td>        </tr>        <tr>            <td>            <p>7</p>            </td>            <td>            <p>05057</p>            </td>            <td>            <p>网络应用程序设计（实践）</p>            </td>            <td>            <p>1</p>            </td>            <td>            <p>&nbsp;</p>            </td>        </tr>        <tr>            <td>            <p>8</p>            </td>            <td>            <p>07026</p>            </td>            <td>            <p>网络应用程序设计</p>            </td>            <td>            <p>4</p>            </td>            <td>            <p>&nbsp;</p>            </td>        </tr>        <tr abs_visibility="true">            <td>            <p>9</p>            </td>            <td>            <p>07028</p>            </td>            <td abs_visibility="true">            <p abs_visibility="true"><span abs_visibility="true">软件测试技术 </span></p>            </td>            <td>            <p>4</p>            </td>            <td>            <p>&nbsp;</p>            </td>        </tr>        <tr abs_visibility="true">            <td>            <p>10</p>            </td>            <td>            <p>07029</p>            </td>            <td abs_visibility="true">            <p abs_visibility="true"><span abs_visibility="true">软件项目管理 </span></p>            </td>            <td>            <p>4</p>            </td>            <td>            <p>&nbsp;</p>            </td>        </tr>        <tr>            <td>            <p>11</p>            </td>            <td>            <p>07163</p>            </td>            <td>            <p>高级数据库技术</p>            </td>            <td>            <p>4</p>            </td>            <td>            <p>证书课程</p>            </td>        </tr>        <tr>            <td>            <p>12</p>            </td>            <td>            <p>07164</p>            </td>            <td>            <p>高级数据库技术（实践）</p>            </td>            <td>            <p>2</p>            </td>            <td>            <p>证书课程</p>            </td>        </tr>        <tr>            <td>            <p>13</p>            </td>            <td>            <p>07167</p>            </td>            <td>            <p>多媒体计算机技术</p>            </td>            <td>            <p>4</p>            </td>            <td>            <p>&nbsp;</p>            </td>        </tr>        <tr>            <td>            <p>14</p>            </td>            <td>            <p>07168</p>            </td>            <td>            <p>多媒体计算机技术（实践）</p>            </td>            <td>            <p>1</p>            </td>            <td>            <p>&nbsp;</p>            </td>        </tr>        <tr abs_visibility="true">            <td>            <p>15</p>            </td>            <td>            <p>07169</p>            </td>            <td abs_visibility="true">            <p abs_visibility="true"><span abs_visibility="true">软件开发工具与环境 </span></p>            </td>            <td>            <p>3</p>            </td>            <td>            <p>&nbsp;</p>            </td>        </tr>        <tr abs_visibility="true">            <td>            <p>16</p>            </td>            <td>            <p>07170</p>            </td>            <td abs_visibility="true">            <p abs_visibility="true"><span abs_visibility="true">软件开发工具与环境（ 实践）  </span></p>            </td>            <td>            <p>1</p>            </td>            <td>            <p>&nbsp;</p>            </td>        </tr>        <tr>            <td>            <p>17</p>            </td>            <td>            <p>07172</p>            </td>            <td>            <p>信息安全</p>            </td>            <td>            <p>4</p>            </td>            <td>            <p>&nbsp;</p>            </td>        </tr>        <tr>            <td>            <p>18</p>            </td>            <td>            <p>02197</p>            </td>            <td>            <p>概率论与数理统计（二）</p>            </td>            <td>            <p>3</p>            </td>            <td rowspan="4">            <p>不考英语（二）者须加考</p>            </td>        </tr>        <tr>            <td>            <p>19</p>            </td>            <td>            <p>02328</p>            </td>            <td>            <p>面向对象程序设计</p>            </td>            <td>            <p>3</p>            </td>        </tr>        <tr>            <td>            <p>20</p>            </td>            <td>            <p>02329</p>            </td>            <td>            <p>面向对象程序设计（实践）</p>            </td>            <td>            <p>1</p>            </td>        </tr>        <tr>            <td>            <p>21</p>            </td>            <td>            <p>06094</p>            </td>            <td>            <p>离散数学（二）</p>            </td>            <td>            <p>5</p>            </td>        </tr>        <tr>            <td>            <p>22</p>            </td>            <td>            <p>07999</p>            </td>            <td>            <p>毕业设计</p>            </td>            <td>            <p>0</p>            </td>            <td>            <p>不计学分</p>            </td>        </tr>    </tbody></table><p>说明：</p><p>1、国家承认学历的专科及以上毕业生均可报考本专业。</p><p>2  、“计算机网络技术”、“高级数据库技术”、“高级数据库技术（实践）”为全国计算机应用技术证书（高级）课程。全国计算机应用技术证书实行单独考试，由教育部考试中心中英教育测量学术交流中心下属管理机构负责集体报名和考试。取得以上课程合格成绩，由教育部考试中心中英教育测量学术交流中心颁发全国计算机应用技术证书（高级）。</p><p abs_visibility="true"><span abs_visibility="true">取得全国计算机应用技术证书（高级）后，继续参加软件工程（独立本科段）专业非证书课程考试，达到该专业计划要求者，发给软件工程专业本科毕业证。</span></p><p>3、不考“英语（二）”者，须加考“离散数学（二）”、“概率论与数理统计（二）”、“面向对象程序设计”、“面向对象程序设计（实践）”四门课程。</p><p abs_visibility="true">4<span abs_visibility="true">、“软件工程（实践）”、“  网络应用程序设计（实践） ”、“高级数据库技术（实践）”、“多媒体计算机技术（实践）”、“软件开发工具与环境（实践） ”、“  面向对象程序设计（实践）”、“毕业设计（实践）”为实践性环节考核课程，应考者依据培训与考核基本要求在主考学校或其认可的单位进行考核。</span></p><p>&nbsp;</p><p>教材购买：根据教材的<strong>专业代码</strong>在购物平台购买</p><h1 id="申请毕业"><a href="#申请毕业" class="headerlink" title="申请毕业"></a>申请毕业</h1><p>申请本科毕业的时候，必须得提前获得专科毕业证</p><h2 id="学位证"><a href="#学位证" class="headerlink" title="学位证"></a>学位证</h2><p>学位证，相当于优秀（学位证是在毕业证的基础上发放的）</p><p>获取学位证四大要素：</p><ol><li>本科毕业</li><li>平均分达标</li><li>学位英语通过</li><li>论文答辩达标</li></ol><h1 id="疑问"><a href="#疑问" class="headerlink" title="疑问"></a>疑问</h1><ol><li>自考本科完毕，还能统招研究生?<br>1. </li><li>费用得多少？<ol><li>自学考试除了考试报名费用之外，没有其他费用。</li><li>自学不花学费，报机构的话学费就不等了。</li></ol></li></ol><h1 id="证书"><a href="#证书" class="headerlink" title="证书"></a>证书</h1><h2 id="PETS"><a href="#PETS" class="headerlink" title="PETS"></a>PETS</h2><p><a href="https://pets.neea.edu.cn/">PETS - 中国教育考试网</a> </p><h2 id="普通话资格考试"><a href="#普通话资格考试" class="headerlink" title="普通话资格考试"></a>普通话资格考试</h2><p><a href="https://bm.cltt.org/#/index">普通话资格考试</a></p><p>13185917213<br>fykSTFvNhN5XSNX</p><h1 id="平台"><a href="#平台" class="headerlink" title="平台"></a>平台</h1><ul><li>河南教育考试院 <a href="http://www.haeea.cn/">http://www.haeea.cn/</a></li><li>郑大自考官网：<a href="https://www.zdzkzsw.com/">https://www.zdzkzsw.com/</a></li><li>河南自考网：<a href="http://www.haause.com/">http://www.haause.com/</a></li><li>学信网：<a href="https://www.chsi.com.cn/">https://www.chsi.com.cn/</a></li><li>365资源：<a href="https://www.zikao365.com/">https://www.zikao365.com/</a></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.zhihu.com/question/54480262">https://www.zhihu.com/question/54480262</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 发展 </category>
          
          <category> 规划 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Atom</title>
      <link href="/2022/08/07%E5%B7%A5%E5%85%B7/%E5%B7%A5%E5%85%B7_Software_Atom/450a1492/"/>
      <url>/2022/08/07%E5%B7%A5%E5%85%B7/%E5%B7%A5%E5%85%B7_Software_Atom/450a1492/</url>
      
        <content type="html"><![CDATA[<h1 id="Atom-Install"><a href="#Atom-Install" class="headerlink" title="Atom Install"></a>Atom Install</h1><p>官方地址：<a href="https://atom.io/">https://atom.io/</a></p><p>软件界面：</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220807141422.png" alt="20220807141422"></p><h1 id="Atom-Plugin"><a href="#Atom-Plugin" class="headerlink" title="Atom Plugin"></a>Atom Plugin</h1><p>安装 Atom Plugin 需要本地安装 Node + git 环境，这里使用命令行来安装 Atom 插件（Atom提供的使用 <code>apm install</code> 指令的安装方式依然是依赖于npm）</p><h2 id="语法格式"><a href="#语法格式" class="headerlink" title="语法格式"></a>语法格式</h2><p><code>apm install [packages]</code></p><h2 id="插件安装路径"><a href="#插件安装路径" class="headerlink" title="插件安装路径"></a>插件安装路径</h2><p><code>C:\Users\&lt;UserName&gt;\.atom\packages</code></p><h1 id="Plugin-Recommend"><a href="#Plugin-Recommend" class="headerlink" title="Plugin Recommend"></a>Plugin Recommend</h1><h2 id="Atom-中文汉化"><a href="#Atom-中文汉化" class="headerlink" title="Atom 中文汉化"></a>Atom 中文汉化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apm install simplified-chinese-menu</span><br></pre></td></tr></table></figure><h2 id="代码地图"><a href="#代码地图" class="headerlink" title="代码地图"></a>代码地图</h2><p>功能：</p><p>此拓展让 Atom 像 VsCode 一样有一个代码预览地图，拖动地图快速滑动。</p><p>效果：</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220807144108.png" alt="20220807144108"></p><p>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apm install minimap</span><br></pre></td></tr></table></figure><h2 id="代码自动排版"><a href="#代码自动排版" class="headerlink" title="代码自动排版"></a>代码自动排版</h2><blockquote><p>atom-beautify 文档：<a href="https://github.com/Glavin001/atom-beautify">https://github.com/Glavin001/atom-beautify</a></p></blockquote><p>功能：</p><p>在 Atom 中美化 HTML、CSS、JavaScript、PHP、Python、Ruby、Java、C、C++、C#、Objective-C、CoffeeScript、TypeScript、Coldfusion、SQL 等</p><p>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apm install atom-beautify</span><br></pre></td></tr></table></figure><h2 id="图标美化"><a href="#图标美化" class="headerlink" title="图标美化"></a>图标美化</h2><p>功能：</p><p>不同拓展名的文件，显示不同的图标</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apm install file-type-icons</span><br></pre></td></tr></table></figure><h2 id="颜色显示"><a href="#颜色显示" class="headerlink" title="颜色显示"></a>颜色显示</h2><p>功能：</p><p>在项目和文件中显示颜色</p><p>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apm install pigments</span><br></pre></td></tr></table></figure><h2 id="Atom-终端"><a href="#Atom-终端" class="headerlink" title="Atom 终端"></a>Atom 终端</h2><p>功能：</p><p>在 Atom 里集成了一个 Terminal 窗口</p><p>效果：</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/Terminal.gif" alt="Terminal"></p><p>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apm install terminal-tab</span><br></pre></td></tr></table></figure><h2 id="Markdown-增强"><a href="#Markdown-增强" class="headerlink" title="Markdown　增强"></a>Markdown　增强</h2><p><a href="https://shd101wyy.github.io/markdown-preview-enhanced/#/zh-cn/">https://shd101wyy.github.io/markdown-preview-enhanced/#/zh-cn/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apm install markdown-preview-enhanced</span><br></pre></td></tr></table></figure><h2 id="HTML-Preview"><a href="#HTML-Preview" class="headerlink" title="HTML Preview"></a>HTML Preview</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apm install atom-html-preview</span><br></pre></td></tr></table></figure><h2 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h2><h3 id="atom-picgo"><a href="#atom-picgo" class="headerlink" title="atom-picgo"></a>atom-picgo</h3><h3 id="qiniu-uploader"><a href="#qiniu-uploader" class="headerlink" title="qiniu-uploader"></a>qiniu-uploader</h3><h1 id="Shortcut"><a href="#Shortcut" class="headerlink" title="Shortcut"></a>Shortcut</h1><h2 id="Software-Shortcut"><a href="#Software-Shortcut" class="headerlink" title="Software Shortcut"></a>Software Shortcut</h2><div class="table-container"><table><thead><tr><th>Shortcut</th><th>Description</th></tr></thead><tbody><tr><td>Ctrl + Shift + P</td><td>命令面板</td></tr><tr><td>Ctrl + \</td><td>展示隐藏目录树</td></tr><tr><td>Ctrl + Shift + M</td><td>Markdown 预览</td></tr><tr><td>Ctrl + \</td><td>展示隐藏目录树</td></tr><tr><td>Ctrl + \</td><td>展示隐藏目录树</td></tr></tbody></table></div><h2 id="Plugin-Shortcut"><a href="#Plugin-Shortcut" class="headerlink" title="Plugin Shortcut"></a>Plugin Shortcut</h2><div class="table-container"><table><thead><tr><th>Plugin</th><th>Shortcut</th></tr></thead><tbody><tr><td>terminal-tab</td><td>Win + Shift + T</td></tr></tbody></table></div><h1 id="Custom"><a href="#Custom" class="headerlink" title="Custom"></a>Custom</h1><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p>个人觉得自带的字体看起来有点不舒服，同步使用 VsCode 字体。</p><p><code>Consolas, &#39;黑体&#39;, &#39;Courier New&#39;, monospace</code></p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220807143915.png" alt="20220807143915"></p><h1 id="Sync-Settings"><a href="#Sync-Settings" class="headerlink" title="Sync-Settings"></a>Sync-Settings</h1><blockquote><p>sync-settings 是一款备份插件，可以备份ATOM的全局设置、插件、按键绑定(keymaps)、界面样式、代码片段(snippets )、 init script。有了这项功能以后再次恢复插件就十分方便。</p></blockquote><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="安装-sync-settings"><a href="#安装-sync-settings" class="headerlink" title="安装 sync-settings"></a>安装 sync-settings</h3><ol><li><code>Ctrl + ,</code></li><li>安装<br><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220807161221.png" alt="20220807161221"></li></ol><h3 id="配置sync-settings"><a href="#配置sync-settings" class="headerlink" title="配置sync-settings"></a>配置sync-settings</h3><ol><li>打开Setting可以看到我们需要配置 GistID 和 token<br><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220807161656.png" alt="20220807161656"></li><li>打开 Github 创建 GistID 和 token<ol><li>创建 GistID<ol><li><a href="https://gist.github.com/">https://gist.github.com/</a> </li><li>新建 gist<br><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220807163740.png" alt="20220807163740"></li><li>保存地址栏的 GistID<br><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220807163855.png" alt="20220807163855"></li></ol></li><li>创建 token<ol><li>Settings —&gt; Developer settings —&gt; Personal access tokens —&gt; Generate new token</li><li>填写 token 名称，勾上gist权限。</li></ol></li></ol></li><li>将 GistID 和 token 填入即可。</li></ol><h2 id="备份与还原"><a href="#备份与还原" class="headerlink" title="备份与还原"></a>备份与还原</h2><h3 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h3><p>备份命令：</p><ol><li>Ctrl + shift + P 打开命令面板</li><li>输入 <code>Sync Settings: Backup</code></li></ol><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220807164225.png" alt="20220807164225"></p><p>备份成功</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220807164256.png" alt="20220807164256"></p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220807164734.png" alt="20220807164734"></p><h3 id="还原"><a href="#还原" class="headerlink" title="还原"></a>还原</h3><ol><li>Ctrl + shift + P 打开命令面板</li><li>输入 <code>Sync Settings: Restore</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> Software </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>220801</title>
      <link href="/2022/08/01%E9%9A%8F%E7%AC%94/220801/94a71e9c/"/>
      <url>/2022/08/01%E9%9A%8F%E7%AC%94/220801/94a71e9c/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, this password doesn't look right. Please try again." data-whm="Sorry, this article cannot be verified, but you can still see the decrypted content.">  <script id="hbeData" type="hbeData" data-hmacdigest="85d0590480fda90088c36e89ab2665d11b9aa5d0ebc4c59cdbccda03afd09a67">176af5f71c6ac5419ca35683f9a93d1d819f5123c82a71229f8220c490e8855ae6534cab1d9c708182a956b3839479239c62bab7d6c61eff58abdb3185c2a60c88b0ccad83a1c989026dc2199333157969e2f21ccccb61075c2c268977217842d37a18c77ea669812a77bc097254ea6f3e56545f2202f0a43b7f2aaffb4052f2815ba78d194a02f562fb8bcc78b01f07eebf814f04b8ebead4feac787d73edc08e2a2e80160dcf6506bdbcb76c1e876ed8061b217ec6a363fdea9c53a838eb3c739663e7cd564bd5509a5c4fe0e7adf02829111994c64c6f675ecdec85dceadfa2339ad5296d7a496e045c6f3c2d02cef960562b50ec976bd75a6bbe9173bbae784201c5558e43793456a4322a312c52961bc3010be23940ae5bd03937cb86ea004f9378168264c441489288f4535bc20196dd3552684513ea7f206f218631acb86ed43c8d119274fda0939b46ebe1cd6e00ee6bdde9dddec33efdba15a37534c459eac8b1b0ad9adfd812097f9175b0acbb23a20051231657ba4cbe4e4d6a1fd958791c9a7243ba4f29911ccc999459348253e8c55e056b177ffdefb338b3a19e8e2e790e12a20ddea1ae0870b07c669b2d4cc7a42d5a4d97a85d5a97b0a8134e797ef25a72d08a02991d882ea562d815594cf5dfa0ba81d084cf8d9ddeeee1427b67e458ac62b58b8565cbeca8e2b55de3b1733a7741ca0907431ab5f61adb5212153c28e22ed04102420ac1774c00b537b9813901b84f9e1cfa47342a54bf399894c185027e0c9f3f782bc227edc5768afc4e4d98895f51e3af35c56299cece65376d32132a558ea2343dd3b8ec1e81ad7eb5909371fea75a67309a6e9b8bfc90597680e838b2a0970fe118f06934d1a29e7edca70207988767a749678b8aeabc223320bbe69d180c5a52e5e5d10a4144fefefff671721b2b62c8dbade134e7c336e339b78b4e3e94fb548c310c3c800eaf6ff1c30b340b73e051c923f84e51418ada7e3bc9b9064ae901919a8d436e28799f270617baaf2a1e5d6b59f515053393583d558b279d85ddc53485085533976efa3502ce842e708dfb7e49e5b5c80101e6ea4267ad1ff76117e094a891d85740fd7efc35e346c8baaaa5a7f3f79dbbb1f8f00676366f033b7a2cbbcfaf37e53552f17ecca0d08e63db4e730827c2ee0339a13d9ccb9949d484e6126f1508c94108096d6385e41c546a1c6b227aec50ed7559009c48bb19ff4a5a89db73b0efa16c3bbe3f2fa31849bc1478b71175fb1bc1c35cd093b82d26d22473c53cc7ed5b060a7facc182594440cc5d6ad2b287bfe18fe8b14403229a289f78b826fd14f22b35ecc7ebd0e88b208ad0f148ba74eb4ceeebd1f1c45c001a083bb29876b4f954d7497179a70b39572e658e89a579443aeaa95345b8dab9454eed27620aa08e286304f03de06d92fb02797363380c80670a4074879f0c447de24d3f298e795cf707b020fb4c35df950c150414a9b099f28f121c2e74cfcb4ac2a6d26c0be6b42ba1a05adda393a3480e6d9829b0253e36ee1c0a1b5ee57357da996a2f33eefdfcc1e59224428770730f51d29851fb44d338af347b71aaec9c1d812b999c96eec524046385ba7b49b1ba6d996ba07335d1b184ac7d198d94e319ed4b04ff8708f5ba58b91b57533995962f14a606cb7df5b5688e45d325cdb28fca16133478e5e8470951e7cfdfe61e8ac58035ce2b36970562475d2e7a57f7c6ee7b50114866f0c87cc32978c26b54bf8d2d60</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-surge">      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="Enter Password.">Enter Password.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
          <category> Diary </category>
          
          <category> 小黄 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>220730</title>
      <link href="/2022/07/30%E9%9A%8F%E7%AC%94/220730/94a71e9c/"/>
      <url>/2022/07/30%E9%9A%8F%E7%AC%94/220730/94a71e9c/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, this password doesn't look right. Please try again." data-whm="Sorry, this article cannot be verified, but you can still see the decrypted content.">  <script id="hbeData" type="hbeData" data-hmacdigest="14026df27d05d441d50582e090b1712672164774f32e21089ae3e0ae4d3dcb86"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-surge">      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="Enter Password.">Enter Password.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
          <category> Diary </category>
          
          <category> 小黄 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript ES6+</title>
      <link href="/2022/07/28%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF_JavaScript_JavaScript%20ES6+/f75e92e9/"/>
      <url>/2022/07/28%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF_JavaScript_JavaScript%20ES6+/f75e92e9/</url>
      
        <content type="html"><![CDATA[<h1 id="let-和-const-命令"><a href="#let-和-const-命令" class="headerlink" title="let 和 const 命令"></a>let 和 const 命令</h1><h2 id="let"><a href="#let" class="headerlink" title="let"></a>let</h2><h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><ol><li>不允许重复声明</li><li>不存在变量提升</li><li>块级作用域</li><li>不影响作用域链</li></ol><h2 id="const"><a href="#const" class="headerlink" title="const"></a>const</h2><h3 id="特性-1"><a href="#特性-1" class="headerlink" title="特性"></a>特性</h3><ol><li>一定要赋初始值</li><li>一般常量使用大写（潜规则）</li><li>常量的值不能修改</li><li>块级作用域</li><li>对于数组和对象的元素修改，不算做对常量的修改【常量的地址没有改变】</li></ol><h2 id="globalThis-对象"><a href="#globalThis-对象" class="headerlink" title="globalThis 对象"></a>globalThis 对象</h2><p>ES2020 在语言标准的层面，引入globalThis作为顶层对象。也就是说，任何环境下，globalThis都是存在的，都<strong>可以从它拿到顶层对象，指向全局环境下的 this</strong></p><h3 id="顶层对象"><a href="#顶层对象" class="headerlink" title="顶层对象"></a>顶层对象</h3><ul><li>浏览器里面，顶层对象是 window</li><li>Node 里面，顶层对象是 global</li><li>浏览器和 Web Worker 里面，self也指向顶层对象，但是 Node 没有 self</li></ul><h1 id="变量的解构赋值"><a href="#变量的解构赋值" class="headerlink" title="变量的解构赋值"></a>变量的解构赋值</h1><h2 id="数组的解构赋值"><a href="#数组的解构赋值" class="headerlink" title="数组的解构赋值"></a>数组的解构赋值</h2><blockquote><p>数组的元素是按次序排列的，变量的取值由它的位置决定；</p></blockquote><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p><code>let [a, b, c] = [1, 2, 3];</code></p><h2 id="对象的解构赋值"><a href="#对象的解构赋值" class="headerlink" title="对象的解构赋值"></a>对象的解构赋值</h2><blockquote><p>对象的属性没有次序，变量必须与属性同名，才能取到正确的值。</p></blockquote><h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><p><code>let &#123; foo, bar &#125; = &#123; foo: &#39;aaa&#39;, bar: &#39;bbb&#39; &#125;;</code></p><h1 id="字符串的扩展"><a href="#字符串的扩展" class="headerlink" title="字符串的扩展"></a>字符串的扩展</h1><h2 id="模板字符串"><a href="#模板字符串" class="headerlink" title="模板字符串"></a>模板字符串</h2><h3 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h3><p><strong>反引号（`）标识</strong></p><h3 id="特性-2"><a href="#特性-2" class="headerlink" title="特性"></a>特性</h3><ol><li>模板字符串的空格和换行，都是被保留的</li><li>模板字符串中嵌入变量，需要将变量名写在<code>$&#123;&#125;</code>之中</li></ol><h2 id="字符串的新增方法"><a href="#字符串的新增方法" class="headerlink" title="字符串的新增方法"></a>字符串的新增方法</h2><h3 id="实例方法：trimStart-，trimEnd"><a href="#实例方法：trimStart-，trimEnd" class="headerlink" title="实例方法：trimStart()，trimEnd()"></a>实例方法：trimStart()，trimEnd()</h3><p>ES2019 对字符串实例新增了trimStart()和trimEnd()这两个方法。它们返回的都是新字符串，<strong>不会修改原始字符串</strong>。</p><p>trimStart() 消除字符串头部的空格<br>trimEnd() 消除尾部的空格</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> s = <span class="string">&#x27;  abc  &#x27;</span>;</span><br><span class="line"></span><br><span class="line">s.<span class="title function_">trim</span>() <span class="comment">// &quot;abc&quot;</span></span><br><span class="line">s.<span class="title function_">trimStart</span>() <span class="comment">// &quot;abc  &quot;</span></span><br><span class="line">s.<span class="title function_">trimEnd</span>() <span class="comment">// &quot;  abc&quot;</span></span><br></pre></td></tr></table></figure><h3 id="实例方法：matchAll"><a href="#实例方法：matchAll" class="headerlink" title="实例方法：matchAll()"></a>实例方法：matchAll()</h3><p>matchAll()方法返回一个正则表达式在当前字符串的所有匹配，<strong>返回的是一个遍历器（Iterator）</strong>可以用for…of循环取出</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> string = <span class="string">&#x27;test1test2test3&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> regex = <span class="regexp">/t(e)(st(\d?))/g</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> match <span class="keyword">of</span> string.<span class="title function_">matchAll</span>(regex)) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(match);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// [&quot;test1&quot;, &quot;e&quot;, &quot;st1&quot;, &quot;1&quot;, index: 0, input: &quot;test1test2test3&quot;]</span></span><br><span class="line"><span class="comment">// [&quot;test2&quot;, &quot;e&quot;, &quot;st2&quot;, &quot;2&quot;, index: 5, input: &quot;test1test2test3&quot;]</span></span><br><span class="line"><span class="comment">// [&quot;test3&quot;, &quot;e&quot;, &quot;st3&quot;, &quot;3&quot;, index: 10, input: &quot;test1test2test3&quot;]</span></span><br></pre></td></tr></table></figure><h1 id="正则的扩展"><a href="#正则的扩展" class="headerlink" title="正则的扩展"></a>正则的扩展</h1><h2 id="s-修饰符：dotAll-模式"><a href="#s-修饰符：dotAll-模式" class="headerlink" title="s 修饰符：dotAll 模式"></a>s 修饰符：dotAll 模式</h2><blockquote><ul><li>点（<code>.</code>）是一个特殊字符，代表除换行外任意的单个字符，但是，很多时候我们希望匹配的是任意单个字符。</li><li>ES2018 引入 <code>s</code> 修饰符，使得 . 可以匹配任意单个字符。这被称为dotAll模式，即点（dot）代表一切字符。所以，正则表达式还引入了一个<code>dotAll属&gt; 性</code>，<strong>返回一个布尔值</strong>，表示该正则表达式是否处在dotAll模式。</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> re = <span class="regexp">/foo.bar/</span>s;</span><br><span class="line">        </span><br><span class="line">re.<span class="title function_">test</span>(<span class="string">&#x27;foo\nbar&#x27;</span>) <span class="comment">// true</span></span><br><span class="line">re.<span class="property">dotAll</span> <span class="comment">// true</span></span><br><span class="line">re.<span class="property">flags</span> <span class="comment">// &#x27;s&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="断言"><a href="#断言" class="headerlink" title="断言"></a>断言</h2><h3 id="先行断言"><a href="#先行断言" class="headerlink" title="先行断言"></a>先行断言</h3><p>先行断言指的是， x 只有在 y 前面才匹配，必须写成<code>/x(?=y)/</code>。如: 只匹配百分号之前的数字，要写成<code>/\d+(?=%)/</code><br>先行否定断言指的是， x 只有不在 y 前面才匹配，必须写成<code>/x(?!y)/</code>。如: 只匹配不在百分号之前的数字，要写成<code>/\d+(?!%)/</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/\d+(?=%)/.<span class="title function_">exec</span>(<span class="string">&#x27;100% of US presidents have been male&#x27;</span>)  <span class="comment">// [&quot;100&quot;]</span></span><br><span class="line">/\d+(?!%)/.<span class="title function_">exec</span>(<span class="string">&#x27;that’s all 44 of them&#x27;</span>)                 <span class="comment">// [&quot;44&quot;]</span></span><br></pre></td></tr></table></figure><h3 id="后行断言"><a href="#后行断言" class="headerlink" title="后行断言"></a>后行断言</h3><p>后行断言与先行断言相反， x 只有在 y 后面才匹配，必须写成<code>/(?&lt;=y)x/</code>。如: 只匹配美元符号之后的数字，要写成<code>/(?&lt;=\$)\d+/</code><br>后行否定断言与先行否定断言相反， x 只有不在 y 后面才匹配，必须写成<code>/(?&lt;!y)x/</code>。如: 只匹配不在美元符号后面的数字，要写成<code>/(?&lt;!\$)\d+/</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/(?&lt;=\$)\d+<span class="regexp">/.exec(&#x27;Benjamin Franklin is on the $100 bill&#x27;)  /</span><span class="regexp">/ [&quot;100&quot;]</span></span><br><span class="line"><span class="regexp">/</span>(?&lt;!\$)\d+<span class="regexp">/.exec(&#x27;it’s is worth about €90&#x27;)                /</span><span class="regexp">/ [&quot;90&quot;]</span></span><br></pre></td></tr></table></figure><h2 id="具名组匹配"><a href="#具名组匹配" class="headerlink" title="具名组匹配"></a>具名组匹配</h2><p>ES2018 引入了具名组匹配（Named Capture Groups），允许<strong>为每一个组匹配指定一个名字</strong>，既便于阅读代码，又便于引用</p><h3 id="语法-3"><a href="#语法-3" class="headerlink" title="语法"></a>语法</h3><p><code>具名组匹配</code>在圆括号内部，模式的头部添加 <code>问号 + 尖括号 + 组名</code>，然后就可以在 exec 方法返回结果的 <strong><code>groups 属性</code>上引用该组名</strong>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="variable constant_">RE_DATE</span> = <span class="regexp">/(?&lt;year&gt;\d&#123;4&#125;)-(?&lt;month&gt;\d&#123;2&#125;)-(?&lt;day&gt;\d&#123;2&#125;)/</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> matchObj = <span class="variable constant_">RE_DATE</span>.<span class="title function_">exec</span>(<span class="string">&#x27;1999-12-31&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> year = matchObj.<span class="property">groups</span>.<span class="property">year</span>; <span class="comment">// &quot;1999&quot;</span></span><br><span class="line"><span class="keyword">const</span> month = matchObj.<span class="property">groups</span>.<span class="property">month</span>; <span class="comment">// &quot;12&quot;</span></span><br><span class="line"><span class="keyword">const</span> day = matchObj.<span class="property">groups</span>.<span class="property">day</span>; <span class="comment">// &quot;31&quot;</span></span><br></pre></td></tr></table></figure><h1 id="数值的扩展"><a href="#数值的扩展" class="headerlink" title="数值的扩展"></a>数值的扩展</h1><h2 id="二进制和八进制表示法"><a href="#二进制和八进制表示法" class="headerlink" title="二进制和八进制表示法"></a>二进制和八进制表示法</h2><p>ES6 提供了二进制和八进制数值的新的写法，分别用前缀 <code>0b</code> 和 <code>0o</code> 表示</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0b111110111</span> === <span class="number">503</span> <span class="comment">// true</span></span><br><span class="line"><span class="number">0o767</span> === <span class="number">503</span> <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h2 id="Number-isFinite-Number-isNaN"><a href="#Number-isFinite-Number-isNaN" class="headerlink" title="Number.isFinite(), Number.isNaN()"></a>Number.isFinite(), Number.isNaN()</h2><p>Number.isFinite()用来检查一个数值是否为有限的（finite），即不是Infinity</p><p>Number.isNaN()用来检查一个值是否为NaN</p><h2 id="Number-parseInt-Number-parseFloat"><a href="#Number-parseInt-Number-parseFloat" class="headerlink" title="Number.parseInt(), Number.parseFloat()"></a>Number.parseInt(), Number.parseFloat()</h2><p>ES6 将全局方法parseInt()和parseFloat()，移植到Number对象上面，行为完全保持不变。这样做的目的，是逐步减少全局性方法，使得语言逐步<strong>模块化</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ES5的写法</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">&#x27;12.34&#x27;</span>) <span class="comment">// 12</span></span><br><span class="line"><span class="built_in">parseFloat</span>(<span class="string">&#x27;123.45#&#x27;</span>) <span class="comment">// 123.45</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ES6的写法</span></span><br><span class="line"><span class="title class_">Number</span>.<span class="built_in">parseInt</span>(<span class="string">&#x27;12.34&#x27;</span>) <span class="comment">// 12</span></span><br><span class="line"><span class="title class_">Number</span>.<span class="built_in">parseFloat</span>(<span class="string">&#x27;123.45#&#x27;</span>) <span class="comment">// 123.45</span></span><br></pre></td></tr></table></figure><h2 id="Number-isInteger"><a href="#Number-isInteger" class="headerlink" title="Number.isInteger()"></a>Number.isInteger()</h2><p>Number.isInteger()用来判断一个数值是否为整数</p><p>注意：如果对数据<strong>精度</strong>的要求较高，<strong>不建议</strong>使用Number.isInteger()判断</p><h2 id="Number-EPSILON"><a href="#Number-EPSILON" class="headerlink" title="Number.EPSILON"></a>Number.EPSILON</h2><p>Number.EPSILON 是 ES6 在Number对象上面，新增一个极小的常量，是 JavaScript 能够表示的<strong>最小精度</strong>。误差如果小于这个值，就可以认为已经没有意义了，即不存在误差了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">equal</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">   <span class="keyword">if</span> (<span class="title class_">Math</span>.<span class="title function_">abs</span>(a - b) &lt; <span class="title class_">Number</span>.<span class="property">EPSILON</span>) &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">0.1</span> + <span class="number">0.2</span> === <span class="number">0.3</span>); <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">equal</span>(<span class="number">0.1</span> + <span class="number">0.2</span>, <span class="number">0.3</span>)); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h2 id="Math-对象的扩展"><a href="#Math-对象的扩展" class="headerlink" title="Math 对象的扩展"></a>Math 对象的扩展</h2><h3 id="Math-trunc"><a href="#Math-trunc" class="headerlink" title="Math.trunc()"></a>Math.trunc()</h3><p>Math.trunc方法用于去除一个数的小数部分，返回整数部分</p><h3 id="Math-sign"><a href="#Math-sign" class="headerlink" title="Math.sign()"></a>Math.sign()</h3><p>Math.sign方法用来判断一个数到底是正数、负数、还是零。对于非数值，会先将其转换为数值。</p><p>它会返回五种值：</p><ol><li>参数为正数，返回 +1</li><li>参数为负数，返回 -1</li><li>参数为 0，返回 0</li><li>参数为 -0，返回 -0</li><li>其他值，返回 NaN</li></ol><h2 id="BigInt-数据类型"><a href="#BigInt-数据类型" class="headerlink" title="BigInt 数据类型"></a>BigInt 数据类型</h2><p>ES2020 引入了一种新的数据类型 BigInt（大整数），来解决精度范围限制的问题，这是 ECMAScript 的第八种数据类型。</p><h3 id="BigInt"><a href="#BigInt" class="headerlink" title="BigInt"></a>BigInt</h3><p>BigInt 类型的数据必须添加后缀 <code>n</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1234</span> <span class="comment">// 普通整数</span></span><br><span class="line"><span class="number">1234n</span> <span class="comment">// BigInt</span></span><br><span class="line"><span class="keyword">typeof</span> <span class="number">1234n</span> <span class="comment">// &#x27;bigint&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// BigInt 的运算</span></span><br><span class="line"><span class="number">1n</span> + <span class="number">2n</span> <span class="comment">// 3n</span></span><br></pre></td></tr></table></figure><h3 id="BigInt-函数"><a href="#BigInt-函数" class="headerlink" title="BigInt 函数"></a>BigInt 函数</h3><p>JavaScript 原生提供BigInt函数，可以用它生成 BigInt 类型的数值。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">BigInt</span>(<span class="number">123</span>) <span class="comment">// 123n</span></span><br></pre></td></tr></table></figure><h1 id="函数的扩展"><a href="#函数的扩展" class="headerlink" title="函数的扩展"></a>函数的扩展</h1><h2 id="函数参数的默认值"><a href="#函数参数的默认值" class="headerlink" title="函数参数的默认值"></a>函数参数的默认值</h2><h3 id="语法-4"><a href="#语法-4" class="headerlink" title="语法"></a>语法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Point</span>(<span class="params">x = <span class="number">0</span>, y = <span class="number">0</span></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">x</span> = x;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">y</span> = y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Point</span>();</span><br><span class="line">p <span class="comment">// &#123; x: 0, y: 0 &#125;</span></span><br></pre></td></tr></table></figure><h3 id="特性-3"><a href="#特性-3" class="headerlink" title="特性"></a>特性</h3><ol><li>形参初始值 具有默认值的参数，一般位置要靠后（潜规则）</li><li>与解构赋值结合</li></ol><h2 id="rest-参数"><a href="#rest-参数" class="headerlink" title="rest 参数"></a>rest 参数</h2><h3 id="语法-5"><a href="#语法-5" class="headerlink" title="语法"></a>语法</h3><p><code>function (...变量名) &#123;&#125;</code> （rest 参数获取的是一个数组，可以使用数组的一系列方法。）</p><h3 id="特性-4"><a href="#特性-4" class="headerlink" title="特性"></a>特性</h3><ol><li>当有多个形参时，rest 参数必须要放到参数最后（且rest 参数之后不能再有其他参数）</li><li>函数的 length属性，不包括 rest 参数</li></ol><h2 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h2><p>ES6 允许使用箭头（<code>=&gt;</code>）定义函数。（箭头函数适合与this无关的回调，定时器，数组的方法回调）</p><h3 id="语法-6"><a href="#语法-6" class="headerlink" title="语法"></a>语法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title function_">f</span> = v =&gt; v;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 等同于</span></span><br><span class="line"><span class="keyword">var</span> f = <span class="keyword">function</span> (<span class="params">v</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> v;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="特性-5"><a href="#特性-5" class="headerlink" title="特性"></a>特性</h3><ol><li><strong>箭头函数没有自己的 this对象。（this总是指向函数定义生效时所在的对象）</strong></li><li>不可以当作构造函数实例化对象</li><li>不可以使用 arguments对象</li><li>不可以使用 yield命令</li></ol><h1 id="数组的扩展"><a href="#数组的扩展" class="headerlink" title="数组的扩展"></a>数组的扩展</h1><h2 id="扩展运算符"><a href="#扩展运算符" class="headerlink" title="扩展运算符"></a>扩展运算符</h2><h3 id="语法-7"><a href="#语法-7" class="headerlink" title="语法"></a>语法</h3><p>扩展运算符（spread）是三个点（<code>...</code>）将一个<strong>数组转为用逗号分隔的参数序列</strong>。</p><h3 id="运用"><a href="#运用" class="headerlink" title="运用"></a>运用</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 数组合并</span></span><br><span class="line"><span class="keyword">let</span> arr1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">let</span> arr2 = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>([...arr1, ...arr2]); <span class="comment">// (6) [1, 2, 3, 4, 5, 6]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 数组的克隆（浅拷贝）</span></span><br><span class="line"><span class="keyword">let</span> arr3 = [<span class="string">&#x27;yellow&#x27;</span>, <span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;pink&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> arr3_copy = [...arr3];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr3_copy); <span class="comment">// (3) [&#x27;yellow&#x27;, &#x27;green&#x27;, &#x27;pink&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 将伪数组转换为真数组</span></span><br><span class="line"><span class="keyword">let</span> divs = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> divsArr = [...divs];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(divsArr); <span class="comment">// (3) [div, div, div]</span></span><br></pre></td></tr></table></figure><h2 id="实例方法：includes"><a href="#实例方法：includes" class="headerlink" title="实例方法：includes()"></a>实例方法：includes()</h2><p>Array.prototype.includes方法返回一个布尔值，表示某个数组是否包含给定的值，该方法的第二个参数表示搜索的起始位置。</p><h2 id="实例方法：flat-，flatMap"><a href="#实例方法：flat-，flatMap" class="headerlink" title="实例方法：flat()，flatMap()"></a>实例方法：flat()，flatMap()</h2><h3 id="flat"><a href="#flat" class="headerlink" title="flat()"></a>flat()</h3><p>flat() 将<strong>多维数组转化为低位数组</strong>，该方法返回一个新数组，对原数据没有影响。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3</span>, <span class="number">4</span>]].<span class="title function_">flat</span>()</span><br><span class="line"><span class="comment">// [1, 2, 3, 4]</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3</span>, [<span class="number">4</span>, <span class="number">5</span>]]].<span class="title function_">flat</span>()</span><br><span class="line"><span class="comment">// [1, 2, 3, [4, 5]]</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3</span>, [<span class="number">4</span>, <span class="number">5</span>]]].<span class="title function_">flat</span>(<span class="number">2</span>)</span><br><span class="line"><span class="comment">// [1, 2, 3, 4, 5]</span></span><br><span class="line">[<span class="number">1</span>, [<span class="number">2</span>, [<span class="number">3</span>]]].<span class="title function_">flat</span>(<span class="title class_">Infinity</span>)</span><br><span class="line"><span class="comment">// [1, 2, 3]</span></span><br></pre></td></tr></table></figure><p>补充：</p><ol><li>flat()方法的参数为深度表示想要拉平的层数，默认为 1</li><li>如果不管有多少层嵌套，都要转成一维数组，可以用 <code>Infinity</code> 关键字作为参数</li></ol><h3 id="flatMap"><a href="#flatMap" class="headerlink" title="flatMap()"></a>flatMap()</h3><p>flatMap()方法对原数组的每个成员执行一个函数（相当于执行Array.prototype.map()），然后对返回值组成的数组执行flat()方法。该方法返回一个新数组，不改变原数组。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 相当于 [[2, 4], [3, 6], [4, 8]].flat()</span></span><br><span class="line">[<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>].<span class="title function_">flatMap</span>(<span class="function">(<span class="params">x</span>) =&gt;</span> [x, x * <span class="number">2</span>])</span><br><span class="line"><span class="comment">// [2, 4, 3, 6, 4, 8]</span></span><br></pre></td></tr></table></figure><p>补充：</p><ol><li>flatMap() 只能展开一层数组</li><li>flatMap() 方法还可以有第二个参数，用来绑定遍历函数里面的 this</li></ol><h1 id="对象的扩展"><a href="#对象的扩展" class="headerlink" title="对象的扩展"></a>对象的扩展</h1><h2 id="属性的简洁表示法"><a href="#属性的简洁表示法" class="headerlink" title="属性的简洁表示法"></a>属性的简洁表示法</h2><p>ES6允许在大括号里面，<strong>直接写入变量和函数</strong>，作为对象的属性和方法。</p><h3 id="语法-8"><a href="#语法-8" class="headerlink" title="语法"></a>语法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> name = <span class="string">&#x27;Frank&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> sayHello = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Hello!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Person</span> = &#123;</span><br><span class="line">   name,</span><br><span class="line">   sayHello,</span><br><span class="line">   <span class="title function_">sayName</span>(<span class="params"></span>) &#123;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;我的名字是：&#x27;</span>, <span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Person</span>.<span class="property">name</span>);</span><br><span class="line"><span class="title class_">Person</span>.<span class="title function_">sayHello</span>();</span><br><span class="line"><span class="title class_">Person</span>.<span class="title function_">sayName</span>();</span><br></pre></td></tr></table></figure><h2 id="对象的方法拓展"><a href="#对象的方法拓展" class="headerlink" title="对象的方法拓展"></a>对象的方法拓展</h2><h3 id="Object-is"><a href="#Object-is" class="headerlink" title="Object.is"></a>Object.is</h3><p>Object.is 判断两个值是否完全相等</p><h3 id="Object-assign"><a href="#Object-assign" class="headerlink" title="Object.assign"></a>Object.assign</h3><p>Object.assign 用于对象合并</p><p>应用场景</p><ol><li>配置合并</li></ol><h3 id="Object-set-get-PrototypeOf"><a href="#Object-set-get-PrototypeOf" class="headerlink" title="Object.set[get]PrototypeOf"></a>Object.set[get]PrototypeOf</h3><p>Object.set[get]PrototypeOf 设置/获取原型对象</p><hr/><h3 id="Object-keys"><a href="#Object-keys" class="headerlink" title="Object.keys"></a>Object.keys</h3><p>Object.keys方法，返回一个数组，成员是参数对象自身的（不含继承的）所有可遍历（enumerable）属性的<strong>键名</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123; <span class="attr">foo</span>: <span class="string">&#x27;bar&#x27;</span>, <span class="attr">baz</span>: <span class="number">42</span> &#125;;</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">keys</span>(obj)</span><br><span class="line"><span class="comment">// [&quot;foo&quot;, &quot;baz&quot;]</span></span><br></pre></td></tr></table></figure><h3 id="Object-values"><a href="#Object-values" class="headerlink" title="Object.values"></a>Object.values</h3><p>Object.values方法返回一个数组，成员是参数对象自身的（不含继承的）所有可遍历（enumerable）属性的<strong>键值</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">foo</span>: <span class="string">&#x27;bar&#x27;</span>, <span class="attr">baz</span>: <span class="number">42</span> &#125;;</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">values</span>(obj)</span><br><span class="line"><span class="comment">// [&quot;bar&quot;, 42]</span></span><br></pre></td></tr></table></figure><h3 id="Object-entries"><a href="#Object-entries" class="headerlink" title="Object.entries"></a>Object.entries</h3><p>Object.entries()方法返回一个数组，成员是参数对象自身的（不含继承的）所有可遍历（enumerable）属性的键值对数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">foo</span>: <span class="string">&#x27;bar&#x27;</span>, <span class="attr">baz</span>: <span class="number">42</span> &#125;;</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">entries</span>(obj)</span><br><span class="line"><span class="comment">// [ [&quot;foo&quot;, &quot;bar&quot;], [&quot;baz&quot;, 42] ]</span></span><br></pre></td></tr></table></figure><hr/><h3 id="Object-getOwnPropertyDescriptors"><a href="#Object-getOwnPropertyDescriptors" class="headerlink" title="Object.getOwnPropertyDescriptors"></a>Object.getOwnPropertyDescriptors</h3><p>Object.getOwnPropertyDescriptors()方法，返回指定对象所有自身属性（非继承属性）的<strong>描述对象</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">  <span class="attr">foo</span>: <span class="number">123</span>,</span><br><span class="line">  <span class="keyword">get</span> <span class="title function_">bar</span>() &#123; <span class="keyword">return</span> <span class="string">&#x27;abc&#x27;</span> &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">getOwnPropertyDescriptors</span>(obj)</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#123; foo:</span></span><br><span class="line"><span class="comment">//    &#123; value: 123,</span></span><br><span class="line"><span class="comment">//      writable: true,</span></span><br><span class="line"><span class="comment">//      enumerable: true,</span></span><br><span class="line"><span class="comment">//      configurable: true &#125;,</span></span><br><span class="line"><span class="comment">//   bar:</span></span><br><span class="line"><span class="comment">//    &#123; get: [Function: get bar],</span></span><br><span class="line"><span class="comment">//      set: undefined,</span></span><br><span class="line"><span class="comment">//      enumerable: true,</span></span><br><span class="line"><span class="comment">//      configurable: true &#125; </span></span><br><span class="line"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure><p>应用场景：</p><ol><li>对象克隆</li></ol><h3 id="Object-fromEntries"><a href="#Object-fromEntries" class="headerlink" title="Object.fromEntries"></a>Object.fromEntries</h3><p>Object.fromEntries()方法是 Object.entries()的<strong>逆操作</strong>，用于将一个键值对数组<strong>转为对象</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Object</span>.<span class="title function_">fromEntries</span>([</span><br><span class="line">  [<span class="string">&#x27;foo&#x27;</span>, <span class="string">&#x27;bar&#x27;</span>],</span><br><span class="line">  [<span class="string">&#x27;baz&#x27;</span>, <span class="number">42</span>]</span><br><span class="line">])</span><br><span class="line"><span class="comment">// &#123; foo: &quot;bar&quot;, baz: 42 &#125;</span></span><br></pre></td></tr></table></figure><p>应用场景：</p><ol><li>配合URLSearchParams对象，将查询字符串转为对象<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Object</span>.<span class="title function_">fromEntries</span>(<span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(<span class="string">&#x27;foo=bar&amp;baz=qux&#x27;</span>))</span><br><span class="line"><span class="comment">// &#123; foo: &quot;bar&quot;, baz: &quot;qux&quot; &#125;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="对象的扩展运算符"><a href="#对象的扩展运算符" class="headerlink" title="对象的扩展运算符"></a>对象的扩展运算符</h2><p>ES2018 将扩展运算符引入了对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> &#123; x, y, ...z &#125; = &#123; <span class="attr">x</span>: <span class="number">1</span>, <span class="attr">y</span>: <span class="number">2</span>, <span class="attr">a</span>: <span class="number">3</span>, <span class="attr">b</span>: <span class="number">4</span> &#125;;</span><br><span class="line">x <span class="comment">// 1</span></span><br><span class="line">y <span class="comment">// 2</span></span><br><span class="line">z <span class="comment">// &#123; a: 3, b: 4 &#125;</span></span><br></pre></td></tr></table></figure><h1 id="运算符的扩展"><a href="#运算符的扩展" class="headerlink" title="运算符的扩展"></a>运算符的扩展</h1><h2 id="指数运算符"><a href="#指数运算符" class="headerlink" title="指数运算符"></a>指数运算符</h2><p>ES2016 新增了一个指数运算符（<code>**</code>）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span> ** <span class="number">2</span> <span class="comment">// 4</span></span><br><span class="line"><span class="number">2</span> ** <span class="number">3</span> <span class="comment">// 8</span></span><br></pre></td></tr></table></figure><h2 id="链判断运算符"><a href="#链判断运算符" class="headerlink" title="链判断运算符"></a>链判断运算符</h2><p>编程实务中，如果读取对象内部的某个属性，往往需要判断一下，属性的上层对象是否存在。这样的层层判断非常麻烦。<br>因此 ES2020 引入了链判断运算符（optional chaining operator）<code>?.</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">main</span>(<span class="params">config</span>) &#123;</span><br><span class="line">   <span class="comment">// 传统判断非常麻烦</span></span><br><span class="line">   <span class="comment">// const dbHost = config &amp;&amp; config.db &amp;&amp; config.db.host;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">// 链判断运算符</span></span><br><span class="line">   <span class="keyword">const</span> dbHost = config?.<span class="property">db</span>?.<span class="property">host</span>;</span><br><span class="line">   </span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(dbHost); <span class="comment">// 192.168.0.1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">main</span>(&#123;</span><br><span class="line">   <span class="attr">db</span>: &#123;</span><br><span class="line">       <span class="attr">host</span>: <span class="string">&#x27;192.168.0.1&#x27;</span>,</span><br><span class="line">       <span class="attr">username</span>: <span class="string">&#x27;admin&#x27;</span></span><br><span class="line">   &#125;,</span><br><span class="line">   <span class="attr">cache</span>: &#123;</span><br><span class="line">       <span class="attr">host</span>: <span class="string">&#x27;192.168.10.1&#x27;</span>,</span><br><span class="line">       <span class="attr">username</span>: <span class="string">&#x27;root&#x27;</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="Symbol"><a href="#Symbol" class="headerlink" title="Symbol"></a>Symbol</h1><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. Symbol 值通过Symbol()函数生成</span></span><br><span class="line"><span class="keyword">let</span> s = <span class="title class_">Symbol</span>();</span><br><span class="line"><span class="keyword">typeof</span> s</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 可以接受一个字符串作为参数，表示对 Symbol 实例的描述。(可以通过实例属性description，直接返回 Symbol 值的描述。)</span></span><br><span class="line"><span class="keyword">let</span> s1 = <span class="title class_">Symbol</span>(<span class="string">&#x27;foo&#x27;</span>);</span><br><span class="line">s1.<span class="title function_">toString</span>() <span class="comment">// &quot;Symbol(foo)&quot;</span></span><br><span class="line">s1.<span class="property">description</span> <span class="comment">// foo</span></span><br></pre></td></tr></table></figure><h3 id="Symbol-prototype-description"><a href="#Symbol-prototype-description" class="headerlink" title="Symbol.prototype.description"></a>Symbol.prototype.description</h3><p>Symbol()函数创建 Symbol 值时，可以用参数添加一个描述。ES2019 提供了一个 Symbol 值的实例属性 description，直接<strong>返回 Symbol 值的描述</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> sym = <span class="title class_">Symbol</span>(<span class="string">&#x27;foo&#x27;</span>);</span><br><span class="line">sym.<span class="property">description</span> <span class="comment">// &quot;foo&quot;</span></span><br></pre></td></tr></table></figure><h3 id="作为属性名的-Symbol"><a href="#作为属性名的-Symbol" class="headerlink" title="作为属性名的 Symbol"></a>作为属性名的 Symbol</h3><p>Symbol 值作为标识符，用于对象的属性名，就能保证不会出现同名的属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 场景一：为对象拓展方法</span></span><br><span class="line"><span class="keyword">let</span> game = &#123;</span><br><span class="line">   <span class="attr">name</span>: <span class="string">&#x27;俄罗斯方块&#x27;</span>,</span><br><span class="line">   <span class="attr">up</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;原生up方法&#x27;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 创建一个对象</span></span><br><span class="line"><span class="keyword">let</span> methods = &#123;</span><br><span class="line">   <span class="attr">up</span>: <span class="title class_">Symbol</span>(),</span><br><span class="line">   <span class="attr">down</span>: <span class="title class_">Symbol</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 2. 为 game 对象拓展</span></span><br><span class="line">game[methods.<span class="property">up</span>] = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;up 拓展方法&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">game[methods.<span class="property">down</span>] = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;down&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(game);</span><br><span class="line">game.<span class="title function_">up</span>(); <span class="comment">// 调用原生方法</span></span><br><span class="line">game[methods.<span class="property">up</span>](); <span class="comment">// 调用拓展方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 场景二：为对象添加独一无二的方法</span></span><br><span class="line"><span class="keyword">let</span> sayHello = <span class="title class_">Symbol</span>(<span class="string">&#x27;sayHello&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">   <span class="attr">name</span>: <span class="string">&#x27;frank&#x27;</span>,</span><br><span class="line">   [sayHello]: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hello,world!&#x27;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(person);</span><br><span class="line">person[sayHello]() <span class="comment">// 调用</span></span><br></pre></td></tr></table></figure><h3 id="内置的-Symbol-值"><a href="#内置的-Symbol-值" class="headerlink" title="内置的 Symbol 值"></a>内置的 Symbol 值</h3><h4 id="Symbol-hasInstance"><a href="#Symbol-hasInstance" class="headerlink" title="Symbol.hasInstance"></a>Symbol.hasInstance</h4><p>对象的Symbol.hasInstance属性，指向一个内部方法。当其他对象使用instanceof运算符，判断是否为该对象的实例时，会调用这个方法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyClass</span> &#123;</span><br><span class="line">   [<span class="title class_">Symbol</span>.<span class="property">hasInstance</span>](foo) &#123;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(foo); <span class="comment">// (3) [1, 2, 3]</span></span><br><span class="line">       <span class="keyword">return</span> foo <span class="keyword">instanceof</span> <span class="title class_">Array</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>] <span class="keyword">instanceof</span> <span class="keyword">new</span> <span class="title class_">MyClass</span>()); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h4 id="Symbol-isConcatSpreadable"><a href="#Symbol-isConcatSpreadable" class="headerlink" title="Symbol.isConcatSpreadable"></a>Symbol.isConcatSpreadable</h4><p>对象的Symbol.isConcatSpreadable属性等于一个布尔值，表示该对象用于Array.prototype.concat()时，是否可以展开。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr1 = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> arr2 = [<span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr1.<span class="title function_">concat</span>(arr2)); <span class="comment">// (4) [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;, &#x27;d&#x27;]</span></span><br><span class="line">arr2[<span class="title class_">Symbol</span>.<span class="property">isConcatSpreadable</span>] = <span class="literal">false</span> <span class="comment">// undefined</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr1.<span class="title function_">concat</span>(arr2)); <span class="comment">// (3) [&#x27;a&#x27;, &#x27;b&#x27;, Array(2)]</span></span><br></pre></td></tr></table></figure><h1 id="Set-和-Map-数据结构"><a href="#Set-和-Map-数据结构" class="headerlink" title="Set 和 Map 数据结构"></a>Set 和 Map 数据结构</h1><h2 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h2><p>ES6 提供了新的数据结构 Set。它类似于数组，但是成员的值都是唯一的，没有重复的值。</p><h3 id="Set-实例的属性"><a href="#Set-实例的属性" class="headerlink" title="Set 实例的属性"></a>Set 实例的属性</h3><div class="table-container"><table><thead><tr><th>Set 实例的属性</th><th>Description</th></tr></thead><tbody><tr><td>Set.prototype.constructor</td><td>构造函数，默认就是Set函数</td></tr><tr><td>Set.prototype.size</td><td>返回Set实例的成员总数</td></tr></tbody></table></div><h3 id="Set-实例的方法"><a href="#Set-实例的方法" class="headerlink" title="Set 实例的方法"></a>Set 实例的方法</h3><h4 id="操作方法"><a href="#操作方法" class="headerlink" title="操作方法"></a>操作方法</h4><div class="table-container"><table><thead><tr><th>Set 实例的操作方法</th><th>Description</th></tr></thead><tbody><tr><td>Set.prototype.add(value)</td><td>添加某个值，返回 Set 结构本身。</td></tr><tr><td>Set.prototype.delete(value)</td><td>删除某个值，返回一个布尔值，表示删除是否成功</td></tr><tr><td>Set.prototype.has(value)</td><td>表示该值是否为Set的成员</td></tr><tr><td>Set.prototype.clear()</td><td>清除所有成员，没有返回值</td></tr></tbody></table></div><h4 id="遍历方法"><a href="#遍历方法" class="headerlink" title="遍历方法"></a>遍历方法</h4><div class="table-container"><table><thead><tr><th>Set 实例的遍历方法</th><th>Description</th></tr></thead><tbody><tr><td>Set.prototype.keys()</td><td>返回键名的遍历器</td></tr><tr><td>Set.prototype.values()</td><td>返回键值的遍历器</td></tr><tr><td>Set.prototype.entries()</td><td>返回键值对的遍历器</td></tr><tr><td>Set.prototype.forEach()</td><td>使用回调函数遍历每个成员</td></tr></tbody></table></div><h3 id="Set-实践"><a href="#Set-实践" class="headerlink" title="Set 实践"></a>Set 实践</h3><h4 id="数组去重"><a href="#数组去重" class="headerlink" title="数组去重"></a>数组去重</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">let</span> res = [...<span class="keyword">new</span> <span class="title class_">Set</span>(arr)];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res); <span class="comment">// (3) [1, 2, 3]</span></span><br></pre></td></tr></table></figure><h4 id="交集"><a href="#交集" class="headerlink" title="交集"></a>交集</h4><p>两个集合中的公共部分</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="keyword">let</span> arr2 = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> res = [...<span class="keyword">new</span> <span class="title class_">Set</span>(arr1)].<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> <span class="keyword">new</span> <span class="title class_">Set</span>(arr2).<span class="title function_">has</span>(item));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res); <span class="comment">// (2) [4, 5]</span></span><br></pre></td></tr></table></figure><h4 id="并集"><a href="#并集" class="headerlink" title="并集"></a>并集</h4><p>两个集合合并之后的结果</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="keyword">let</span> arr2 = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> union = [...<span class="keyword">new</span> <span class="title class_">Set</span>([...arr1, ...arr2])];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(union); <span class="comment">// (6) [1, 2, 3, 4, 5, 6]</span></span><br></pre></td></tr></table></figure><h4 id="差集"><a href="#差集" class="headerlink" title="差集"></a>差集</h4><p>A集合在B集合中没有的元素</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="keyword">let</span> arr2 = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> diff = [...<span class="keyword">new</span> <span class="title class_">Set</span>(arr1)].<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> !<span class="keyword">new</span> <span class="title class_">Set</span>(arr2).<span class="title function_">has</span>(item));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(diff); <span class="comment">// (3) [1, 2, 3]</span></span><br></pre></td></tr></table></figure><h2 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h2><p>ES6 提供了 Map 数据结构。它类似于对象，也是键值对的集合，但是“键”的范围不限于字符串，各种类型的值（包括对象）都可以当作键。也就是说，Object 结构提供了“字符串—值”的对应，Map 结构提供了“值—值”的对应，是一种更完善的 Hash 结构实现。</p><h3 id="Map-实例的属性"><a href="#Map-实例的属性" class="headerlink" title="Map 实例的属性"></a>Map 实例的属性</h3><div class="table-container"><table><thead><tr><th>Map 实例的属性</th><th>Description</th></tr></thead><tbody><tr><td>size</td><td>返回 Map 结构的成员总数</td></tr></tbody></table></div><h3 id="Map-实例的方法"><a href="#Map-实例的方法" class="headerlink" title="Map 实例的方法"></a>Map 实例的方法</h3><h4 id="操作方法-1"><a href="#操作方法-1" class="headerlink" title="操作方法"></a>操作方法</h4><div class="table-container"><table><thead><tr><th>Map 实例的操作方法</th><th>Description</th></tr></thead><tbody><tr><td>Map.prototype.set(key, value)</td><td>设置键名key对应的键值为value，然后返回整个 Map 结构</td></tr><tr><td>Map.prototype.get(key)</td><td>读取key对应的键值，如果找不到key，返回undefined</td></tr><tr><td>Map.prototype.has(key)</td><td>返回一个布尔值，表示某个键是否在当前 Map 对象之中</td></tr><tr><td>Map.prototype.delete(key)</td><td>删除某个键，返回true。如果删除失败，返回false</td></tr><tr><td>Map.prototype.clear()</td><td>清除所有成员，没有返回值</td></tr></tbody></table></div><h4 id="遍历方法-1"><a href="#遍历方法-1" class="headerlink" title="遍历方法"></a>遍历方法</h4><div class="table-container"><table><thead><tr><th>Map 实例的遍历方法</th><th>Description</th></tr></thead><tbody><tr><td>Map.prototype.keys()</td><td>返回键名的遍历器</td></tr><tr><td>Map.prototype.values()</td><td>返回键值的遍历器</td></tr><tr><td>Map.prototype.entries()</td><td>返回所有成员的遍历器</td></tr><tr><td>Map.prototype.forEach()</td><td>遍历 Map 的所有成员</td></tr></tbody></table></div><h1 id="Promise-对象"><a href="#Promise-对象" class="headerlink" title="Promise 对象"></a>Promise 对象</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><h3 id="三个状态"><a href="#三个状态" class="headerlink" title="三个状态"></a>三个状态</h3><ol><li>pending（进行中）</li><li>fulfilled（已成功）</li><li>rejected（已失败）</li></ol><h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><p>Promise对象是一个构造函数，用来生成Promise实例</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span>(<span class="params">resolve,reject</span>)&#123;</span><br><span class="line">   <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">       <span class="comment">// let sucess = &#x27;sucess!&#x27;</span></span><br><span class="line">       <span class="comment">// resolve(sucess);</span></span><br><span class="line"></span><br><span class="line">       <span class="keyword">let</span> error = <span class="string">&#x27;error&#x27;</span>;</span><br><span class="line">       <span class="title function_">reject</span>(error);</span><br><span class="line">   &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;)</span><br><span class="line">p.<span class="title function_">then</span>(<span class="keyword">function</span>(<span class="params">value</span>)&#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(value);</span><br><span class="line">&#125;,<span class="keyword">function</span>(<span class="params">error</span>)&#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">error</span>(error);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="Promise-prototype-then"><a href="#Promise-prototype-then" class="headerlink" title="Promise.prototype.then()"></a>Promise.prototype.then()</h2><p>then 方法返回的是一个新的Promise实例（注意，不是原来那个Promise实例）因此可以采用链式写法，即then方法后面再调用另一个then方法。(解决回调地狱的问题)</p><ol><li>如果 then 回调函数中返回的结果是非 promise 类型的属性，状态为成功，返回值为 promise 成功的值</li><li>如果 then 回调函数中返回的结果是 promise，内部返回 promise 的状态决定了 then 方法的状态</li><li>如果 then 回调函数中抛出错误，状态为失败，错误值为抛出错误的值</li></ol><h2 id="Promise-prototype-catch"><a href="#Promise-prototype-catch" class="headerlink" title="Promise.prototype.catch()"></a>Promise.prototype.catch()</h2><p>一般来说，不要在then()方法里面定义 Reject 状态的回调函数（即then的第二个参数），总是使用catch方法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不推荐</span></span><br><span class="line">promise.<span class="title function_">then</span>(<span class="keyword">function</span>(<span class="params">data</span>) &#123;</span><br><span class="line"> <span class="comment">// success</span></span><br><span class="line">&#125;, <span class="keyword">function</span>(<span class="params">err</span>) &#123;</span><br><span class="line"> <span class="comment">// error</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 推荐</span></span><br><span class="line">promise.<span class="title function_">then</span>(<span class="keyword">function</span>(<span class="params">data</span>) &#123; <span class="comment">//cb</span></span><br><span class="line"> <span class="comment">// success</span></span><br><span class="line">&#125;).<span class="title function_">catch</span>(<span class="keyword">function</span>(<span class="params">err</span>) &#123;</span><br><span class="line"> <span class="comment">// error</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="Promise-allSettled"><a href="#Promise-allSettled" class="headerlink" title="Promise.allSettled()"></a>Promise.allSettled()</h2><p>ES2020 引入了Promise.allSettled()方法，用来确定一组异步操作是否都结束了（不管成功或失败）</p><p>Promise.allSettled()方法接受一个数组作为参数，数组的每个成员都是一个 Promise 对象，并返回一个新的 Promise 对象。一旦发生状态变更，<strong>状态总是</strong><code>fulfilled</code>，不会变成rejected。状态变成fulfilled后，它的回调函数会接收到一个数组作为参数，该数组的每个成员对应前面数组的每个 Promise 对象</p><h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><h3 id="读取文件"><a href="#读取文件" class="headerlink" title="读取文件"></a>读取文件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// node fs 模块</span></span><br><span class="line"><span class="keyword">let</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span> (<span class="params">resolve, reject</span>) &#123;</span><br><span class="line">    fs.<span class="title function_">readFile</span>(<span class="string">&#x27;./12-file.md&#x27;</span>, <span class="keyword">function</span> (<span class="params">err, data</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) <span class="title function_">reject</span>(err);</span><br><span class="line">        <span class="title function_">resolve</span>(data);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">p.<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">value</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(value.<span class="title function_">toString</span>());</span><br><span class="line">&#125;, <span class="keyword">function</span> (<span class="params">error</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="读取多个文件"><a href="#读取多个文件" class="headerlink" title="读取多个文件"></a>读取多个文件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span> (<span class="params">resolve, reject</span>) &#123;</span><br><span class="line">    fs.<span class="title function_">readFile</span>(<span class="string">&#x27;./12-file1.md&#x27;</span>, <span class="keyword">function</span> (<span class="params">err, data</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) <span class="title function_">reject</span>(err);</span><br><span class="line">        <span class="title function_">resolve</span>(data);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">p.<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">value</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span> (<span class="params">resolve, reject</span>) &#123;</span><br><span class="line">        fs.<span class="title function_">readFile</span>(<span class="string">&#x27;./12-file2.md&#x27;</span>, <span class="keyword">function</span> (<span class="params">err, data</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (err) <span class="title function_">reject</span>(err);</span><br><span class="line">            <span class="title function_">resolve</span>([value, data]);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">value</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(value.<span class="title function_">join</span>(<span class="string">&#x27;,&#x27;</span>));</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="封装-Ajax-请求"><a href="#封装-Ajax-请求" class="headerlink" title="封装 Ajax 请求"></a>封装 Ajax 请求</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 新建一个Promise对象</span></span><br><span class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 1.创建对象</span></span><br><span class="line">  <span class="keyword">let</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 2.初始化,设置请求方式和接口地址</span></span><br><span class="line">  xhr.<span class="title function_">open</span>(<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;./text.json&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 3.发送请求</span></span><br><span class="line">  xhr.<span class="title function_">send</span>();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 4.绑定事件，处理响应结果</span></span><br><span class="line">  xhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">// 判断</span></span><br><span class="line">      <span class="keyword">if</span> (xhr.<span class="property">readyState</span> === <span class="number">4</span>) &#123;</span><br><span class="line">          <span class="comment">// 判断响应状态码 200~299</span></span><br><span class="line">          <span class="keyword">if</span> (xhr.<span class="property">status</span> &gt;= <span class="number">200</span> &amp;&amp; xhr.<span class="property">status</span> &lt; <span class="number">300</span>) &#123;</span><br><span class="line">              <span class="comment">// 获取成功</span></span><br><span class="line">              <span class="title function_">resolve</span>(xhr.<span class="property">response</span>);</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              <span class="comment">// 获取失败</span></span><br><span class="line">              <span class="title function_">reject</span>(xhr.<span class="property">status</span>);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理状态</span></span><br><span class="line">p.<span class="title function_">then</span>(<span class="function">(<span class="params">value</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;成功:&quot;</span>, value);</span><br><span class="line">&#125;, <span class="function">(<span class="params">reason</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;失败：&quot;</span>, reason);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="Iterator（遍历器）和-for…of"><a href="#Iterator（遍历器）和-for…of" class="headerlink" title="Iterator（遍历器）和 for…of"></a>Iterator（遍历器）和 for…of</h1><blockquote><ol><li>Iterator（遍历器）是一种接口，为各种不同的数据结构提供统一的访问机制。任何数据结构只要部署 Iterator 接口，就可以完成遍历操作，Iterator 接口主要供 for…of消费。</li><li>ES6 规定 默认的 Iterator 接口部署在数据结构的 <code>Symbol.iterator属性</code>，或者说，一个数据结构只要具有Symbol.iterator属性，就可以认为是可遍历的</li></ol></blockquote><h2 id="Iterator-遍历原理"><a href="#Iterator-遍历原理" class="headerlink" title="Iterator 遍历原理"></a>Iterator 遍历原理</h2><ol><li>创建一个指针对象，指向当前数据结构的起始位置。（遍历器对象本质上，就是一个指针对象）</li><li>第一次调用对象的next方法，指针自动指向数据结构的第一个成员</li><li>接下来不断调用next方法，指针一直往后移动，直到指向最后一个成员</li><li>每调用 next方法返回一个包含 value和 done属性的对象（value属性是当前成员的值，done属性是一个布尔值，表示遍历是否结束）</li></ol><p>案例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> names = [<span class="string">&#x27;frank&#x27;</span>, <span class="string">&#x27;wilson&#x27;</span>, <span class="string">&#x27;iron&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> iterator = names[<span class="title class_">Symbol</span>.<span class="property">iterator</span>]();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(iterator); <span class="comment">// Array Iterator &#123;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用对象 next 方法</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(iterator.<span class="title function_">next</span>()); <span class="comment">// &#123;value: &#x27;frank&#x27;, done: false&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(iterator.<span class="title function_">next</span>()); <span class="comment">// &#123;value: &#x27;wilson&#x27;, done: false&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(iterator.<span class="title function_">next</span>()); <span class="comment">// &#123;value: &#x27;iron&#x27;, done: false&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(iterator.<span class="title function_">next</span>()); <span class="comment">// &#123;value: undefined, done: true&#125;</span></span><br></pre></td></tr></table></figure><h2 id="原生具备-iterator-接口的数据"><a href="#原生具备-iterator-接口的数据" class="headerlink" title="原生具备 iterator 接口的数据"></a>原生具备 iterator 接口的数据</h2><blockquote><p>可用 for…of 遍历</p></blockquote><ol><li>Array</li><li>Maps</li><li>Set</li><li>String</li><li>TypedArray</li><li>函数的 arguments 对象</li><li>NodeList 对象</li></ol><h2 id="对象添加-Iterator-接口"><a href="#对象添加-Iterator-接口" class="headerlink" title="对象添加 Iterator 接口"></a>对象添加 Iterator 接口</h2><p>案例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">   <span class="attr">data</span>: [<span class="string">&#x27;hello&#x27;</span>, <span class="string">&#x27;world&#x27;</span>],</span><br><span class="line">   [<span class="title class_">Symbol</span>.<span class="property">iterator</span>]() &#123;</span><br><span class="line">       <span class="comment">// 获取 this</span></span><br><span class="line">       <span class="keyword">const</span> _this = <span class="variable language_">this</span>;</span><br><span class="line">       <span class="comment">// 索引变量</span></span><br><span class="line">       <span class="keyword">let</span> index = <span class="number">0</span>;</span><br><span class="line">       <span class="keyword">return</span> &#123;</span><br><span class="line">           <span class="title function_">next</span>(<span class="params"></span>) &#123;</span><br><span class="line">               <span class="keyword">if</span> (index &lt; _this.<span class="property">data</span>.<span class="property">length</span>) &#123;</span><br><span class="line">                   <span class="keyword">return</span> &#123;</span><br><span class="line">                       <span class="attr">value</span>: _this.<span class="property">data</span>[index++],</span><br><span class="line">                       <span class="attr">done</span>: <span class="literal">false</span></span><br><span class="line">                   &#125;;</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">return</span> &#123;</span><br><span class="line">                   <span class="attr">value</span>: <span class="literal">undefined</span>,</span><br><span class="line">                   <span class="attr">done</span>: <span class="literal">true</span></span><br><span class="line">               &#125;;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> iterator = obj[<span class="title class_">Symbol</span>.<span class="property">iterator</span>]();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(iterator.<span class="title function_">next</span>()); <span class="comment">// &#123;value: &#x27;hello&#x27;, done: false&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(iterator.<span class="title function_">next</span>()); <span class="comment">// &#123;value: &#x27;world&#x27;, done: false&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(iterator.<span class="title function_">next</span>()); <span class="comment">// &#123;value: undefined, done: true&#125;</span></span><br></pre></td></tr></table></figure><h2 id="for…of"><a href="#for…of" class="headerlink" title="for…of"></a>for…of</h2><blockquote><p>一个数据结构只要部署了Symbol.iterator属性，就被视为具有 iterator 接口，就可以用for…of循环遍历它的成员。（for…of循环内部调用的是数据结构的Symbol.iterator方法）</p></blockquote><h3 id="使用范围"><a href="#使用范围" class="headerlink" title="使用范围"></a>使用范围</h3><ol><li>数组</li><li>Set 和 Map 结构</li><li>类似数组的对象（比如arguments对象、DOM NodeList 对象）</li><li>Generator 对象</li><li>字符串</li></ol><h1 id="Generator-生成器"><a href="#Generator-生成器" class="headerlink" title="Generator 生成器"></a>Generator 生成器</h1><h2 id="语法-9"><a href="#语法-9" class="headerlink" title="语法"></a>语法</h2><p><code>function* foo(x, y) &#123; ··· &#125;</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span>* <span class="title function_">foo</span>(<span class="params">x, y</span>) &#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>);</span><br><span class="line">   <span class="keyword">yield</span> <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>);</span><br><span class="line">   <span class="keyword">yield</span> <span class="string">&#x27;world&#x27;</span>;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用 Generator 函数后，该函数并不执行，返回的也不是函数运行结果，而是一个指向内部状态的指针对象</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">foo</span>()); <span class="comment">// foo &#123;&lt;suspended&gt;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> iterator = <span class="title function_">foo</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// yield表达式是暂停执行的标记，而next方法可以恢复执行。</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(iterator.<span class="title function_">next</span>());</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(iterator.<span class="title function_">next</span>());</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(iterator.<span class="title function_">next</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">// for of 遍历</span></span><br><span class="line"><span class="comment">// for (const v of iterator) &#123;</span></span><br><span class="line"><span class="comment">//     console.log(v);</span></span><br><span class="line"><span class="comment">//     // 1 hello 2 world 3</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure><h2 id="yield-表达式"><a href="#yield-表达式" class="headerlink" title="yield 表达式"></a>yield 表达式</h2><p>yield表达式是暂停执行的标记，而next方法可以恢复执行</p><h2 id="next-方法的参数"><a href="#next-方法的参数" class="headerlink" title="next 方法的参数"></a>next 方法的参数</h2><p>yield表达式本身没有返回值，或者说总是返回 undefined。next方法可以带一个参数，该参数就会<strong>被当作上一个yield表达式的返回值</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span>* <span class="title function_">foo</span>(<span class="params">arg</span>) &#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(arg); <span class="comment">// AAA</span></span><br><span class="line">   <span class="keyword">let</span> one = <span class="keyword">yield</span> <span class="number">111</span>;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(one); <span class="comment">// BBB</span></span><br><span class="line">   <span class="keyword">let</span> two = <span class="keyword">yield</span> <span class="number">222</span>;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(two); <span class="comment">// CCC</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> iterator = <span class="title function_">foo</span>(<span class="string">&#x27;AAA&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(iterator.<span class="title function_">next</span>()); <span class="comment">// &#123;value: 111, done: false&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// next方法可以带一个参数，该参数就会被当作上一个yield表达式的返回值</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(iterator.<span class="title function_">next</span>(<span class="string">&#x27;BBB&#x27;</span>)); <span class="comment">// &#123;value: 222, done: false&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(iterator.<span class="title function_">next</span>(<span class="string">&#x27;CCC&#x27;</span>)); <span class="comment">// &#123;value: undefined, done: true&#125;</span></span><br></pre></td></tr></table></figure><h1 id="Generator-生成器的异步应用"><a href="#Generator-生成器的异步应用" class="headerlink" title="Generator 生成器的异步应用"></a>Generator 生成器的异步应用</h1><h2 id="模拟异步"><a href="#模拟异步" class="headerlink" title="模拟异步"></a>模拟异步</h2><p>解决回调地狱的问题：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1s 后控制台输出 1 2s后输出 2 3s后输出 3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">one</span>(<span class="params"></span>) &#123;</span><br><span class="line">   <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>);</span><br><span class="line">       iterator.<span class="title function_">next</span>();</span><br><span class="line">   &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">two</span>(<span class="params"></span>) &#123;</span><br><span class="line">   <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>);</span><br><span class="line">       iterator.<span class="title function_">next</span>();</span><br><span class="line">   &#125;, <span class="number">2000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">three</span>(<span class="params"></span>) &#123;</span><br><span class="line">   <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">3</span>);</span><br><span class="line">       iterator.<span class="title function_">next</span>();</span><br><span class="line">   &#125;, <span class="number">3000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// -----------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span>* <span class="title function_">gen</span>(<span class="params"></span>) &#123;</span><br><span class="line">   <span class="keyword">yield</span> <span class="title function_">one</span>();</span><br><span class="line">   <span class="keyword">yield</span> <span class="title function_">two</span>();</span><br><span class="line">   <span class="keyword">yield</span> <span class="title function_">three</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> iterator = <span class="title function_">gen</span>();</span><br><span class="line">iterator.<span class="title function_">next</span>();</span><br></pre></td></tr></table></figure><p>模拟获取数据:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用户数据 --&gt; 订单数据 --&gt; 商品数据 （注意顺序不能乱，有用户才可以获取到订单，有订单才可以获取到商品数据）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getUsers</span>(<span class="params"></span>) &#123;</span><br><span class="line">   <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">       <span class="keyword">let</span> data = <span class="string">&#x27;用户数据&#x27;</span>;</span><br><span class="line">       iterator.<span class="title function_">next</span>(data);</span><br><span class="line">   &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getOrders</span>(<span class="params"></span>) &#123;</span><br><span class="line">   <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">       <span class="keyword">let</span> data = <span class="string">&#x27;订单数据&#x27;</span>;</span><br><span class="line">       iterator.<span class="title function_">next</span>(data);</span><br><span class="line">   &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getGoods</span>(<span class="params"></span>) &#123;</span><br><span class="line">   <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">       <span class="keyword">let</span> data = <span class="string">&#x27;商品数据&#x27;</span>;</span><br><span class="line">       iterator.<span class="title function_">next</span>(data);</span><br><span class="line">   &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span>* <span class="title function_">gen</span>(<span class="params"></span>) &#123;</span><br><span class="line">   <span class="keyword">let</span> users = <span class="keyword">yield</span> <span class="title function_">getUsers</span>();</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(users); <span class="comment">// 用户数据</span></span><br><span class="line">   <span class="keyword">let</span> orders = <span class="keyword">yield</span> <span class="title function_">getOrders</span>();</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(orders); <span class="comment">// 订单数据</span></span><br><span class="line">   <span class="keyword">let</span> goods = <span class="keyword">yield</span> <span class="title function_">getGoods</span>();</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(goods); <span class="comment">// 商品数据</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> iterator = <span class="title function_">gen</span>();</span><br><span class="line">iterator.<span class="title function_">next</span>(); </span><br></pre></td></tr></table></figure><h1 id="async-函数"><a href="#async-函数" class="headerlink" title="async 函数"></a>async 函数</h1><p>async 函数是 Generator 函数的<strong>语法糖</strong>，使得异步操作变得更加方便。</p><h2 id="特性-6"><a href="#特性-6" class="headerlink" title="特性"></a>特性</h2><ol><li>async 函数的<strong>返回值为 promise 对象</strong></li><li>promise 对象的结果由 async 函数执行的返回值决定</li></ol><h2 id="await"><a href="#await" class="headerlink" title="await"></a>await</h2><h3 id="特性-7"><a href="#特性-7" class="headerlink" title="特性"></a>特性</h3><ol><li>await 必须写在 async 函数中</li><li>await 右侧的表达式一般为 promise 对象</li><li>await 返回的是 promise 成功的值</li><li>await 的 promise 失败了，就会抛出异常，需要通过 <code>try...catch</code> 捕获处理</li></ol><h2 id="应用-1"><a href="#应用-1" class="headerlink" title="应用"></a>应用</h2><h3 id="读取文件-1"><a href="#读取文件-1" class="headerlink" title="读取文件"></a>读取文件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">readFile1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span>(<span class="params">resolve,reject</span>)&#123;</span><br><span class="line">        fs.<span class="title function_">readFile</span>(<span class="string">&#x27;./12-file1.md&#x27;</span>,<span class="keyword">function</span>(<span class="params">err,data</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(err) <span class="title function_">reject</span>(err);</span><br><span class="line">            <span class="title function_">resolve</span>(data);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">readFile2</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span>(<span class="params">resolve,reject</span>)&#123;</span><br><span class="line">        fs.<span class="title function_">readFile</span>(<span class="string">&#x27;./12-file2.md&#x27;</span>,<span class="keyword">function</span>(<span class="params">err,data</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(err) <span class="title function_">reject</span>(err);</span><br><span class="line">            <span class="title function_">resolve</span>(data);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">main</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> file1 = <span class="keyword">await</span> <span class="title function_">readFile1</span>();</span><br><span class="line">    <span class="keyword">let</span> file2 = <span class="keyword">await</span> <span class="title function_">readFile2</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(file1.<span class="title function_">toString</span>());</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(file2.<span class="title function_">toString</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">main</span>();</span><br></pre></td></tr></table></figure><h3 id="封装-Ajax-请求-1"><a href="#封装-Ajax-请求-1" class="headerlink" title="封装 Ajax 请求"></a>封装 Ajax 请求</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">sendAjax</span>(<span class="params">url</span>) &#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span> (<span class="params">resolve, reject</span>) &#123;</span><br><span class="line">       <span class="comment">// 1.创建对象</span></span><br><span class="line">       <span class="keyword">let</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line"></span><br><span class="line">       <span class="comment">// 2.初始化,设置请求方式和接口地址</span></span><br><span class="line">       xhr.<span class="title function_">open</span>(<span class="string">&#x27;GET&#x27;</span>, url);</span><br><span class="line"></span><br><span class="line">       <span class="comment">// 3.发送请求</span></span><br><span class="line">       xhr.<span class="title function_">send</span>();</span><br><span class="line"></span><br><span class="line">       <span class="comment">// 4.绑定事件，处理响应结果</span></span><br><span class="line">       xhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">           <span class="comment">// 判断</span></span><br><span class="line">           <span class="keyword">if</span> (xhr.<span class="property">readyState</span> === <span class="number">4</span>) &#123;</span><br><span class="line">               <span class="comment">// 判断响应状态码 200~299</span></span><br><span class="line">               <span class="keyword">if</span> (xhr.<span class="property">status</span> &gt;= <span class="number">200</span> &amp;&amp; xhr.<span class="property">status</span> &lt; <span class="number">300</span>) &#123;</span><br><span class="line">                   <span class="comment">// 获取成功</span></span><br><span class="line">                   <span class="title function_">resolve</span>(xhr.<span class="property">response</span>);</span><br><span class="line">               &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                   <span class="comment">// 获取失败</span></span><br><span class="line">                   <span class="title function_">reject</span>(xhr.<span class="property">status</span>);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// async 和 await 测试</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">main</span>(<span class="params"></span>) &#123;</span><br><span class="line">   <span class="keyword">let</span> result = <span class="keyword">await</span> <span class="title function_">sendAjax</span>(</span><br><span class="line">       <span class="string">&#x27;https://v0.yiketianqi.com/api?unescape=1&amp;version=v91&amp;appid=43656176&amp;appsecret=I42og6Lm&amp;ext=&amp;cityid=&amp;city=&#x27;</span></span><br><span class="line">   );</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">main</span>();</span><br></pre></td></tr></table></figure><h1 id="Class"><a href="#Class" class="headerlink" title="Class"></a>Class</h1><p>ES6 的class可以看作只是一个语法糖，它的绝大部分功能，ES5 都可以做到，新的class写法只是让对象原型的写法更加清晰、更像面向对象编程的语法而已。</p><h2 id="语法-10"><a href="#语法-10" class="headerlink" title="语法"></a>语法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">x, y</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">x</span> = x;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">y</span> = y;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 定义方法</span></span><br><span class="line">  <span class="title function_">toString</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;(&#x27;</span> + <span class="variable language_">this</span>.<span class="property">x</span> + <span class="string">&#x27;, &#x27;</span> + <span class="variable language_">this</span>.<span class="property">y</span> + <span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="constructor-方法"><a href="#constructor-方法" class="headerlink" title="constructor() 方法"></a>constructor() 方法</h2><p>constructor()方法是类的默认方法，<strong>通过new命令生成对象实例时，自动调用该方法</strong>。一个类必须有constructor()方法，如果没有显式定义，一个空的constructor()方法会被默认添加。</p><h2 id="取值函数（getter）和存值函数（setter）"><a href="#取值函数（getter）和存值函数（setter）" class="headerlink" title="取值函数（getter）和存值函数（setter）"></a>取值函数（getter）和存值函数（setter）</h2><p>在 <code>类</code> 的内部可以使用 get和 set关键字，对某个属性设置存值函数和取值函数，<strong>拦截该属性的存取行为</strong>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyClass</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">get</span> <span class="title function_">prop</span>() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;getter&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">set</span> <span class="title function_">prop</span>(<span class="params">value</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;setter: &#x27;</span>+value);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> inst = <span class="keyword">new</span> <span class="title class_">MyClass</span>();</span><br><span class="line"></span><br><span class="line">inst.<span class="property">prop</span> = <span class="number">123</span>;</span><br><span class="line"><span class="comment">// setter: 123</span></span><br><span class="line"></span><br><span class="line">inst.<span class="property">prop</span></span><br><span class="line"><span class="comment">// &#x27;getter&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="静态方法和静态属性"><a href="#静态方法和静态属性" class="headerlink" title="静态方法和静态属性"></a>静态方法和静态属性</h2><p>对于 <code>static</code> 关键字标注的属性和方法，属于类（只能类调用），而不属于实例对象（不会被实例继承）。</p><h3 id="静态方法"><a href="#静态方法" class="headerlink" title="静态方法"></a>静态方法</h3><ol><li>如果静态方法包含this关键字，这个this指的是类，而不是实例</li><li>父类的静态方法，可以被子类继承</li></ol><h3 id="静态属性"><a href="#静态属性" class="headerlink" title="静态属性"></a>静态属性</h3><p>静态属性指的是 Class 本身的属性，即Class.propName，而不是定义在实例对象（this）上的属性。</p><h2 id="私有方法和私有属性"><a href="#私有方法和私有属性" class="headerlink" title="私有方法和私有属性"></a>私有方法和私有属性</h2><p>ES2022 正式为 class添加了私有属性，方法是在属性名之前使用 <code>#</code> 表示</p><p>私有属性，只能在类的内部使用（<code>this.#属性名</code>）。<strong>如果在类的外部使用，就会报错。</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">   name;</span><br><span class="line">   #age;</span><br><span class="line">   #weight;</span><br><span class="line">   <span class="title function_">constructor</span>(<span class="params">name,age,weight</span>)&#123;</span><br><span class="line">       <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">       <span class="variable language_">this</span>.#age = age;</span><br><span class="line">       <span class="variable language_">this</span>.#weight = weight;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="title function_">intro</span>(<span class="params"></span>)&#123;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.#age);</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.#weight);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;frank&#x27;</span>,<span class="number">18</span>,<span class="string">&#x27;60kg&#x27;</span>);</span><br><span class="line"><span class="comment">// 外部访问私有属性报错</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(p.<span class="property">name</span>); <span class="comment">// frank</span></span><br><span class="line"><span class="comment">// console.log(p.#age); // Uncaught SyntaxError: Private field &#x27;#age&#x27; must be declared in an enclosing class</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 只能在类的内部使用（this.#属性名）访问</span></span><br><span class="line">p.<span class="title function_">intro</span>(); <span class="comment">// frank 18 60kg</span></span><br></pre></td></tr></table></figure><h1 id="Class-的继承"><a href="#Class-的继承" class="headerlink" title="Class 的继承"></a>Class 的继承</h1><p>Class 可以通过extends关键字实现继承，让子类继承父类的属性和方法</p><h2 id="语法-11"><a href="#语法-11" class="headerlink" title="语法"></a>语法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Foo</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Bar</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Foo</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">super</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> bar = <span class="keyword">new</span> <span class="title class_">Bar</span>();</span><br><span class="line"><span class="comment">// 1  // 子类构造函数调用super()时，会执行一次父类构造函数。</span></span><br><span class="line"><span class="comment">// 2</span></span><br></pre></td></tr></table></figure><h2 id="特性-8"><a href="#特性-8" class="headerlink" title="特性"></a>特性</h2><ol><li>子类必须在constructor()方法中调用super()，否则就会报错。（子类自己的this对象，必须先通过父类的构造函数完成塑造）</li><li>在子类的构造函数中，只有调用super()之后，才可以使用this关键字，否则会报错。</li><li>如果子类没有定义constructor()方法，这个方法会默认添加，并且里面会调用super()</li></ol><h2 id="重写父类方法"><a href="#重写父类方法" class="headerlink" title="重写父类方法"></a>重写父类方法</h2><p>直接在子类中重写父类的方法，子类会覆盖父类中的同名方法。</p><h1 id="Module-模块化"><a href="#Module-模块化" class="headerlink" title="Module 模块化"></a>Module 模块化</h1><p>模块化是指将一个大的程序文件，拆分成许多小的文件，然后将小文件组合起来。</p><h2 id="严格模式"><a href="#严格模式" class="headerlink" title="严格模式"></a>严格模式</h2><p>ES6 的模块自动采用严格模式，不管你有没有在模块头部加上 <code>&quot;use strict&quot;</code>;</p><h2 id="export"><a href="#export" class="headerlink" title="export"></a>export</h2><p>export 命令用于规定模块的对外接口</p><p>拓展：</p><ol><li>如果希望外部能够读取模块内部的某个变量，就必须使用export关键字输出该变量</li><li>在export命令后面，可以使用<strong>大括号指定所要输出的一组变量</strong>。</li><li>export语句输出的接口，与其对应的值是<strong>动态绑定关系</strong>，即通过该接口，可以取到模块内部实时的值</li></ol><h2 id="import"><a href="#import" class="headerlink" title="import"></a>import</h2><p>import 命令用于输入其他模块提供的功能</p><p>拓展：</p><ol><li>导入的时候可以使用 <code>as</code> 关键字重命名，避免命名冲突</li><li>import 命令输入的<strong>变量</strong>都是只读的，因为它的本质是输入接口。也就是说，不允许在加载模块的脚本里面，改写接口。</li><li>如果加载的是一个对象，改写对象的属性是允许的</li><li>import 后面的 from 指定模块文件的位置，<strong>可以是相对路径，也可以是绝对路径。</strong></li></ol><h2 id="export-default"><a href="#export-default" class="headerlink" title="export default"></a>export default</h2><p>export default命令，为模块指定默认输出</p><p>拓展：</p><ol><li>其他模块加载该模块时，import 命令可以为该匿名函数<strong>指定任意名字</strong>。</li><li>export default 命令其实只是输出一个叫做 default 的变量，所以它后面不能跟<strong>变量声明语句</strong>。</li></ol><h2 id="import-1"><a href="#import-1" class="headerlink" title="import()"></a>import()</h2><p>ES2020提案 引入import()函数，支持<strong>动态加载模块</strong></p><p>import()返回一个 Promise 对象，需要使用then()方法指定处理函数。考虑到代码的清晰，更推荐使用await命令</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> main = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;main&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_">import</span>(<span class="string">`./section-modules/<span class="subst">$&#123;someVariable&#125;</span>.js`</span>)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">module</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">module</span>.<span class="title function_">loadPageInto</span>(main);</span><br><span class="line">  &#125;)</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">    main.<span class="property">textContent</span> = err.<span class="property">message</span>;</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><ol><li>按需加载</li><li>条件加载</li><li>动态的模块路径</li></ol><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ol><li><a href="https://es6.ruanyifeng.com/">https://es6.ruanyifeng.com/</a></li><li>ES6+ 新特性汇总：<a href="https://juejin.cn/post/6844904066930180103">https://juejin.cn/post/6844904066930180103</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript BOM</title>
      <link href="/2022/07/28%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF_JavaScript_JavaScript%20BOM/f75e92e9/"/>
      <url>/2022/07/28%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF_JavaScript_JavaScript%20BOM/f75e92e9/</url>
      
        <content type="html"><![CDATA[<h1 id="BOM-概述"><a href="#BOM-概述" class="headerlink" title="BOM 概述"></a>BOM 概述</h1><blockquote><p>BOM(Browser Object Model 浏览器对象模型) 它提供了独立于内容的、可以与浏览器窗口进行互动的对象结构。通过BOM可以操作浏览器窗口，比如弹出框、控制浏览器跳转、获取分辨率等。</p></blockquote><h2 id="BOM-构成"><a href="#BOM-构成" class="headerlink" title="BOM 构成"></a>BOM 构成</h2><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220805215100.png" alt="20220805215100"></p><h1 id="window"><a href="#window" class="headerlink" title="window"></a>window</h1><p>window 对象是浏览器的顶级对象</p><ol><li>它是 JS 访问浏览器窗口的一个接口。</li><li>它是一个全局对象。<strong>定义在全局作用域中</strong>的变量、函数都会变成 window 对象的属性和方法。（调用的时候可以省略 window）</li></ol><h2 id="window-常见事件"><a href="#window-常见事件" class="headerlink" title="window 常见事件"></a>window 常见事件</h2><h3 id="window-onload"><a href="#window-onload" class="headerlink" title="window.onload"></a>window.onload</h3><p>window.onload 是窗口（页面）加载事件，当文档内容完全加载完成会触发该事件（<strong>包括图像、脚本文件、CSS文件等</strong>）</p><p>下面三种情况都会都会触发 load 事件</p><ol><li>a标签的超链接</li><li>F5或者刷新按钮（强制刷新）</li><li>前进后退按钮</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 传统方式注册【不推荐，只能写一次。】</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. addEventListener 方法注册【推荐】</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>补充：DOMContentLoaded</p><p>DOMContentLoaded 事件，<strong>仅当DOM加载完成</strong>时触发，不包括样式表，图片，flash 等等</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="window-pageshow"><a href="#window-pageshow" class="headerlink" title="window.pageshow"></a>window.pageshow</h3><blockquote><p>当一条会话历史记录被执行的时候将会触发页面显示 (pageshow) 事件。(<strong>包括了后退/前进按钮操作</strong>，同时 pageshow 会在 load 事件触发后触发)</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;pageshow&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;pageshow:&#x27;</span>,e);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 拓展: e.persisted 返回布尔值 表示网页是否是来自缓存 </span></span><br></pre></td></tr></table></figure><h3 id="window-onresize"><a href="#window-onresize" class="headerlink" title="window.onresize"></a>window.onresize</h3><blockquote><p>window.onresize 是调整窗口大小加载事件，只要窗口大小发生像素变化，就会触发这个事件。【】</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 传统方式注册【不推荐，只能写一次。】</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onresize</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. addEventListener 方法注册【推荐】</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>应用场景：</p><ol><li>响应式布局。（window.innerWidth 当前屏幕的宽度）</li></ol><h1 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h1><h2 id="setTimeout"><a href="#setTimeout" class="headerlink" title="setTimeout"></a>setTimeout</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setTimeout</span>(callback[delay]);</span><br></pre></td></tr></table></figure><p>停止 setTimeout 定时器：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// timeoutID 由相应的 setTimeout() 调用返回</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="built_in">clearTimeout</span>(timeoutID)</span><br></pre></td></tr></table></figure><h2 id="setInterval"><a href="#setInterval" class="headerlink" title="setInterval()"></a>setInterval()</h2><blockquote><p>setInterval() 方法<strong>重复调用一个函数</strong>，每隔指定时间，就去调用一次回调函数。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setInterval</span>(callback[delay]);</span><br></pre></td></tr></table></figure><p>停止 setInterval 定时器：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// timeoutID 由相应的 setInterval() 调用返回</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="built_in">clearInterval</span>(timeoutID)</span><br></pre></td></tr></table></figure><h2 id="this-指向"><a href="#this-指向" class="headerlink" title="this 指向"></a>this 指向</h2><blockquote><p>一般情况下 this 的最终指向的是那个调用它的对象</p></blockquote><ol><li>全局作用域或普通函数中的 this 指向全局对象 <strong>window</strong></li><li>方法中，<strong>谁调用 this 就指向谁</strong></li><li>构造函数中 this 指向构造函数的<strong>实例</strong></li></ol><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><h3 id="短信验证码倒计时"><a href="#短信验证码倒计时" class="headerlink" title="短信验证码倒计时"></a>短信验证码倒计时</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>Send Message<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> btn = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;button&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> second = <span class="number">3</span>;</span></span><br><span class="line"><span class="language-javascript">        btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            btn.<span class="property">disabled</span> = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> timer = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> (second &gt;= <span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    btn.<span class="property">innerText</span> = <span class="string">&quot;Wait...&quot;</span> + second + <span class="string">&quot;S&quot;</span></span></span><br><span class="line"><span class="language-javascript">                    second--;</span></span><br><span class="line"><span class="language-javascript">                &#125;<span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="built_in">clearInterval</span>(timer);</span></span><br><span class="line"><span class="language-javascript">                    btn.<span class="property">disabled</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">                    btn.<span class="property">innerText</span> = <span class="string">&quot;Send Message Again..&quot;</span></span></span><br><span class="line"><span class="language-javascript">                    second = <span class="number">3</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="JS-执行机制"><a href="#JS-执行机制" class="headerlink" title="JS 执行机制"></a>JS 执行机制</h1><h2 id="JS-是单线程"><a href="#JS-是单线程" class="headerlink" title="JS 是单线程"></a>JS 是单线程</h2><p>JavaScript 语言的一大特点就是单线程，也就是说，<strong>同一个时间只能做一件事。</strong></p><h2 id="同步和异步"><a href="#同步和异步" class="headerlink" title="同步和异步"></a>同步和异步</h2><p>为了解决单线程问题，利用多核CPU的计算能力，HTML5提出 WebWorker 标准，允许 JavaScript 脚本创建多个线程。</p><h3 id="同步任务"><a href="#同步任务" class="headerlink" title="同步任务"></a>同步任务</h3><p>同步任务都在主线程上执行，形成一个<strong>执行栈</strong>。</p><h3 id="异步任务"><a href="#异步任务" class="headerlink" title="异步任务"></a>异步任务</h3><p>JS的异步是通过<strong>回调函数</strong>实现的。异步任务主要有以下三种类型：</p><ol><li>普通事件，如 click、resize 等</li><li>资源加载，如 load、error 等</li><li>定时器，包括 setInterval、setTimeout 等</li></ol><p>异步任务相关回调函数添加到<strong>任务队列</strong>中（也称为<strong>消息队列</strong>）</p><h2 id="执行机制"><a href="#执行机制" class="headerlink" title="执行机制"></a>执行机制</h2><ol><li>先执行执行栈中的同步任务</li><li>异步任务（回调函数）放入任务队列中</li><li>执行栈中的所有同步任务执行完毕，系统就会按次序读取任务队列中的异步任务，被读取的异步任务结束等待状态，进入执行栈，开始执行</li></ol><h3 id="事件循环"><a href="#事件循环" class="headerlink" title="事件循环"></a>事件循环</h3><p>主线程不断的重复获得任务、执行任务、再获取任务、再执行</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220806004611.png" alt="Javascript-event-loop"></p><h1 id="location-对象"><a href="#location-对象" class="headerlink" title="location 对象"></a>location 对象</h1><blockquote><p>window 对象给我们提供了一个 location 属性用于获取或设置窗体的 URL,并且可以用于解析 URL</p></blockquote><h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><blockquote><p>URL 统一资源定位符（Uniform Resource Locator,URL)是互联网上标准资源的地址。</p></blockquote><p>语法格式：</p><p><code>protocol://host[:port]/path/[?query]#fragment</code></p><div class="table-container"><table><thead><tr><th>组成</th><th>说明</th></tr></thead><tbody><tr><td>protocol</td><td>通信协议常用的 http, ftp, maito 等</td></tr><tr><td>host</td><td>主机（域名）</td></tr><tr><td>port</td><td>端口号【可选，默认端口为80】</td></tr><tr><td>path</td><td>路径由零或多个 / 符号隔开的字符串，一般用来表示主机上的一个目录或文件地址</td></tr><tr><td>query</td><td>参数以键值对的形式，通过 &amp; 符号分隔开来</td></tr><tr><td>fragment</td><td>片段 # 后面内容常见于链接锚点</td></tr></tbody></table></div><h2 id="location-对象属性"><a href="#location-对象属性" class="headerlink" title="location 对象属性"></a>location 对象属性</h2><div class="table-container"><table><thead><tr><th>location 对象属性</th><th>返回值</th></tr></thead><tbody><tr><td><strong>location.href</strong></td><td>获取或者设置整个URL</td></tr><tr><td>location.host</td><td>返回主机（域名）</td></tr><tr><td>location.port</td><td>返回端口号 （如果未写返回空字符串）</td></tr><tr><td>location.pathname</td><td>返回路径</td></tr><tr><td><strong>location.search</strong></td><td>返回参数</td></tr><tr><td>location.hash</td><td>返回片段 # 后面内容 常见于链接锚点</td></tr></tbody></table></div><h2 id="location-对象方法"><a href="#location-对象方法" class="headerlink" title="location 对象方法"></a>location 对象方法</h2><div class="table-container"><table><thead><tr><th>location 对象方法</th><th>返回值</th></tr></thead><tbody><tr><td>location.assign()</td><td>跳转页面（跟 href 功能一样，也称为重定向页面）</td></tr><tr><td>location.replace()</td><td>跳转页面（不记录历史）</td></tr><tr><td>location.reload()</td><td>重新加载页面（相当于f5刷新，如果参数为 <code>true</code> 相当于ctrl+f5 强制刷新）</td></tr></tbody></table></div><h2 id="案例-1"><a href="#案例-1" class="headerlink" title="案例"></a>案例</h2><h3 id="延时跳转效果"><a href="#延时跳转效果" class="headerlink" title="延时跳转效果"></a>延时跳转效果</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>跳转首页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> btn = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;button&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> info = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;info&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="property">disabled</span> = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> timer = <span class="number">5</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> (timer == <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    location.<span class="property">href</span> = <span class="string">&#x27;https://haloboys.github.io/&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    info.<span class="property">innerHTML</span> = <span class="string">&#x27;将在&#x27;</span> + timer + <span class="string">&#x27;秒后跳转...&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                    timer--;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="navigator-对象"><a href="#navigator-对象" class="headerlink" title="navigator 对象"></a>navigator 对象</h1><p>navigator对象包含有关浏览器的信息，详情查文档：<a href="https://developer.mozilla.org/en-US/docs/Web/API/Navigator">https://developer.mozilla.org/en-US/docs/Web/API/Navigator</a></p><h2 id="navigator-对象属性"><a href="#navigator-对象属性" class="headerlink" title="navigator 对象属性"></a>navigator 对象属性</h2><div class="table-container"><table><thead><tr><th>navigator 对象属性</th><th>返回值</th></tr></thead><tbody><tr><td><strong>navigator.userAgent</strong></td><td>返回由客户机发送服务器的 user-agent 头部的值</td></tr></tbody></table></div><h2 id="案例-2"><a href="#案例-2" class="headerlink" title="案例"></a>案例</h2><h3 id="判断用户使用什么设备"><a href="#判断用户使用什么设备" class="headerlink" title="判断用户使用什么设备"></a>判断用户使用什么设备</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>((navigator.<span class="property">userAgent</span>.<span class="title function_">match</span>(<span class="regexp">/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i</span>))) &#123;</span><br><span class="line">    <span class="comment">//跳转到手机端的页面</span></span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"> &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//跳转到pc端的页面</span></span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="获取用户使用什么浏览器"><a href="#获取用户使用什么浏览器" class="headerlink" title="获取用户使用什么浏览器"></a>获取用户使用什么浏览器</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 各主流浏览器</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getBrowser</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> u = navigator.<span class="property">userAgent</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">var</span> bws = [&#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;sgssapp&#x27;</span>,</span><br><span class="line">        <span class="attr">it</span>: <span class="regexp">/sogousearch/i</span>.<span class="title function_">test</span>(u)</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;wechat&#x27;</span>,</span><br><span class="line">        <span class="attr">it</span>: <span class="regexp">/MicroMessenger/i</span>.<span class="title function_">test</span>(u)</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;weibo&#x27;</span>,</span><br><span class="line">        <span class="attr">it</span>: !!u.<span class="title function_">match</span>(<span class="regexp">/Weibo/i</span>)</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;uc&#x27;</span>,</span><br><span class="line">        <span class="attr">it</span>: !!u.<span class="title function_">match</span>(<span class="regexp">/UCBrowser/i</span>) || u.<span class="title function_">indexOf</span>(<span class="string">&#x27; UBrowser&#x27;</span>) &gt; -<span class="number">1</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;sogou&#x27;</span>,</span><br><span class="line">        <span class="attr">it</span>: u.<span class="title function_">indexOf</span>(<span class="string">&#x27;MetaSr&#x27;</span>) &gt; -<span class="number">1</span> || u.<span class="title function_">indexOf</span>(<span class="string">&#x27;Sogou&#x27;</span>) &gt; -<span class="number">1</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;xiaomi&#x27;</span>,</span><br><span class="line">        <span class="attr">it</span>: u.<span class="title function_">indexOf</span>(<span class="string">&#x27;MiuiBrowser&#x27;</span>) &gt; -<span class="number">1</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;baidu&#x27;</span>,</span><br><span class="line">        <span class="attr">it</span>: u.<span class="title function_">indexOf</span>(<span class="string">&#x27;Baidu&#x27;</span>) &gt; -<span class="number">1</span> || u.<span class="title function_">indexOf</span>(<span class="string">&#x27;BIDUBrowser&#x27;</span>) &gt; -<span class="number">1</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;360&#x27;</span>,</span><br><span class="line">        <span class="attr">it</span>: u.<span class="title function_">indexOf</span>(<span class="string">&#x27;360EE&#x27;</span>) &gt; -<span class="number">1</span> || u.<span class="title function_">indexOf</span>(<span class="string">&#x27;360SE&#x27;</span>) &gt; -<span class="number">1</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;2345&#x27;</span>,</span><br><span class="line">        <span class="attr">it</span>: u.<span class="title function_">indexOf</span>(<span class="string">&#x27;2345Explorer&#x27;</span>) &gt; -<span class="number">1</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;edge&#x27;</span>,</span><br><span class="line">        <span class="attr">it</span>: u.<span class="title function_">indexOf</span>(<span class="string">&#x27;Edge&#x27;</span>) &gt; -<span class="number">1</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;ie11&#x27;</span>,</span><br><span class="line">        <span class="attr">it</span>: u.<span class="title function_">indexOf</span>(<span class="string">&#x27;Trident&#x27;</span>) &gt; -<span class="number">1</span> &amp;&amp; u.<span class="title function_">indexOf</span>(<span class="string">&#x27;rv:11.0&#x27;</span>) &gt; -<span class="number">1</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;ie&#x27;</span>,</span><br><span class="line">        <span class="attr">it</span>: u.<span class="title function_">indexOf</span>(<span class="string">&#x27;compatible&#x27;</span>) &gt; -<span class="number">1</span> &amp;&amp; u.<span class="title function_">indexOf</span>(<span class="string">&#x27;MSIE&#x27;</span>) &gt; -<span class="number">1</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;firefox&#x27;</span>,</span><br><span class="line">        <span class="attr">it</span>: u.<span class="title function_">indexOf</span>(<span class="string">&#x27;Firefox&#x27;</span>) &gt; -<span class="number">1</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;safari&#x27;</span>,</span><br><span class="line">        <span class="attr">it</span>: u.<span class="title function_">indexOf</span>(<span class="string">&#x27;Safari&#x27;</span>) &gt; -<span class="number">1</span> &amp;&amp; u.<span class="title function_">indexOf</span>(<span class="string">&#x27;Chrome&#x27;</span>) === -<span class="number">1</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;qqbrowser&#x27;</span>,</span><br><span class="line">        <span class="attr">it</span>: u.<span class="title function_">indexOf</span>(<span class="string">&#x27;MQQBrowser&#x27;</span>) &gt; -<span class="number">1</span> &amp;&amp; u.<span class="title function_">indexOf</span>(<span class="string">&#x27; QQ&#x27;</span>) === -<span class="number">1</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;qq&#x27;</span>,</span><br><span class="line">        <span class="attr">it</span>: u.<span class="title function_">indexOf</span>(<span class="string">&#x27;QQ&#x27;</span>) &gt; -<span class="number">1</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;chrome&#x27;</span>,</span><br><span class="line">        <span class="attr">it</span>: u.<span class="title function_">indexOf</span>(<span class="string">&#x27;Chrome&#x27;</span>) &gt; -<span class="number">1</span> || u.<span class="title function_">indexOf</span>(<span class="string">&#x27;CriOS&#x27;</span>) &gt; -<span class="number">1</span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;opera&#x27;</span>,</span><br><span class="line">        <span class="attr">it</span>: u.<span class="title function_">indexOf</span>(<span class="string">&#x27;Opera&#x27;</span>) &gt; -<span class="number">1</span> || u.<span class="title function_">indexOf</span>(<span class="string">&#x27;OPR&#x27;</span>) &gt; -<span class="number">1</span></span><br><span class="line">    &#125;];</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; bws.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (bws[i].<span class="property">it</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> bws[i].<span class="property">name</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;other&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="获取用户使用什么系统"><a href="#获取用户使用什么系统" class="headerlink" title="获取用户使用什么系统"></a>获取用户使用什么系统</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getOS</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> u = navigator.<span class="property">userAgent</span>;</span><br><span class="line">    <span class="keyword">if</span> (!!u.<span class="title function_">match</span>(<span class="regexp">/compatible/i</span>) || u.<span class="title function_">match</span>(<span class="regexp">/Windows/i</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;windows&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!!u.<span class="title function_">match</span>(<span class="regexp">/Macintosh/i</span>) || u.<span class="title function_">match</span>(<span class="regexp">/MacIntel/i</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;macOS&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!!u.<span class="title function_">match</span>(<span class="regexp">/iphone/i</span>) || u.<span class="title function_">match</span>(<span class="regexp">/Ipad/i</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;ios&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!!u.<span class="title function_">match</span>(<span class="regexp">/android/i</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;android&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;other&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="history-对象"><a href="#history-对象" class="headerlink" title="history 对象"></a>history 对象</h1><h2 id="history-对象方法"><a href="#history-对象方法" class="headerlink" title="history 对象方法"></a>history 对象方法</h2><div class="table-container"><table><thead><tr><th>history 对象方法</th><th>作用</th></tr></thead><tbody><tr><td>back()</td><td>后退功能</td></tr><tr><td>forward()</td><td>前进功能</td></tr><tr><td>go()</td><td>前进后退功能（参数是1前进1个页面，-1后退1个页面）</td></tr></tbody></table></div><h1 id="cookies-对象"><a href="#cookies-对象" class="headerlink" title="cookies 对象"></a>cookies 对象</h1><h1 id="客户端存储-WebStorage"><a href="#客户端存储-WebStorage" class="headerlink" title="客户端存储(WebStorage)"></a>客户端存储(WebStorage)</h1><p>sessionStorage 约5M、localStorage 约20M <strong>存储数据时</strong>会自动调用 <code>toStrting()</code> 方法将<strong>值</strong>转换成字符串类型，如果传入的是一个对象，需要使用 <code>JSON.Stringify</code> 方法编码后存储。<br>SessionStorage存储的内容会随着浏览器窗口关闭而消失。<br>LocalStorage存储的内容，需要手动清除才会消失。<br><code>xxxxxStorage.getItem(xxx)</code> 如果 xxx 对应的 value <strong>获取不到</strong>，那么 getItem 的返回值是 <strong>null</strong>。<br><code>JSON.parse(null)</code> 的结果依然是null。 </p><h2 id="window-sessionStorage"><a href="#window-sessionStorage" class="headerlink" title="window.sessionStorage"></a>window.sessionStorage</h2><h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><ol><li>生命周期为关闭浏览器窗口</li><li>在同一个窗口（页面）下数据可以共享</li><li>以键值对的形式存储使用</li></ol><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="存储数据"><a href="#存储数据" class="headerlink" title="存储数据"></a>存储数据</h4><p><code>sessionStorage.setItem(key,value)</code></p><h4 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h4><p><code>sessionStorage.getItem(key)</code></p><h4 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h4><p><code>sessionStorage.removeItem(key)</code></p><h4 id="删除所有数据"><a href="#删除所有数据" class="headerlink" title="删除所有数据"></a>删除所有数据</h4><p><code>sessionStorage.clear()</code></p><h2 id="window-localStorage"><a href="#window-localStorage" class="headerlink" title="window.localStorage"></a>window.localStorage</h2><h3 id="特性-1"><a href="#特性-1" class="headerlink" title="特性"></a>特性</h3><ol><li>生命周期永久生效，除非手动删除否则关闭页面也会存在</li><li>可以多窗口（页面）共享（同一浏览器可以共享）</li><li>以键值对的形式存储使用</li></ol><h3 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h3><h4 id="存储数据-1"><a href="#存储数据-1" class="headerlink" title="存储数据"></a>存储数据</h4><p><code>localStorage.setItem(key,value)</code></p><h4 id="获取数据-1"><a href="#获取数据-1" class="headerlink" title="获取数据"></a>获取数据</h4><p><code>localStorage.getItem(key)</code></p><h4 id="删除数据-1"><a href="#删除数据-1" class="headerlink" title="删除数据"></a>删除数据</h4><p><code>localStorage.removeItem(key)</code></p><h4 id="删除所有数据-1"><a href="#删除所有数据-1" class="headerlink" title="删除所有数据"></a>删除所有数据</h4><p><code>localStorage.clear()</code></p><h3 id="案例-3"><a href="#案例-3" class="headerlink" title="案例"></a>案例</h3><h4 id="记住用户名"><a href="#记住用户名" class="headerlink" title="记住用户名"></a>记住用户名</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 记住用户名</span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> username = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;input&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> remember = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;input&#x27;</span>)[<span class="number">1</span>];</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;username&#x27;</span>)) &#123;</span></span><br><span class="line"><span class="language-javascript">            username.<span class="property">value</span> = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;username&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            remember.<span class="property">checked</span> = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        remember.<span class="title function_">addEventListener</span>(<span class="string">&#x27;change&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">checked</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;username&#x27;</span>, username.<span class="property">value</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">localStorage</span>.<span class="title function_">removeItem</span>(<span class="string">&#x27;username&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript DOM</title>
      <link href="/2022/07/28%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF_JavaScript_JavaScript%20DOM/f75e92e9/"/>
      <url>/2022/07/28%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF_JavaScript_JavaScript%20DOM/f75e92e9/</url>
      
        <content type="html"><![CDATA[<blockquote><p>DOM（Document Object Model 文档对象模型) 是W3C组织推荐的处理可扩展标记语言的标准编程接口。通过DOM提供的接口可以对页面上的各种元素进行操作（大小、位置、颜色等）。</p></blockquote><h1 id="DOM-树"><a href="#DOM-树" class="headerlink" title="DOM 树"></a>DOM 树</h1><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220802211554.png" alt="20220802211554"></p><p>文档：一个页面就是一个文档，DOM中使用document表示<br>元素：页面中的所有标签都是元素，DOM中使用element表示<br>节点：网页中的所有内容都是节点（标签、属性、文本、注释等）,DOM中使用 node 表示</p><h1 id="获取元素"><a href="#获取元素" class="headerlink" title="获取元素"></a>获取元素</h1><p>官方文档：<a href="https://developer.mozilla.org/en-US/docs/Web/API/Document">https://developer.mozilla.org/en-US/docs/Web/API/Document</a></p><h2 id="getElementByld"><a href="#getElementByld" class="headerlink" title="getElementByld()"></a>getElementByld()</h2><p>获取带有 ID 的元素对象</p><h2 id="getElementsByTagName"><a href="#getElementsByTagName" class="headerlink" title="getElementsByTagName()"></a>getElementsByTagName()</h2><p>返回带有指定标签名的对象的集合【伪数组的形式存储】</p><p>注意：</p><ol><li>得到的是一个对象的集合，所以想要操作里面的元素就需要遍历</li><li>得到元素对象是动态的</li></ol><h2 id="getElementsByClassName"><a href="#getElementsByClassName" class="headerlink" title="getElementsByClassName()"></a>getElementsByClassName()</h2><p>根据类名返回元素对象集合</p><h2 id="querySelector"><a href="#querySelector" class="headerlink" title="querySelector()"></a>querySelector()</h2><p>返回指定选择器（里面的参数必须是有效的 CSS 选择器字符串）第一个元素对象，如果找不到匹配项，则返回null。</p><h2 id="querySelectorAll"><a href="#querySelectorAll" class="headerlink" title="querySelectorAll()"></a>querySelectorAll()</h2><p>返回指定选择器（里面的参数必须是有效的 CSS 选择器字符串）所有元素对象</p><h2 id="document-body"><a href="#document-body" class="headerlink" title="document.body"></a>document.body</h2><p>获取当前文档中的<code>&lt;body&gt;</code>元素或者<code>&lt;frameset&gt;</code>元素.</p><h2 id="document-documentElement"><a href="#document-documentElement" class="headerlink" title="document.documentElement"></a>document.documentElement</h2><p>获取 HTML 文档的 <code>&lt;html&gt;</code> 元素</p><h1 id="操作元素"><a href="#操作元素" class="headerlink" title="操作元素"></a>操作元素</h1><blockquote><p>JavaScript的DOM操作可以改变网页内容、结构和样式。</p></blockquote><h2 id="操作元素内容"><a href="#操作元素内容" class="headerlink" title="操作元素内容"></a>操作元素内容</h2><ul><li><strong>Element.innerHTML</strong></li><li>Element.innerText （特点：不识别 html 标签，去除空格和换行。【非标准】）</li></ul><h2 id="操作常见元素属性"><a href="#操作常见元素属性" class="headerlink" title="操作常见元素属性"></a>操作常见元素属性</h2><ul><li>src</li><li>href</li><li>title</li><li>alt</li><li>…</li></ul><h2 id="操作表单元素属性"><a href="#操作表单元素属性" class="headerlink" title="操作表单元素属性"></a>操作表单元素属性</h2><p>利用DOM可以操作如下表单元素的属性：</p><ul><li>type</li><li>value</li><li>checked</li><li>selected</li><li>disabled</li></ul><h2 id="操作元素样式属性"><a href="#操作元素样式属性" class="headerlink" title="操作元素样式属性"></a>操作元素样式属性</h2><p>可以通过JS修改元素的大小、颜色、位置等样式</p><ul><li>element.style<ul><li>应用场景：样式属性较少的时候（产生的是行内样式，<strong>css 权重比较高</strong>）</li></ul></li><li>element.className<ul><li>应用场景：CSS 样式比较复杂的时候，单独定义一个类，然后给元素添加类名</li><li>注意：<ul><li>className 会直接更改元素的类名，会覆盖原先的类名。</li><li>如想要保留原先的类名，可以使用多类名选择器，补充原先的类名。（如：<code>this.className =&#39;原类名 类名1 类名2&#39;;</code>）</li></ul></li></ul></li></ul><h2 id="自定义属性操作"><a href="#自定义属性操作" class="headerlink" title="自定义属性操作"></a>自定义属性操作</h2><blockquote><p>自定义属性目的：是为了保存并使用数据。有些数据可以保存到页面中而不用保存到数据库中。</p></blockquote><ul><li>Element.getAttribute(‘属性’);</li><li>Element.setAttribute(‘属性’, ‘属性值’);</li><li>Element.removeAttribute(‘属性’);</li></ul><p>拓展：<br>命名规范：H5规定自定义属性 <code>data-</code> 开头做为属性名并且赋值。<br>以 <code>data-</code> 开头的属性，可以通过 H5新增语法： <code>element.dataset.属性名</code> 或 <code>element.dataset[&#39;属性名&#39;]</code> 的方式获取属性值。</p><h2 id="案例："><a href="#案例：" class="headerlink" title="案例："></a>案例：</h2><h3 id="循环精灵图："><a href="#循环精灵图：" class="headerlink" title="循环精灵图："></a>循环精灵图：</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">首先精灵图图片排列有规律的（如：竖向排列）</span></span><br><span class="line"><span class="comment">核心思路：</span></span><br><span class="line"><span class="comment">1. 利用 for 循环修改精灵图片的背景位置 background-position</span></span><br><span class="line"><span class="comment">2. 让循环里面的 i索引号 * 精灵图之间的间隔 就是每个图片的 y 坐标</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; elements.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="comment">// index: y 坐标</span></span><br><span class="line">    <span class="keyword">let</span> index = i * 精灵图之间的间隔;</span><br><span class="line">    elements[i].<span class="property">style</span>.<span class="property">bacgroundPosition</span> = <span class="string">&#x27;0 -&#x27;</span> + index + <span class="string">&#x27;px&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="排他思想"><a href="#排他思想" class="headerlink" title="排他思想"></a>排他思想</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line"></span><br><span class="line">如果有同一组元素，我们想要某一个元素实现某种样式，需要用到循环的排他思想算法：</span><br><span class="line">1.所有元素全部清除样式（干掉其他人）</span><br><span class="line">2.给当前元素设置样式（留下我自己）</span><br><span class="line">注意：顺序不能颠倒，首先干掉其他人，再设置自己</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">// 排他思想案例：批量为元素添加事件，点击元素背景高亮效果。</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>Button1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>Button2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>Button3<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>Button4<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>Button5<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> btns = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;button&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; btns.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">            btns[i].<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 排他思想：循环清除掉所有样式。</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; btns.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">                    btns[i].<span class="property">style</span>.<span class="property">backgroundColor</span> = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">backgroundColor</span> = <span class="string">&#x27;pink&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="全选反选"><a href="#全选反选" class="headerlink" title="全选反选"></a>全选反选</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;check_all&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>全选<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tbody</span> <span class="attr">id</span>=<span class="string">&quot;tb&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                        元素</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                        元素</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                        元素</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        分析：</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        1.全选和取消全选做法：让下面所有复选框的checked属性（选中状态）跟随全选按钮即可</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        2.下面复选框需要全部选中，上面全选才能选中做法：给下面所有复选框绑定点击事件，每次点击，都要循环查看下面所有的复选框是否有没选中的，如果有一个没选中的，上面全选就不选中。</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        3.可以设置一个变量，来控制全选是否选中</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        */</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> check_all = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;check_all&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> elements = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;tb&#x27;</span>).<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;input&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 全选和取消全选</span></span></span><br><span class="line"><span class="language-javascript">        check_all.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; elements.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">                elements[i].<span class="property">checked</span> = <span class="variable language_">this</span>.<span class="property">checked</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 下面复选框需要全部选中，上面全选才能选中</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; elements.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">            elements[i].<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">let</span> flag = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 检查按钮是否被全选中</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; elements.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 只要有一个按钮没被选中，全选按钮不勾选</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span>(!elements[i].<span class="property">checked</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                        flag = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                    check_all.<span class="property">checked</span> = flag;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Tab-栏切换"><a href="#Tab-栏切换" class="headerlink" title="Tab 栏切换"></a>Tab 栏切换</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">15px</span> <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.header</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.elem</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.current</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: darkolivegreen;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;current&quot;</span>&gt;</span>Tab1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Tab2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Tab3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;index1 elem&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: block;&quot;</span>&gt;</span>Content1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;index2 elem&quot;</span>&gt;</span>Content2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;index3 elem&quot;</span>&gt;</span>Content3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> lis = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;li&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> contents = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;elem&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; lis.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">            lis[i].<span class="title function_">setAttribute</span>(<span class="string">&#x27;index&#x27;</span>, i);</span></span><br><span class="line"><span class="language-javascript">            lis[i].<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; lis.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">                    lis[i].<span class="property">className</span> = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">className</span> = <span class="string">&#x27;current&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">let</span> index = <span class="variable language_">this</span>.<span class="title function_">getAttribute</span>(<span class="string">&#x27;index&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; contents.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">                    contents[i].<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                contents[index].<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="节点操作"><a href="#节点操作" class="headerlink" title="节点操作"></a>节点操作</h1><h2 id="节点属性"><a href="#节点属性" class="headerlink" title="节点属性"></a>节点属性</h2><blockquote><p>一般地，节点至少拥有nodeType(节点类型）、nodeName(节点名称）和nodeValue(节点值）这三个基本属性。</p></blockquote><p>nodeType：</p><ul><li><strong>元素节点 nodeType 为 1</strong></li><li>属性节点 nodeType 为 2</li><li>文本节点 nodeType 为 3 (文本节点包含文字、空格、换行等）</li></ul><h2 id="节点层级"><a href="#节点层级" class="headerlink" title="节点层级"></a>节点层级</h2><blockquote><p>DOM树可以把节点划分为不同的层级关系，<strong>常见的是父子兄层级关系。</strong></p></blockquote><ul><li>Node.parentNode<ul><li>返回某节点的最近一个父节点（没有父节点则返回null）</li></ul></li><li>Node.childNodes 【标准】<ul><li>返回指定节点的子节点的集合，该集合为即时更新的集合</li><li>包括元素节点，和文本节点等。（如只想获取元素节点，可通过遍历判断：<code>Node.childNodes[i].nodeType==1</code>）</li></ul></li><li><strong>Element.children</strong><ul><li><strong>返回所有的子元素节点</strong></li></ul></li><li>Node.firstChild<ul><li>返回第一个子节点，找不到则返回 null</li><li>包括元素节点，和文本节点等</li></ul></li><li>Node.lastChild<ul><li>返回最后一个子节点，找不到则返回 null</li><li>包括元素节点，和文本节点等</li></ul></li><li><strong>Element.firstElementChild</strong><ul><li><strong>返回第一个子元素节点</strong>，找不到则返回 null</li></ul></li><li><strong>Element.lastElementChild</strong><ul><li><strong>返回最后一个子元素节点</strong>，找不到则返回 null</li></ul></li><li>Node.nextSibling<ul><li>返回当前元素的下一个兄弟节点，找不到则返回 null</li><li>包括元素节点，和文本节点等</li></ul></li><li>Node.previousSibling<ul><li>返回当前元素的上一个兄弟节点，找不到则返回 null</li><li>包括元素节点，和文本节点等</li></ul></li><li>Node.nextElementSibling<ul><li><strong>返回当前元素下一个兄弟元素节点</strong>，找不到则返回 null</li></ul></li><li>Node.previousElementSibling<ul><li><strong>返回当前元素上一个兄弟元素节点</strong>，找不到则返回 null</li></ul></li></ul><h2 id="创建节点"><a href="#创建节点" class="headerlink" title="创建节点"></a>创建节点</h2><ul><li>document.createElement(‘tagName’)</li><li>document.write(‘str’)<ul><li>直接将内容写入页面的内容流，<strong>但如果文档流执行完毕，则它会导致页面全部重绘</strong></li></ul></li><li>Element.innerHTML<ul><li>将内容写入某个DOM节点，不会导致页面全部重绘</li></ul></li></ul><p>拓展：</p><p>innerHTML 创建多个元素效率更高（<strong>不要拼接字符串，采取数组形式拼接【将字符串push 到数组中，然后用数组的join方法】</strong>）, createElement()创建多个元素效率稍低一点点，但是结构更清晰</p><h2 id="添加节点"><a href="#添加节点" class="headerlink" title="添加节点"></a>添加节点</h2><ul><li>Node.appendChild (child)<ul><li>将一个节点添加到指定父节点的子节点列表末尾</li></ul></li><li>Node.insertBefore(child,指定元素）<ul><li>将一个节点添加到父节点的指定子节点前面</li></ul></li></ul><h2 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h2><ul><li>Node.removechild(child)<ul><li>从DOM中删除一个子节点，返回删除的节点</li></ul></li></ul><h2 id="复制节点"><a href="#复制节点" class="headerlink" title="复制节点"></a>复制节点</h2><ul><li>Node.cloneNode()<ul><li>返回调用该方法的节点的一个副本<ul><li>括号参数为 <code>空</code> 或 <code>false</code>,则是<strong>浅拷贝</strong>，即只克隆复制节点本身，不克隆里面的子节点。</li><li>括号参数为 <code>true</code> ,则是<strong>深度拷贝</strong>，会复制节点本身以及里面所有的子节点。</li></ul></li></ul></li></ul><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><h3 id="动态创建表格"><a href="#动态创建表格" class="headerlink" title="动态创建表格"></a>动态创建表格</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">td</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&#x27;1&#x27;</span> <span class="attr">cellspacing</span>=<span class="string">&#x27;0&#x27;</span> <span class="attr">width</span>=<span class="string">&#x27;500px&#x27;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>课程<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>成绩<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> stuInfo = [&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>: <span class="string">&#x27;庆生&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">subject</span>: <span class="string">&#x27;数学&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">score</span>: <span class="number">100</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>: <span class="string">&#x27;小黄&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">subject</span>: <span class="string">&#x27;管理&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">score</span>: <span class="number">120</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        ]</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> tbody = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;tbody&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 根据数据渲染表格</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 1. 遍历数组创建行</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; stuInfo.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> tr = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;tr&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 2. 根据数组对象中对象的属性个数创建列</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">for</span> (<span class="keyword">const</span> k <span class="keyword">in</span> stuInfo[i]) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">let</span> td = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;td&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 3. 遍历对象，将对象中的数据填充到单元格中</span></span></span><br><span class="line"><span class="language-javascript">                td.<span class="property">innerHTML</span> = stuInfo[i][k];</span></span><br><span class="line"><span class="language-javascript">                tr.<span class="title function_">appendChild</span>(td)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 创建删除按钮</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> td_del = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;td&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            td_del.<span class="property">innerHTML</span> = <span class="string">&quot;&lt;a href = &#x27;javascript:;&#x27;&gt;删除&lt;/a&gt;&quot;</span></span></span><br><span class="line"><span class="language-javascript">            tr.<span class="title function_">appendChild</span>(td_del);</span></span><br><span class="line"><span class="language-javascript">            tbody.<span class="title function_">appendChild</span>(tr);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 删除按钮绑定删除事件</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> a_del = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;a&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; a_del.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">            a_del[i].<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                tbody.<span class="title function_">removeChild</span>(<span class="variable language_">this</span>.<span class="property">parentNode</span>.<span class="property">parentNode</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h1><h2 id="事件三要素"><a href="#事件三要素" class="headerlink" title="事件三要素"></a>事件三要素</h2><ol><li>事件源</li><li>事件类型</li><li>事件处理程序</li></ol><h2 id="注册事件（绑定事件）"><a href="#注册事件（绑定事件）" class="headerlink" title="注册事件（绑定事件）"></a>注册事件（绑定事件）</h2><h3 id="onclick"><a href="#onclick" class="headerlink" title="onclick"></a>onclick</h3><p>特点：同一个元素同一个事件只能设置一个处理函数。（最后注册的处理函数将会覆盖前面注册的处理函数）</p><h3 id="addEventListener"><a href="#addEventListener" class="headerlink" title="addEventListener"></a>addEventListener</h3><p>语法：<code>target.addEventListener(type, listener, options);</code></p><p>特点：同一个元素同一个事件可以注册多个监听器。（按注册顺序依次执行）</p><h3 id="注册事件兼容方案【了解】"><a href="#注册事件兼容方案【了解】" class="headerlink" title="注册事件兼容方案【了解】"></a>注册事件兼容方案【了解】</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 兼容性处理的原则：首先照顾大多数浏览器，再处理特殊浏览器。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">addEventListener</span>(<span class="params">element, eventName, fn</span>) &#123;</span><br><span class="line">   <span class="comment">//判断当前浏览器是否支持 addEventListener 方法</span></span><br><span class="line">   <span class="keyword">if</span> (element.<span class="property">addEventListener</span>) &#123;</span><br><span class="line">       <span class="comment">//第三个参数默认是false</span></span><br><span class="line">       element.<span class="title function_">addEventListener</span>(eventName, fn);</span><br><span class="line">   &#125; <span class="keyword">else</span> <span class="keyword">if</span> (element.<span class="property">attachEvent</span>) &#123;</span><br><span class="line">       element.<span class="title function_">attachEvent</span>(<span class="string">&#x27;on&#x27;</span> + eventName, fn);</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">       <span class="comment">//相当于element.onclick=fn;</span></span><br><span class="line">       element[<span class="string">&#x27;on&#x27;</span> + eventName] = fn;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="删除事件（解绑事件）"><a href="#删除事件（解绑事件）" class="headerlink" title="删除事件（解绑事件）"></a>删除事件（解绑事件）</h2><h3 id="传统事件解绑"><a href="#传统事件解绑" class="headerlink" title="传统事件解绑"></a>传统事件解绑</h3><p>思路：执行完毕之后，将事件引用设置为 <code>null</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">elemet.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">// 逻辑代码</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="comment">// 逻辑代码执行完毕删除事件引用</span></span><br><span class="line">    elemet.<span class="property">onclick</span> = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="addEventListener-解绑"><a href="#addEventListener-解绑" class="headerlink" title="addEventListener 解绑"></a>addEventListener 解绑</h3><p>target.removeEventListener(type, listener[, options]);</p><h3 id="删除事件兼容方案【了解】"><a href="#删除事件兼容方案【了解】" class="headerlink" title="删除事件兼容方案【了解】"></a>删除事件兼容方案【了解】</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">removeEventListener</span>(<span class="params">element, eventName, fn</span>) &#123;</span><br><span class="line">   <span class="comment">//判断当前浏览器是否支持removeEventListener方法</span></span><br><span class="line">   <span class="keyword">if</span> (element.<span class="property">removeEventListener</span>) &#123;</span><br><span class="line">       <span class="comment">//第三个参数默认是false</span></span><br><span class="line">       element.<span class="title function_">removeEventListener</span>(eventName, fn);</span><br><span class="line">   &#125; <span class="keyword">else</span> <span class="keyword">if</span> (element.<span class="property">detachEvent</span>) &#123;</span><br><span class="line">       element.<span class="title function_">detachEvent</span>(<span class="string">&#x27;on&#x27;</span> + eventName, fn);</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">       element[<span class="string">&#x27;on&#x27;</span> + eventName] = <span class="literal">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="DOM事件流"><a href="#DOM事件流" class="headerlink" title="DOM事件流"></a>DOM事件流</h2><blockquote><p>事件发生时会在元素节点之间按照特定的顺序传播，这个传播过程即DOM事件流。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/202208051523755.png" alt="事件流"></p><p>DOM事件流分为3个阶段：</p><ol><li>捕获阶段</li><li>当前目标阶段</li><li>冒泡阶段</li></ol><p>注意：</p><ol><li><strong>JS代码中只能执行捕获或冒泡其中一个</strong></li><li>onclick 和 attachEvent 只能得到冒泡阶段</li><li>addEventListener<ul><li>第三个参数如果是 true,表示在事件捕获阶段调用事件处理程序</li><li>第三个参数如果是 false,表示在冒泡捕获阶段调用事件处理程序（默认false）</li></ul></li><li>有些事件是没有冒泡的。（如：onblur、onfocus、onmouseenter、onmouseleave）</li></ol><h2 id="事件对象"><a href="#事件对象" class="headerlink" title="事件对象"></a>事件对象</h2><blockquote><p>事件对象写到我们侦听函数的小括号里面当<strong>形参</strong>来看。事件发生后，跟事件相关的一系列信息数据的集合都放到这个对象里面，这个对象就是事件对象 <code>event</code>，它有很多属性和方法。</p></blockquote><h3 id="事件对象常见属性和方法"><a href="#事件对象常见属性和方法" class="headerlink" title="事件对象常见属性和方法"></a>事件对象常见属性和方法</h3><div class="table-container"><table><thead><tr><th>事件对象属性方法</th><th>说明</th></tr></thead><tbody><tr><td><strong>e.target</strong></td><td><strong>返回触发事件的对象【标准】</strong></td></tr><tr><td>e.srcElement</td><td>返回触发事件的对象【非标准，IE】</td></tr><tr><td><strong>e.type</strong></td><td><strong>返回事件的类型</strong></td></tr><tr><td><strong>e.stopPropagation()</strong></td><td><strong>该方法阻止冒泡【标准】</strong></td></tr><tr><td>e.cancelBubble</td><td>该属性阻止冒泡【非标准，IE】</td></tr><tr><td>e.returnValue</td><td>该属性阻止默认事件（默认行为） 【非标准，IE】</td></tr><tr><td><strong>e.preventDefault()</strong></td><td><strong>该方法阻止默认事件（默认行为）</strong></td></tr></tbody></table></div><h3 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h3><h4 id="事件对象兼容【了解思路】"><a href="#事件对象兼容【了解思路】" class="headerlink" title="事件对象兼容【了解思路】"></a>事件对象兼容【了解思路】</h4><p><code>e = e || window.event</code>; 【IE 需要通过 window.event 才能获取事件对象。】</p><h4 id="e-target-和-this-的区别"><a href="#e-target-和-this-的区别" class="headerlink" title="e.target 和 this 的区别"></a>e.target 和 this 的区别</h4><ul><li>e.target 返回的是<strong>触发事件的对象</strong>（元素）</li><li>this 返回的是<strong>绑定事件的对象</strong>（元素）</li></ul><p>补充：跟 this 非常相似的属性：<code>currentTarget</code> 【了解】</p><h4 id="阻止A链接默认行为"><a href="#阻止A链接默认行为" class="headerlink" title="阻止A链接默认行为"></a>阻止A链接默认行为</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    e.<span class="title function_">preventDefault</span>();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="阻止事件冒泡"><a href="#阻止事件冒泡" class="headerlink" title="阻止事件冒泡"></a>阻止事件冒泡</h4><p>兼容性方案：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(e &amp;&amp; e.<span class="property">stopPropagation</span>)&#123;</span><br><span class="line">    <span class="comment">// 标准</span></span><br><span class="line">    e.<span class="title function_">stopPropagation</span>();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">// IE</span></span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">event</span>.<span class="property">cancelBubble</span> = <span class="literal">true</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="事件委托（代理、委派）"><a href="#事件委托（代理、委派）" class="headerlink" title="事件委托（代理、委派）"></a>事件委托（代理、委派）</h2><blockquote><p>原理：不是每个子节点单独设置事件监听器，而是<strong>事件监听器设置在其父节点上</strong>，然后<strong>利用冒泡原理</strong>影响设置每个子节点。<br>作用: 只操作了一次DOM,提高了程序的性能。</p></blockquote><h3 id="案例-1"><a href="#案例-1" class="headerlink" title="案例"></a>案例</h3><p>利用事件委托给 li 绑定事件:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> ul = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;ul&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">ul.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">target</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="鼠标事件"><a href="#鼠标事件" class="headerlink" title="鼠标事件"></a>鼠标事件</h2><h3 id="常用鼠标事件"><a href="#常用鼠标事件" class="headerlink" title="常用鼠标事件"></a>常用鼠标事件</h3><div class="table-container"><table><thead><tr><th>鼠标事件</th><th>触发事件</th></tr></thead><tbody><tr><td>onclick</td><td>鼠标点击左键触发</td></tr><tr><td>onmouseover</td><td>鼠标经过触发（子盒子也会触发）</td></tr><tr><td>onmouseenter</td><td>鼠标经过自身盒子触发（不会冒泡）</td></tr><tr><td>onmouseleave</td><td>鼠标离开自身盒子触发（不会冒泡）</td></tr><tr><td>onmouseout</td><td>鼠标离开触发</td></tr><tr><td>onfocus</td><td>获得鼠标焦点触发</td></tr><tr><td>onblur</td><td>失去鼠标焦点触发</td></tr><tr><td>onmousemove</td><td>鼠标移动触发</td></tr><tr><td>onmouseup</td><td>鼠标弹起触发</td></tr><tr><td>onmousedown</td><td>鼠标按下触发</td></tr><tr><td>onscroll</td><td>对象<strong>内部内容区</strong>的滚动事件</td></tr><tr><td>onwheel</td><td>鼠标滚轮旋转</td></tr><tr><td>contextmenu</td><td>用户交互（例如右键点击）时出现的菜单</td></tr><tr><td>selectstart</td><td>用户开始一个新的选择时候触发</td></tr></tbody></table></div><h3 id="鼠标事件对象"><a href="#鼠标事件对象" class="headerlink" title="鼠标事件对象"></a>鼠标事件对象</h3><blockquote><p>MouseEvent 鼠标事件对象</p></blockquote><div class="table-container"><table><thead><tr><th>鼠标事件对象</th><th>说明</th></tr></thead><tbody><tr><td>e.clientX</td><td>返回鼠标相对于浏览器窗口<strong>可视区</strong>的 X 坐标</td></tr><tr><td>e.clientY</td><td>返回鼠标相对于浏览器窗口<strong>可视区</strong>的 Y 坐标</td></tr><tr><td>e.pageX</td><td>返回鼠标相对于<strong>文档页面</strong>的 X 坐标</td></tr><tr><td>e.pageY</td><td>返回鼠标相对于<strong>文档页面</strong>的 Y 坐标</td></tr><tr><td>e.screenX</td><td>返回鼠标相对于<strong>电脑屏幕</strong>的 X 坐标</td></tr><tr><td>e.screenY</td><td>返回鼠标相对于<strong>电脑屏幕</strong>的 Y 坐标</td></tr></tbody></table></div><h3 id="案例-2"><a href="#案例-2" class="headerlink" title="案例"></a>案例</h3><h4 id="元素跟随鼠标移动"><a href="#元素跟随鼠标移动" class="headerlink" title="元素跟随鼠标移动"></a>元素跟随鼠标移动</h4><details class="folding-tag" ><summary> 实现效果 </summary>              <div class='content'>              <p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/元素跟随鼠标移动.gif" alt="元素跟随鼠标移动"><br></p>              </div>            </details></p><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/202208051850439.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> elem = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;img&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mousemove&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            elem.<span class="property">style</span>.<span class="property">left</span> = e.<span class="property">pageX</span> + <span class="string">&#x27;px&#x27;</span></span></span><br><span class="line"><span class="language-javascript">            elem.<span class="property">style</span>.<span class="property">top</span> = e.<span class="property">pageY</span> + <span class="string">&#x27;px&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="禁止鼠标右键菜单"><a href="#禁止鼠标右键菜单" class="headerlink" title="禁止鼠标右键菜单"></a>禁止鼠标右键菜单</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// contextmenu 主要控制应该何时显示上下文菜单</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;contextmenu&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    e.<span class="title function_">preventDefault</span>();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="禁止鼠标选中文字"><a href="#禁止鼠标选中文字" class="headerlink" title="禁止鼠标选中文字"></a>禁止鼠标选中文字</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;selectstart&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    e.<span class="title function_">preventDefault</span>();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="键盘事件"><a href="#键盘事件" class="headerlink" title="键盘事件"></a>键盘事件</h2><h3 id="常用键盘事件"><a href="#常用键盘事件" class="headerlink" title="常用键盘事件"></a>常用键盘事件</h3><div class="table-container"><table><thead><tr><th>键盘事件</th><th>说明</th></tr></thead><tbody><tr><td>onkeyup</td><td>某个键盘按键被松开时触发</td></tr><tr><td>onkeydown</td><td>某个键盘按键被按下时触发</td></tr><tr><td>onkeypress</td><td>某个键盘按键被按下时触发(不识别功能键.如 ctrl shift 箭头等)</td></tr></tbody></table></div><p>补充:</p><ol><li>使用 addEventListener <strong>不需要加 on</strong></li><li>三个事件执行顺序: <strong>keydown —&gt; keypress —&gt; keyup</strong></li></ol><h3 id="键盘事件对象"><a href="#键盘事件对象" class="headerlink" title="键盘事件对象"></a>键盘事件对象</h3><div class="table-container"><table><thead><tr><th>键盘事件对象属性</th><th>说明</th></tr></thead><tbody><tr><td>keyCode</td><td>返回该键的 ASCII 值</td></tr></tbody></table></div><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/202208052126999.png" alt="ASCII 码"></p><p>补充：</p><ol><li><strong>onkeydown 事件 监听 keyCode 不区分大小写，onkeypress 事件监听 keyCode 区分大小写。</strong></li></ol><h3 id="案例-3"><a href="#案例-3" class="headerlink" title="案例"></a>案例</h3><p>监听键盘事件聚焦表单：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> input = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;input&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;keyup&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span>(e.<span class="property">keyCode</span> === <span class="number">83</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                input.<span class="title function_">focus</span>();</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="PC-特效"><a href="#PC-特效" class="headerlink" title="PC 特效"></a>PC 特效</h1><h2 id="offset"><a href="#offset" class="headerlink" title="offset"></a>offset</h2><blockquote><p>使用 offset 系列相关属性可以<strong>动态</strong>的得到该元素的位置（偏移）、大小等。</p></blockquote><h3 id="offset-常用属性"><a href="#offset-常用属性" class="headerlink" title="offset 常用属性"></a>offset 常用属性</h3><div class="table-container"><table><thead><tr><th>offset 常用属性</th><th>作用</th></tr></thead><tbody><tr><td>element.offsetParent</td><td>返回作为该元素<strong>带有定位的父级元素。</strong>（父级没有定位则返回 body）</td></tr><tr><td>element.offsetTop</td><td>返回元素<strong>相对带有定位父元素上方的偏移</strong></td></tr><tr><td>element.offsetLeft</td><td>返回元素<strong>相对带有定位父元素左边框的偏移</strong></td></tr><tr><td>element.offsetWidth</td><td>返回自身<strong>包括padding、边框、内容区的宽度</strong>，返回数值不带单位</td></tr><tr><td>element.offsetHeight</td><td>返回自身<strong>包括padding、边框、内容区的高度</strong>，返回数值不带单位</td></tr></tbody></table></div><h3 id="offset-与-style-区别"><a href="#offset-与-style-区别" class="headerlink" title="offset 与 style 区别"></a>offset 与 style 区别</h3><p>offset：</p><ul><li>offset 可以得到<strong>任意样式表中的样式值</strong></li><li>offset 系列获得的数值是没有单位的</li><li>offsetWidth 包含 padding + border + width</li><li>offsetWidth 等属性是<strong>只读属性</strong>，只能获取不能赋值<br>总结：想要获取元素大小位置，用 offset 更合适</li></ul><p>style：</p><ul><li>style <strong>只能得到行内样式表中的样式值</strong></li><li>style.width 获得的是带有单位的字符串</li><li>style.width 获得不包含 padding 和 border 的值</li><li>style.width 是<strong>可读写属性</strong>，可以获取也可以赋值<br>总结：想要给元素更改值，则需要用style改变</li></ul><h3 id="案例-4"><a href="#案例-4" class="headerlink" title="案例"></a>案例</h3><h4 id="计算鼠标在盒子内的坐标"><a href="#计算鼠标在盒子内的坐标" class="headerlink" title="计算鼠标在盒子内的坐标"></a>计算鼠标在盒子内的坐标</h4><details class="folding-tag" ><summary> 实现效果 </summary>              <div class='content'>              <p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/202208062354748.gif" alt="计算鼠标在盒子内的坐标"><br></p>              </div>            </details></p><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">400px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: darkslategray;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> box = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;box&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">        box.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 思路：鼠标位置 - 盒子边框距左侧的距离 = 鼠标在盒子内的坐标</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> x = e.<span class="property">pageX</span> - <span class="variable language_">this</span>.<span class="property">offsetLeft</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> y = e.<span class="property">pageY</span> - <span class="variable language_">this</span>.<span class="property">offsetTop</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="property">innerHTML</span> = <span class="string">&quot;X：&quot;</span> + x + <span class="string">&quot;Y:&quot;</span> + y;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="拖拽（模态框）"><a href="#拖拽（模态框）" class="headerlink" title="拖拽（模态框）"></a>拖拽（模态框）</h4><details class="folding-tag" ><summary> 实现效果 </summary>              <div class='content'>              <p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/拖拽.gif" alt="拖拽"><br></p>              </div>            </details></p><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.login-header</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.login</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">512px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">280px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: fixed;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">#ebebeb</span> solid <span class="number">1px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">z-index</span>: <span class="number">999</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">20px</span> <span class="number">#ddd</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.login-title</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">cursor</span>: move;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.login-input-content</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.login-button</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">30px</span> auto <span class="number">0px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">#ebebeb</span> <span class="number">1px</span> solid;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.login-bg</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: fixed;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">3</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#000000</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.login-button</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.login-input</span> <span class="selector-tag">input</span><span class="selector-class">.list-input</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">35px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">35px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">350px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">#ebebeb</span> <span class="number">1px</span> solid;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-indent</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.login-input</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">20px</span> <span class="number">0px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.login-input</span> <span class="selector-tag">label</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">90px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding-right</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: right;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">35px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">35px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.login-title</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">right</span>: -<span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: -<span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="number">#ffffff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">#ebebeb</span> solid <span class="number">1px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;login-header&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>点击，弹出登录框<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;login&quot;</span> <span class="attr">class</span>=<span class="string">&quot;login&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;title&quot;</span> <span class="attr">class</span>=<span class="string">&quot;login-title&quot;</span>&gt;</span>登录会员</span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;closeBtn&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">class</span>=<span class="string">&quot;close-login&quot;</span>&gt;</span>关闭<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;login-input-content&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;login-input&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span> <span class="attr">name</span>=<span class="string">&quot;info[username]&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list-input&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;login-input&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span>&gt;</span>登录密码：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入登录密码&quot;</span> <span class="attr">name</span>=<span class="string">&quot;info[password]&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list-input&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;loginBtn&quot;</span> <span class="attr">class</span>=<span class="string">&quot;login-button&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:void(0);&quot;</span> <span class="attr">id</span>=<span class="string">&quot;login-button-submit&quot;</span>&gt;</span>登录会员<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 遮盖层 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;bg&quot;</span> <span class="attr">class</span>=<span class="string">&quot;login-bg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        拖拽效果需要使用三个事件实现：mousedown mouseup mousemove</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        原理：拖拽过程：鼠标移动过程中，获得最新的值赋值给模态框的left和top值，这样模态框可以跟着鼠标走了</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        */</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> link = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#link&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> login = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.login&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> title = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#title&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> closeBtn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#closeBtn&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> bg = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#bg&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        link.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            login.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            bg.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        closeBtn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            login.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            bg.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 按下标题</span></span></span><br><span class="line"><span class="language-javascript">        title.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mousedown&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 获取当前鼠标在盒子中的距离</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> x = e.<span class="property">pageX</span> - login.<span class="property">offsetLeft</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> y = e.<span class="property">pageY</span> - login.<span class="property">offsetTop</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mousemove&#x27;</span>, move);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">move</span>(<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                login.<span class="property">style</span>.<span class="property">left</span> = e.<span class="property">pageX</span> - x + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                login.<span class="property">style</span>.<span class="property">top</span> = e.<span class="property">pageY</span> - y + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mouseup&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">document</span>.<span class="title function_">removeEventListener</span>(<span class="string">&#x27;mousemove&#x27;</span>, move);</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="放大镜效果（京东）"><a href="#放大镜效果（京东）" class="headerlink" title="放大镜效果（京东）"></a>放大镜效果（京东）</h4><details class="folding-tag" ><summary> 实现效果 </summary>              <div class='content'>              <p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/放大镜效果.gif" alt="放大镜效果"><br></p>              </div>            </details></p><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;preview_img&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/1.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;mask&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;big&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/1.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;big_img&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.preview_img</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">352px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">451px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.preview_img</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.mask</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#FEDE4F</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.big</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">412px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">352px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">451px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.big</span> <span class="selector-class">.big_img</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> preview_img = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.preview_img&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> mask = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.mask&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> big = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.big&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> big_img = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.big_img&#x27;</span>);</span><br><span class="line"></span><br><span class="line">preview_img.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mouseover&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    mask.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span>;</span><br><span class="line">    big.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span>;</span><br><span class="line">&#125;)</span><br><span class="line">preview_img.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mouseout&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    mask.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">    big.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">&#125;)</span><br><span class="line">preview_img.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mousemove&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获得鼠标在页面中的坐标</span></span><br><span class="line">    <span class="keyword">var</span> mouseX = e.<span class="property">pageX</span>;</span><br><span class="line">    <span class="keyword">var</span> mouseY = e.<span class="property">pageY</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获得preview_img盒子在页面中的位置</span></span><br><span class="line">    <span class="keyword">var</span> boxLeft = preview_img.<span class="property">offsetLeft</span>;</span><br><span class="line">    <span class="keyword">var</span> boxTop = preview_img.<span class="property">offsetTop</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获得鼠标在preview_img盒子里面的坐标</span></span><br><span class="line">    <span class="keyword">var</span> x = mouseX - boxLeft;</span><br><span class="line">    <span class="keyword">var</span> y = mouseY - boxTop;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 让遮罩层跟着鼠标移动，最好让鼠标位于遮罩层盒子的中间</span></span><br><span class="line">    <span class="keyword">var</span> moveX = x - mask.<span class="property">offsetLeft</span> / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">var</span> moveY = y - mask.<span class="property">offsetHeight</span> / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//这里实现了遮罩层跟着鼠标移动，但是要注意限制遮罩层的移动范围在preview_img盒子里面</span></span><br><span class="line">    <span class="keyword">if</span> (moveX &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        moveX = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (moveX &gt;= preview_img.<span class="property">offsetWidth</span> - mask.<span class="property">offsetWidth</span>) &#123;</span><br><span class="line">        moveX = preview_img.<span class="property">offsetWidth</span> - mask.<span class="property">offsetWidth</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 纵轴上同理</span></span><br><span class="line">    <span class="keyword">if</span> (moveY &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        moveY = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (moveY &gt;= preview_img.<span class="property">offsetHeight</span> - mask.<span class="property">offsetHeight</span>) &#123;</span><br><span class="line">        moveY = preview_img.<span class="property">offsetHeight</span> - mask.<span class="property">offsetHeight</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mask.<span class="property">style</span>.<span class="property">top</span> = moveY + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">    mask.<span class="property">style</span>.<span class="property">left</span> = moveX + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//放大镜的功能核心公式: 大图片的移动距离 = 遮挡层移动距离 * 大图片最大移动距离 / 遮挡层的最大移动距离</span></span><br><span class="line">    <span class="comment">// 遮挡层移动的最大距离</span></span><br><span class="line">    <span class="keyword">var</span> maskMaxX = preview_img.<span class="property">offsetWidth</span> - mask.<span class="property">offsetWidth</span>;</span><br><span class="line">    <span class="keyword">var</span> maskMaxY = preview_img.<span class="property">offsetHeight</span> - mask.<span class="property">offsetHeight</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 大图片的最大移动距离</span></span><br><span class="line">    <span class="keyword">var</span> bigImgMaxX = big_img.<span class="property">offsetWidth</span> - big.<span class="property">offsetWidth</span>;</span><br><span class="line">    <span class="keyword">var</span> bigImgMaxY = big_img.<span class="property">offsetHeight</span> - big.<span class="property">offsetHeight</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 遮挡层移动的距离 moveX 和 moveY</span></span><br><span class="line">    <span class="comment">// 大图片的移动距离</span></span><br><span class="line">    <span class="keyword">var</span> bigX = moveX * bigImgMaxX / maskMaxX;</span><br><span class="line">    <span class="keyword">var</span> bigY = moveY * bigImgMaxY / maskMaxY;</span><br><span class="line"></span><br><span class="line">    big_img.<span class="property">style</span>.<span class="property">left</span> = - bigX + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">    big_img.<span class="property">style</span>.<span class="property">top</span> = - bigY + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="client"><a href="#client" class="headerlink" title="client"></a>client</h2><blockquote><p>使用 client 相关属性来获取元素<strong>可视区</strong>的相关信息。可以动态的得到该元素的边框大小、元素大小等。</p></blockquote><h3 id="client-常用属性"><a href="#client-常用属性" class="headerlink" title="client 常用属性"></a>client 常用属性</h3><div class="table-container"><table><thead><tr><th>client 常用属性</th><th>作用</th></tr></thead><tbody><tr><td>element.clientTop</td><td>返回元素<strong>上边框</strong>的大小</td></tr><tr><td>element.clientLeft</td><td>返回元素<strong>左边框</strong>的大小</td></tr><tr><td><strong>element.clientWidth</strong></td><td>返回自身包括 padding、内容区的宽度，<strong>不含边框</strong>，返回数值不带单位</td></tr><tr><td><strong>element.clientHeight</strong></td><td>返回自身包括 padding、内容区的高度，<strong>不含边框</strong>，返回数值不带单位</td></tr></tbody></table></div><h2 id="scroll"><a href="#scroll" class="headerlink" title="scroll"></a>scroll</h2><blockquote><p>使用 scroll 相关属性可以动态的得到<strong>元素的大小、滚动距离等</strong>。</p></blockquote><h3 id="scroll常用属性"><a href="#scroll常用属性" class="headerlink" title="scroll常用属性"></a>scroll常用属性</h3><div class="table-container"><table><thead><tr><th>scroll常用属性</th><th>作用</th></tr></thead><tbody><tr><td><strong>element.scrollTop</strong></td><td>返回<strong>对象内部内容</strong>被卷去的上侧距离，返回数值不带单位</td></tr><tr><td><strong>element.scrollLeft</strong></td><td>返回<strong>对象内部内容</strong>被卷去的左侧距离，返回数值不带单位</td></tr><tr><td>element.scrollWidth</td><td>返回自身实际的宽度，不含边框，返回数值不带单位</td></tr><tr><td>element.scrollHeight</td><td>返回自身实际的高度，不含边框，返回数值不带单位</td></tr></tbody></table></div><p>图解：</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220807215407.png" alt="20220807215407"></p><p>拓展：</p><div class="table-container"><table><thead><tr><th>属性</th><th>Description</th></tr></thead><tbody><tr><td>window.pageYOffset</td><td>页面（document）被卷去的上侧距离</td></tr><tr><td>window.pageXOffset</td><td>页面（document）被卷去的左侧距离</td></tr></tbody></table></div><h3 id="案例-5"><a href="#案例-5" class="headerlink" title="案例"></a>案例</h3><h4 id="固定侧边栏"><a href="#固定侧边栏" class="headerlink" title="固定侧边栏"></a>固定侧边栏</h4><details class="folding-tag" ><summary> 实现效果 </summary>              <div class='content'>              <p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/固定侧边栏.gif" alt="固定侧边栏"><br></p>              </div>            </details></p><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.slider-bar</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-left</span>: <span class="number">600px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">45px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">130px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.w</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">1200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">10px</span> auto;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.header</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: purple;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.banner</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">250px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.main</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">1000px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: yellowgreen;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">bottom</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    1、需要用到页面滚动事件scroll因为是页面滚动，所以事件源是 document</span></span><br><span class="line"><span class="comment">    2、滚动到某个位置，就是判断页面被卷去的上部值</span></span><br><span class="line"><span class="comment">    3、页面卷去的头部：可以通过 window.pageYOffset 获得  页面卷去的左侧：可以通过 window.pageXOffset 获得</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;slider-bar&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;goBack&quot;</span>&gt;</span>返回顶部<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header w&quot;</span>&gt;</span>头部区域<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;banner w&quot;</span>&gt;</span>banner区域<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main w&quot;</span>&gt;</span>主体部分<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 1、 获取元素</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> sliderbar = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.slider-bar&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> banner = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.banner&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// banner.offsetTop就是被卷去头部的大小   一定要写在滚动的外面</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> bannerTop = banner.<span class="property">offsetTop</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 当侧边栏固定定位之后应该变化的数值</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> sliderbarTop = sliderbar.<span class="property">offsetTop</span> - bannerTop;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//    获取主体main</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> main = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.main&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> goBack = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.goBack&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> mainTop = main.<span class="property">offsetTop</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 2、页面滚动事件 scroll</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;scroll&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// window.pageYOffset页面被卷去头部</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// console.log(window.pageYOffset);</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 3、当页面被卷去头部大于等于172此时  侧边栏就要改为固定定位</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">pageYOffset</span> &gt;= bannerTop) &#123;</span></span><br><span class="line"><span class="language-javascript">                sliderbar.<span class="property">style</span>.<span class="property">position</span> = <span class="string">&#x27;fixed&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                sliderbar.<span class="property">style</span>.<span class="property">top</span> = sliderbarTop + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                sliderbar.<span class="property">style</span>.<span class="property">position</span> = <span class="string">&#x27;absolute&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                sliderbar.<span class="property">style</span>.<span class="property">top</span> = <span class="string">&#x27;300px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 4、当页面滚动到 main盒子，就显示 goback 模块</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">pageYOffset</span> &gt;= mainTop) &#123;</span></span><br><span class="line"><span class="language-javascript">                goBack.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                goBack.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h2><h3 id="案例-6"><a href="#案例-6" class="headerlink" title="案例"></a>案例</h3><h4 id="简单动画函数"><a href="#简单动画函数" class="headerlink" title="简单动画函数"></a>简单动画函数</h4><details class="folding-tag" ><summary> 实现效果 </summary>              <div class='content'>              <p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/动画函数调用效果.gif" alt="动画函数调用效果"><br></p>              </div>            </details></p><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: darkslategray;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>点击我！<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">animation</span>(<span class="params">element, target</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// bug: 防止多次调用动画的时候发生速度累计</span></span></span><br><span class="line"><span class="language-javascript">            <span class="built_in">clearInterval</span>(element.<span class="property">timer</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 优化：将定时器的应用设置为元素的属性</span></span></span><br><span class="line"><span class="language-javascript">            element.<span class="property">timer</span> = <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> (element.<span class="property">offsetLeft</span> &gt;= target) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="built_in">clearInterval</span>(element.<span class="property">timer</span>)</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                element.<span class="property">style</span>.<span class="property">left</span> = element.<span class="property">offsetLeft</span> + <span class="number">1</span> + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;, <span class="number">100</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> div = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;box&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">        div.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">animation</span>(<span class="variable language_">this</span>, <span class="number">600</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="缓动动画"><a href="#缓动动画" class="headerlink" title="缓动动画"></a>缓动动画</h4><details class="folding-tag" ><summary> 实现效果 </summary>              <div class='content'>              <p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/缓动动画函数调用效果.gif" alt="缓动动画函数调用效果"><br></p>              </div>            </details></p><p>核心算法：<strong>(目标值-现在的位置）/ 10 作为每次移动的距离步长</strong></p><ol><li>(100 - 0 ) /10 = 10</li><li>(100 - 10 ) /10 = 9</li><li>(100 - 19 ) /10 = 8.1</li></ol><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: darkslategray;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>点击我！<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">animation</span>(<span class="params">element, target</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 防止多次调用动画的时候发生累计</span></span></span><br><span class="line"><span class="language-javascript">            <span class="built_in">clearInterval</span>(element.<span class="property">timer</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 将定时器的应用设置为元素的属性</span></span></span><br><span class="line"><span class="language-javascript">            element.<span class="property">timer</span> = <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 缓动动画核心算法：(目标值-现在的位置）/ 10 作为每次移动的距离步长</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">let</span> step = (target - element.<span class="property">offsetLeft</span>) / <span class="number">10</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 优化：取整</span></span></span><br><span class="line"><span class="language-javascript">                step = step &gt; <span class="number">0</span> ? <span class="title class_">Math</span>.<span class="title function_">ceil</span>(step) : <span class="title class_">Math</span>.<span class="title function_">floor</span>(step);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> (element.<span class="property">offsetLeft</span> == target) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="built_in">clearInterval</span>(element.<span class="property">timer</span>)</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                element.<span class="property">style</span>.<span class="property">left</span> = element.<span class="property">offsetLeft</span> + step + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;, <span class="number">20</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> div = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;box&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">        div.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">animation</span>(<span class="variable language_">this</span>, <span class="number">800</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="缓动动画添加回调函数"><a href="#缓动动画添加回调函数" class="headerlink" title="缓动动画添加回调函数"></a>缓动动画添加回调函数</h4><details class="folding-tag" ><summary> 实现效果 </summary>              <div class='content'>              <p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/缓动动画函数添加回调函数.gif" alt="缓动动画函数添加回调函数"><br></p>              </div>            </details></p><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: darkslategray;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>点击我！<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">animation</span>(<span class="params">element, target, callback</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 防止多次调用动画的时候发生累计</span></span></span><br><span class="line"><span class="language-javascript">            <span class="built_in">clearInterval</span>(element.<span class="property">timer</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 将定时器的应用设置为元素的属性</span></span></span><br><span class="line"><span class="language-javascript">            element.<span class="property">timer</span> = <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 缓动动画核心算法：(目标值-现在的位置）/ 10 作为每次移动的距离步长</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">let</span> step = (target - element.<span class="property">offsetLeft</span>) / <span class="number">10</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 优化：取整</span></span></span><br><span class="line"><span class="language-javascript">                step = step &gt; <span class="number">0</span> ? <span class="title class_">Math</span>.<span class="title function_">ceil</span>(step) : <span class="title class_">Math</span>.<span class="title function_">floor</span>(step);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> (element.<span class="property">offsetLeft</span> == target) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="built_in">clearInterval</span>(element.<span class="property">timer</span>)</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 如果 callback 函数存在，则执行 callback 函数</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (callback) &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="title function_">callback</span>();</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                element.<span class="property">style</span>.<span class="property">left</span> = element.<span class="property">offsetLeft</span> + step + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;, <span class="number">20</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> div = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;box&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">        div.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">animation</span>(<span class="variable language_">this</span>, <span class="number">800</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span></span><br><span class="line"><span class="language-javascript">                div.<span class="property">style</span>.<span class="property">backgroundColor</span> = <span class="string">&#x27;skyblue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="缓动动画封装JS函数"><a href="#缓动动画封装JS函数" class="headerlink" title="缓动动画封装JS函数"></a>缓动动画封装JS函数</h4><details class="folding-tag" ><summary> 实现效果 </summary>              <div class='content'>              <p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/animate函数调用效果.gif" alt="animate函数调用效果"><br></p>              </div>            </details></p><p>代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// animate.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">animation</span>(<span class="params">element, target, callback</span>) &#123;</span><br><span class="line">    <span class="comment">// 防止多次调用动画的时候发生累计</span></span><br><span class="line">    <span class="built_in">clearInterval</span>(element.<span class="property">timer</span>);</span><br><span class="line">    <span class="comment">// 将定时器的应用设置为元素的属性</span></span><br><span class="line">    element.<span class="property">timer</span> = <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 缓动动画核心算法：(目标值-现在的位置）/ 10 作为每次移动的距离步长</span></span><br><span class="line">        <span class="keyword">let</span> step = (target - element.<span class="property">offsetLeft</span>) / <span class="number">10</span>;</span><br><span class="line">        <span class="comment">// 优化：取整</span></span><br><span class="line">        step = step &gt; <span class="number">0</span> ? <span class="title class_">Math</span>.<span class="title function_">ceil</span>(step) : <span class="title class_">Math</span>.<span class="title function_">floor</span>(step);</span><br><span class="line">        <span class="keyword">if</span> (element.<span class="property">offsetLeft</span> == target) &#123;</span><br><span class="line">            <span class="built_in">clearInterval</span>(element.<span class="property">timer</span>)</span><br><span class="line">            <span class="comment">// 如果 callback 函数存在，则执行 callback 函数</span></span><br><span class="line">            <span class="comment">// if (callback) &#123;</span></span><br><span class="line">            <span class="comment">//     callback();</span></span><br><span class="line">            <span class="comment">// &#125;</span></span><br><span class="line">            <span class="comment">// 这种写法(短路)等同于上面的 if 语句</span></span><br><span class="line">            callback &amp;&amp; <span class="title function_">callback</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        element.<span class="property">style</span>.<span class="property">left</span> = element.<span class="property">offsetLeft</span> + step + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">    &#125;, <span class="number">16</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">700</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: darkslategray;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.slide</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">z-index</span>: -<span class="number">999</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./animate.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;arrow&quot;</span>&gt;</span>&amp;lt<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;slide&quot;</span>&gt;</span>🎄🎋🎇🎁🎎🎀<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> box = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;box&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> arrow = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;arrow&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> slide = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;slide&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">        box.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mouseenter&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">animation</span>(slide, -<span class="number">160</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                arrow.<span class="property">innerHTML</span> = <span class="string">&#x27;&amp;gt&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">        box.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mouseleave&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">animation</span>(slide, <span class="number">0</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                arrow.<span class="property">innerHTML</span> = <span class="string">&#x27;&amp;lt&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="手写轮播图"><a href="#手写轮播图" class="headerlink" title="手写轮播图"></a>手写轮播图</h4><details class="folding-tag" ><summary> 实现效果 </summary>              <div class='content'>              <p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/202208100236605.gif" alt="手写轮播图"><br></p>              </div>            </details></p><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./css/index.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./js/animate.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./js/index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            user-select: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* position: relative; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">720px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">270px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.focus</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.arrow_l</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.arrow_r</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">120px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#ffa500</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">700</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">28px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">z-index</span>: <span class="number">5</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.arrow_l</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.arrow_r</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">right</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.focus_main</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 使用 animate 函数必须有定位 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">3800px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.focus_main</span> <span class="selector-tag">li</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">720px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.list_point</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">220px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">50%</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.list_point</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.list_point</span> <span class="selector-class">.current</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;focus&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 1. 左右箭头 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;arrow_l&quot;</span>&gt;</span>&amp;lt<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;arrow_r&quot;</span>&gt;</span>&amp;gt<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 2. 主体区域 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;focus_main&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/focus1.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/focus2.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/focus3.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/focus4.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 3. 小圆点 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;list_point&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line">功能：</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">  1. 鼠标经过轮播图模块，左右按钮显示，离开隐藏左右按钮。</span></span><br><span class="line"><span class="comment">  2. 动态生成小圆圈(循环图片张数，动态生成。)</span></span><br><span class="line"><span class="comment">     1. 小圆圈的排他思想（添加点击事件）</span></span><br><span class="line"><span class="comment">     2. 点击小圆圈滚动图片</span></span><br><span class="line"><span class="comment">        1. 用到animate动画函数，focus_main 元素必须有定位</span></span><br><span class="line"><span class="comment">        2. 滚动图片的核心算法：小圆圈的索引号乘以图片的宽度作为移动距离</span></span><br><span class="line"><span class="comment">  3. 点击右侧按钮一次，图片往左播放一张，以此类推，左侧按钮同理。</span></span><br><span class="line"><span class="comment">     1. 声明一个变量arrow_count,点击一次，自增1,让这个变量乘以图片宽度，就是ul的滚动距离。</span></span><br><span class="line"><span class="comment">     2. 无缝滚动</span></span><br><span class="line"><span class="comment">        1. cloneNode()加true深克隆复制里面的子节点</span></span><br><span class="line"><span class="comment">        2. 添加到ul最后面 appendChild</span></span><br><span class="line"><span class="comment">     3. 把ul第一个li复制一份，放到ul的最后面</span></span><br><span class="line"><span class="comment">     4. 当图片滚动到克隆的最后一张图片时，让ul快速的、不做动画的跳到最左侧：left 为 0</span></span><br><span class="line"><span class="comment">     5. 同时arrow_count赋值为0.可以从新开始滚动图片了</span></span><br><span class="line"><span class="comment">  4. 图片播放的同时，下面小圆圈模块跟随一起变化。</span></span><br><span class="line"><span class="comment">     1. 声明一个全局变量 circle_control 控制小圆圈的播放</span></span><br><span class="line"><span class="comment">     2. 如果circle_control == list_point.children.length 说明走到最后我们克隆的这张图片了我们就复原小圆点</span></span><br><span class="line"><span class="comment">  5. 点击小圆圈，可以播放相应图片。</span></span><br><span class="line"><span class="comment">  6. 鼠标不经过轮播图，轮播图也会自动播放图片。</span></span><br><span class="line"><span class="comment">     1. 使用定时器</span></span><br><span class="line"><span class="comment">     2. 定时器内手动调用 right按钮的点击事件：arrow_r.click();</span></span><br><span class="line"><span class="comment">  7. 鼠标经过，轮播图模块，自动播放停止。 鼠标离开，开启定时器</span></span><br><span class="line"><span class="comment">  8. 节流（优化：防止轮播图按钮连续点击造成播放过快。）</span></span><br><span class="line"><span class="comment">     1. 原理：当上一个函数动画内容执行完毕，再去执行下一个函数动画，让事件无法连续触发。</span></span><br><span class="line"><span class="comment">     2.  利用回调函数，添加一个变量来控制，锁住函数和解锁函数。 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> focus = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;focus&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">let</span> arrow_l = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;arrow_l&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">let</span> arrow_r = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;arrow_r&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">let</span> focus_main = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;focus_main&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">let</span> list_point = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;list_point&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="comment">// 轮播图的宽度</span></span><br><span class="line">    <span class="keyword">let</span> item_width = focus.<span class="property">offsetWidth</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 鼠标经过轮播图模块，左右按钮显示，离开隐藏左右按钮。</span></span><br><span class="line">    focus.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mousemove&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        arrow_l.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span>;</span><br><span class="line">        arrow_r.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span>;</span><br><span class="line">        <span class="comment">// 停止定时器</span></span><br><span class="line">        <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">        timer = <span class="literal">null</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">    focus.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mouseout&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        arrow_l.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">        arrow_r.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">        <span class="comment">// 开启定时器</span></span><br><span class="line">        timer = <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="comment">// 手动调用right按钮的点击事件：</span></span><br><span class="line">            arrow_r.<span class="title function_">click</span>();</span><br><span class="line">        &#125;, <span class="number">1500</span>);</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 动态获取轮播图的数量，动态生成小圆点</span></span><br><span class="line">    <span class="keyword">let</span> count_focus = focus_main.<span class="property">children</span>.<span class="property">length</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; count_focus; i++) &#123;</span><br><span class="line">        <span class="comment">// 创建小圆点</span></span><br><span class="line">        <span class="keyword">let</span> list_point_elem = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line">        <span class="comment">// 设置自定义属性（小圆圈的索引号）</span></span><br><span class="line">        list_point_elem.<span class="title function_">setAttribute</span>(<span class="string">&#x27;index&#x27;</span>, i);</span><br><span class="line">        list_point.<span class="title function_">appendChild</span>(list_point_elem)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 小圆圈的排他思想 绑定点击事件</span></span><br><span class="line">        list_point_elem.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; list_point.<span class="property">children</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                list_point.<span class="property">children</span>[i].<span class="property">className</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">className</span> = <span class="string">&#x27;current&#x27;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 点击小圆圈移动图片（ul）【核心算法：小圆圈的索引号乘以图片的宽度】</span></span><br><span class="line">            <span class="keyword">let</span> index = <span class="variable language_">this</span>.<span class="title function_">getAttribute</span>(<span class="string">&#x27;index&#x27;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 解决小圆圈跟箭头点击不同步的 bug</span></span><br><span class="line">            arrow_count = index;</span><br><span class="line">            circle_control = index;</span><br><span class="line"></span><br><span class="line">            <span class="title function_">animation</span>(focus_main, -index * item_width);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 第一个小圆点默认选中</span></span><br><span class="line">    list_point.<span class="property">children</span>[<span class="number">0</span>].<span class="property">className</span> = <span class="string">&#x27;current&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 复制容器中的第一张图片，并追加到容器尾部。（为了实现后面的无缝滚动）</span></span><br><span class="line">    <span class="keyword">let</span> first_node = focus_main.<span class="property">children</span>[<span class="number">0</span>].<span class="title function_">cloneNode</span>(<span class="literal">true</span>);</span><br><span class="line">    focus_main.<span class="title function_">appendChild</span>(first_node);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 右侧按钮绑定事件</span></span><br><span class="line">    <span class="comment">// 声明一个变量 arrow_count,点击一次，自增 1,让这个变量乘以图片宽度，就是ul的滚动距离</span></span><br><span class="line">    <span class="keyword">let</span> arrow_count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 声明一个全局变量circle_control 控制小圆圈的播放</span></span><br><span class="line">    <span class="keyword">let</span> circle_control = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 节流阀</span></span><br><span class="line">    <span class="keyword">let</span> flag = <span class="literal">true</span>;</span><br><span class="line">    arrow_r.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">// 无缝滚动</span></span><br><span class="line">            <span class="keyword">if</span> (arrow_count == focus_main.<span class="property">children</span>.<span class="property">length</span> - <span class="number">1</span>) &#123;</span><br><span class="line">                focus_main.<span class="property">style</span>.<span class="property">left</span> = <span class="number">0</span>;</span><br><span class="line">                arrow_count = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            arrow_count++;</span><br><span class="line">            <span class="title function_">animation</span>(focus_main, -arrow_count * item_width, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="comment">// 回调函数中打开节流阀</span></span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 右侧按钮点击下面小圆圈模块跟随一起变化（声明一个全局变量控制小圆圈的播放）</span></span><br><span class="line">            circle_control++;</span><br><span class="line">            <span class="comment">// 判断长度</span></span><br><span class="line">            <span class="keyword">if</span> (circle_control == list_point.<span class="property">children</span>.<span class="property">length</span>) &#123;</span><br><span class="line">                circle_control = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 小圆圈排他思想</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; list_point.<span class="property">children</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                list_point.<span class="property">children</span>[i].<span class="property">className</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            list_point.<span class="property">children</span>[circle_control].<span class="property">className</span> = <span class="string">&#x27;current&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 左侧按钮绑定事件</span></span><br><span class="line"></span><br><span class="line">    arrow_l.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">// 无缝滚动</span></span><br><span class="line">            <span class="keyword">if</span> (arrow_count == <span class="number">0</span>) &#123;</span><br><span class="line">                arrow_count = focus_main.<span class="property">children</span>.<span class="property">length</span> - <span class="number">1</span>;</span><br><span class="line">                focus_main.<span class="property">style</span>.<span class="property">left</span> = -arrow_count * item_width + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            arrow_count--;</span><br><span class="line">            <span class="title function_">animation</span>(focus_main, -arrow_count * item_width, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="comment">// 回调函数中打开节流阀</span></span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 右侧按钮点击下面小圆圈模块跟随一起变化（声明一个全局变量控制小圆圈的播放）</span></span><br><span class="line">            circle_control--;</span><br><span class="line">            <span class="comment">// 判断长度</span></span><br><span class="line">            <span class="keyword">if</span> (circle_control &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                circle_control = list_point.<span class="property">children</span>.<span class="property">length</span> - <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 小圆圈排他思想</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; list_point.<span class="property">children</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                list_point.<span class="property">children</span>[i].<span class="property">className</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            list_point.<span class="property">children</span>[circle_control].<span class="property">className</span> = <span class="string">&#x27;current&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 自动播放</span></span><br><span class="line">    <span class="keyword">let</span> timer = <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 手动调用right按钮的点击事件：</span></span><br><span class="line">        arrow_r.<span class="title function_">click</span>();</span><br><span class="line">    &#125;, <span class="number">1500</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="动画函数运用筋斗云案例"><a href="#动画函数运用筋斗云案例" class="headerlink" title="动画函数运用筋斗云案例"></a>动画函数运用筋斗云案例</h4><details class="folding-tag" ><summary> 实现效果 </summary>              <div class='content'>              <p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/202208102253341.gif" alt="动画函数运用筋斗云"><br></p>              </div>            </details></p><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">600px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">46</span>, <span class="number">52</span>, <span class="number">64</span>, .<span class="number">2</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.cloud</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: -<span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">opacity</span>: .<span class="number">5</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">z-index</span>: -<span class="number">20</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.cloud</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;cloud&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/CLOUD.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>ITEM-1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>ITEM-2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>ITEM-3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>ITEM-4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>ITEM-5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>ITEM-6<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        功能描述：</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            1. 鼠标经过某个小li,筋斗云跟这到当前小li位置</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            2. 鼠标离开这个小li,筋斗云复原为原来的位置</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            3. 鼠标点击了某个小li,筋斗云就会留在点击这个小li的位置</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">               思路：</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">               点击了某个小li,就把li当前的位置存储起来，做为筋斗云的起始位置</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        */</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> nav = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;nav&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> cloud = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;cloud&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> lis = nav.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;li&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 存储li的当前的位置</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> current_position = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; lis.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">            lis[i].<span class="title function_">addEventListener</span>(<span class="string">&#x27;mouseenter&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">animation</span>(cloud, <span class="variable language_">this</span>.<span class="property">offsetLeft</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">            lis[i].<span class="title function_">addEventListener</span>(<span class="string">&#x27;mouseleave&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">animation</span>(cloud, current_position);</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">            lis[i].<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                current_position = <span class="variable language_">this</span>.<span class="property">offsetLeft</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">animation</span>(cloud, current_position);</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 动画函数</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">animation</span>(<span class="params">element, target, callback</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 防止多次调用动画的时候发生累计</span></span></span><br><span class="line"><span class="language-javascript">            <span class="built_in">clearInterval</span>(element.<span class="property">timer</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 将定时器的应用设置为元素的属性</span></span></span><br><span class="line"><span class="language-javascript">            element.<span class="property">timer</span> = <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 缓动动画核心算法：(目标值-现在的位置）/ 10 作为每次移动的距离步长</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">let</span> step = (target - element.<span class="property">offsetLeft</span>) / <span class="number">10</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 优化：取整</span></span></span><br><span class="line"><span class="language-javascript">                step = step &gt; <span class="number">0</span> ? <span class="title class_">Math</span>.<span class="title function_">ceil</span>(step) : <span class="title class_">Math</span>.<span class="title function_">floor</span>(step);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> (element.<span class="property">offsetLeft</span> == target) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="built_in">clearInterval</span>(element.<span class="property">timer</span>)</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 如果 callback 函数存在，则执行 callback 函数</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (callback) &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="title function_">callback</span>();</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 等同于上面的 if 语句</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// callback &amp;&amp; callback();</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                element.<span class="property">style</span>.<span class="property">left</span> = element.<span class="property">offsetLeft</span> + step + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;, <span class="number">16</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="移动特效"><a href="#移动特效" class="headerlink" title="移动特效"></a>移动特效</h1><h2 id="touch-触屏事件"><a href="#touch-触屏事件" class="headerlink" title="touch 触屏事件"></a>touch 触屏事件</h2><h3 id="常用触屏事件"><a href="#常用触屏事件" class="headerlink" title="常用触屏事件"></a>常用触屏事件</h3><div class="table-container"><table><thead><tr><th>触屏事件</th><th>说明</th></tr></thead><tbody><tr><td>touchstart</td><td>手指触摸到一个DOM元素时触发</td></tr><tr><td>touchmove</td><td>手指在一个DOM元素上滑动时触发</td></tr><tr><td>touchend</td><td>手指从一个DOM元素上移开时触发</td></tr></tbody></table></div><h3 id="常用触屏事件对象"><a href="#常用触屏事件对象" class="headerlink" title="常用触屏事件对象"></a>常用触屏事件对象</h3><div class="table-container"><table><thead><tr><th>事件对象</th><th>说明</th></tr></thead><tbody><tr><td>touches</td><td>正在触摸屏幕的所有手指的一个列表</td></tr><tr><td><strong>targetTouches</strong></td><td>正在触摸当前DOM元素上的手指的一个列表</td></tr><tr><td>changedTouches</td><td>手指状态发生了改变的列表，从无到有，从有到无变化</td></tr></tbody></table></div><h2 id="click-延时解决方案"><a href="#click-延时解决方案" class="headerlink" title="click 延时解决方案"></a>click 延时解决方案</h2><blockquote><p>移动端click事件会有300ms的延时，原因是移动端屏幕双击会缩放（double tap to zoom)页面</p></blockquote><p>解决方案:</p><ol><li>禁用缩放（禁用默认的双击缩放行为并且去掉300ms的点击延迟）【缺点:禁用了所有的缩放，局限性太大。】<br><code>&lt;meta name=&quot;viewport&quot;content=&quot;user-scalable=no&quot;&gt;</code></li><li>利用touch封装tap函数解决click300ms延时<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">原理：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">1.手指触摸屏幕，记录当前触摸时间</span></span><br><span class="line"><span class="comment">2.手指离开屏幕，用离开的时间减去触摸的时间</span></span><br><span class="line"><span class="comment">3.时间小于150ms,并且没有滑动过屏幕，那么我们就定义为点击 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">tap</span> (obj, callback) &#123;</span><br><span class="line">    <span class="keyword">var</span> isMove = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">// 记录当前触摸时间变量</span></span><br><span class="line">    <span class="keyword">var</span> startTime = <span class="number">0</span>;</span><br><span class="line">    obj.<span class="title function_">addEventListener</span>(<span class="string">&#x27;touchstart&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">        <span class="comment">// 手指触摸屏幕，记录当前触摸时间</span></span><br><span class="line">        startTime = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line">    &#125;);</span><br><span class="line">    obj.<span class="title function_">addEventListener</span>(<span class="string">&#x27;touchmove&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">        <span class="comment">// 判断是否有滑动</span></span><br><span class="line">        isMove = <span class="literal">true</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">    obj.<span class="title function_">addEventListener</span>(<span class="string">&#x27;touchend&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">        <span class="comment">// 手指触摸和离开时间小于150ms算点击</span></span><br><span class="line">        <span class="keyword">if</span> (!isMove &amp;&amp; (<span class="title class_">Date</span>.<span class="title function_">now</span>()-startTime) &lt; <span class="number">150</span>)&#123;</span><br><span class="line">        <span class="comment">// 执行回调函数</span></span><br><span class="line">        callback &amp;&amp; <span class="title function_">callback</span>();</span><br><span class="line">        <span class="comment">// 取反重置</span></span><br><span class="line">        isMove = <span class="literal">false</span>;</span><br><span class="line">        startTime = <span class="number">0</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><a href="https://github.com/ftlabs/fastclick">fastclick 插件</a><ol><li>将 <a href="https://github.com/ftlabs/fastclick/blob/main/lib/fastclick.js">https://github.com/ftlabs/fastclick/blob/main/lib/fastclick.js</a> 文件下载到项目并引用</li><li>实例化 FastClick<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="string">&#x27;addEventListener&#x27;</span> <span class="keyword">in</span> <span class="variable language_">document</span>) &#123;</span><br><span class="line">   <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="title class_">FastClick</span>.<span class="title function_">attach</span>(<span class="variable language_">document</span>.<span class="property">body</span>);</span><br><span class="line">   &#125;, <span class="literal">false</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li></ol><h2 id="插件推荐"><a href="#插件推荐" class="headerlink" title="插件推荐"></a>插件推荐</h2><h3 id="视频插件-zyMedia"><a href="#视频插件-zyMedia" class="headerlink" title="视频插件 zyMedia"></a>视频插件 zyMedia</h3><p><a href="https://github.com/ireaderlab/zyMedia">zyMedia</a> <a href="https://github.com/ireaderlab/zyMedia">https://github.com/ireaderlab/zyMedia</a></p><h2 id="案例-7"><a href="#案例-7" class="headerlink" title="案例"></a>案例</h2><h3 id="拖拽（移动端）"><a href="#拖拽（移动端）" class="headerlink" title="拖拽（移动端）"></a>拖拽（移动端）</h3><details class="folding-tag" ><summary> 实现效果 </summary>              <div class='content'>              <p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/拖拽_移动端.gif" alt="拖拽_移动端"><br></p>              </div>            </details></p><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: royalblue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            1. 触摸元素touchstart: 获取手指初始坐标，同时获得盒子原来的位置</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            2. 移动手指touchmove: 计算手指的滑动距离，并且移动盒子</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            3. 离开手指 touchend:</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            当前手指的坐标值： targetTouches[0] 里面的 pageX 和 pageY</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            原理：手指移动中，计算出手指移动的距离。然后用盒子原来的位置 + 手指移动的距离（手指滑动中的位置减去手指刚开始触摸的位置）</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        */</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">       <span class="comment">// 获取手指初始坐标</span></span></span><br><span class="line"><span class="language-javascript">       <span class="keyword">let</span> startX = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">       <span class="keyword">let</span> startY = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">       <span class="comment">// 盒子原来的位置</span></span></span><br><span class="line"><span class="language-javascript">       <span class="keyword">let</span> x = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">       <span class="keyword">let</span> y = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> elem = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        elem.<span class="title function_">addEventListener</span>(<span class="string">&#x27;touchstart&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            startX = e.<span class="property">targetTouches</span>[<span class="number">0</span>].<span class="property">pageX</span>;</span></span><br><span class="line"><span class="language-javascript">            startY = e.<span class="property">targetTouches</span>[<span class="number">0</span>].<span class="property">pageY</span>;</span></span><br><span class="line"><span class="language-javascript">            x = <span class="variable language_">this</span>.<span class="property">offsetLeft</span>;</span></span><br><span class="line"><span class="language-javascript">            y = <span class="variable language_">this</span>.<span class="property">offsetTop</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">        elem.<span class="title function_">addEventListener</span>(<span class="string">&#x27;touchmove&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 计算手指移动的距离</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> moveX = e.<span class="property">targetTouches</span>[<span class="number">0</span>].<span class="property">pageX</span> - startX;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> moveY = e.<span class="property">targetTouches</span>[<span class="number">0</span>].<span class="property">pageY</span> - startY;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 移动盒子</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">left</span> = x + moveX + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">top</span> = y + moveY + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 阻止默认的屏幕滚动 e.preventDefault();</span></span></span><br><span class="line"><span class="language-javascript">            e.<span class="title function_">preventDefault</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">        elem.<span class="title function_">addEventListener</span>(<span class="string">&#x27;touchend&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;&#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript 基础篇（ECMA）</title>
      <link href="/2022/07/28%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF_JavaScript_JavaScript%20%E5%9F%BA%E7%A1%80%E7%AF%87%EF%BC%88ECMA%EF%BC%89/91e69759/"/>
      <url>/2022/07/28%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF_JavaScript_JavaScript%20%E5%9F%BA%E7%A1%80%E7%AF%87%EF%BC%88ECMA%EF%BC%89/91e69759/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript-初识"><a href="#JavaScript-初识" class="headerlink" title="JavaScript 初识"></a>JavaScript 初识</h1><blockquote><p>JavaScript 是一种运行在<strong>客户端</strong>的脚本语言(脚本语言：不需要编译，运行过程中由js解释器（js引擎）逐行来进行解释并执行) 现在也可以基于Node.js技术进行服务器端编程</p></blockquote><p>JavaScript 可以做的：</p><ol><li>表单动态校验（密码强度检测）(JS产生最初的目的）</li><li>网页特效</li><li>服务端开发（Node.js)</li><li>桌面程序（Electron)</li><li>App(Cordova)</li><li>控制硬件-物联网（Ruff)</li><li>游戏开发（cocos2d-js)</li></ol><p>JavaScript 是解释型语言：</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220729143248.png" alt="20220729143248"></p><h1 id="JavaScript-基础"><a href="#JavaScript-基础" class="headerlink" title="JavaScript 基础"></a>JavaScript 基础</h1><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>有 3 个关键字可以声明变量：<strong>var、const 和 let</strong>。</p><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h3 id="简单数据类型（值类型）"><a href="#简单数据类型（值类型）" class="headerlink" title="简单数据类型（值类型）"></a>简单数据类型（值类型）</h3><ol><li>Undefined</li><li>Null</li><li>Boolean</li><li>Number</li><li>String</li><li>Symbol</li></ol><h4 id="Undefined"><a href="#Undefined" class="headerlink" title="Undefined"></a>Undefined</h4><p>声明后没有被赋值的变量会有一个默认值 undefined (如果进行相连或者相加时，注意结果。）</p><h4 id="Null"><a href="#Null" class="headerlink" title="Null"></a>Null</h4><p>简单数据类型 null 返回的是一个空的对象 object</p><p>应用场景：</p><p>如果有个变量我们以后打算存储为对象，暂时没想好放啥，可以赋值为 null</p><h4 id="Boolean"><a href="#Boolean" class="headerlink" title="Boolean"></a>Boolean</h4><p>true 的值为 1 false 的值为 0</p><h4 id="Number"><a href="#Number" class="headerlink" title="Number"></a>Number</h4><p>Number 范围：</p><ul><li>Number.MIN_VALUE</li><li>Number.MAX_VALUE</li></ul><p>数字型三个特殊值：</p><ul><li>Infinity: 代表无穷大，大于任何数值</li><li>-Infinity: 代表无穷小，小于任何数值</li><li>NaN: Not a number,代表一个非数值</li></ul><p>拓展：</p><p>isFinite();<br>isNaN();</p><h4 id="String"><a href="#String" class="headerlink" title="String"></a>String</h4><p>字符串长度:</p><p><code>length</code> 属性可以获取整个字符串的长度。(一个空格也算一个单位长度)</p><p>字符串拼接:</p><blockquote><p>拼接前会把与字符串相加的任何类型<strong>转成字符串</strong>，再拼接成一个新的字符串</p></blockquote><p><strong>字符串 + 任何类型 = 拼接之后的新字符串</strong> </p><p>经常会将字符串和<strong>变量</strong>来拼接，因为变量可以很方便地修改里面的值。</p><h4 id="Symbol"><a href="#Symbol" class="headerlink" title="Symbol"></a>Symbol</h4><h3 id="复合数据类型（引用类型）"><a href="#复合数据类型（引用类型）" class="headerlink" title="复合数据类型（引用类型）"></a>复合数据类型（引用类型）</h3><p>简单类型与复杂类型<br>堆和栈<br>简单类型的内存分配<br>复杂类型的内存分配<br>简单类型传参<br>复杂类型传参</p><h3 id="堆和栈"><a href="#堆和栈" class="headerlink" title="堆和栈"></a>堆和栈</h3><blockquote><p>JavaScript中没有堆栈的概念【此处举例纯粹便于理解】</p></blockquote><h4 id="简单数据类型"><a href="#简单数据类型" class="headerlink" title="简单数据类型"></a>简单数据类型</h4><blockquote><p>简单数据类型存放到栈里，变量直接指向存放在栈中的值。</p></blockquote><p>简单数据类型传参：传的是值</p><h4 id="复杂数据类型"><a href="#复杂数据类型" class="headerlink" title="复杂数据类型"></a>复杂数据类型</h4><blockquote><p>复杂数据类型存放到堆里，变量指向栈中的地址，地址指向堆里面的数据</p></blockquote><p>复杂数据类型传参：传的是地址</p><h3 id="typeof"><a href="#typeof" class="headerlink" title="typeof"></a>typeof</h3><p>typeof 操作符返回一个字符串，表示未经计算的操作数的类型。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typeof</span> <span class="literal">null</span> <span class="comment">// object</span></span><br></pre></td></tr></table></figure><h3 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h3><blockquote><p>数据类型转换就是把一种数据类型的变量<strong>转换成另外一种数据类型</strong>。</p></blockquote><ol><li>转换为字符串类型</li><li>转换为数字型</li><li>转换为布尔型</li></ol><h4 id="转换为字符串"><a href="#转换为字符串" class="headerlink" title="转换为字符串"></a>转换为字符串</h4><div class="table-container"><table><thead><tr><th>转换方式</th><th>说明</th><th>案例</th></tr></thead><tbody><tr><td>toString()</td><td>转成字符串</td><td>var num=1; alert(num.toString());</td></tr><tr><td>String()强制转换</td><td>转成字符串</td><td>var num = 1; alert( String ( num ) ) ;</td></tr><tr><td><strong>加号拼接字符串</strong></td><td>和字符串拼接的结果都是字符串</td><td>var num=1; alert(num+”我是字符串”);</td></tr></tbody></table></div><h4 id="转换为数字型"><a href="#转换为数字型" class="headerlink" title="转换为数字型"></a>转换为数字型</h4><div class="table-container"><table><thead><tr><th>转换方式</th><th>说明</th><th>案例</th></tr></thead><tbody><tr><td>parseInt(string)函数</td><td>将string类型转成整数数值型</td><td>parseInt(‘78’)</td></tr><tr><td>parseFloat(string)函数</td><td>将string类型转成浮点数数值型</td><td>parseFloat(‘78.21’)</td></tr><tr><td>Number()强制转换函数</td><td>将string类型转换为数值型</td><td>Number(‘12’)</td></tr><tr><td>js隐式转换（- * /）</td><td>利用算术运算隐式转换为数值型</td><td>‘12’-0</td></tr></tbody></table></div><h4 id="转换为布尔型"><a href="#转换为布尔型" class="headerlink" title="转换为布尔型"></a>转换为布尔型</h4><div class="table-container"><table><thead><tr><th>转换方式</th><th>说明</th><th>案例</th></tr></thead><tbody><tr><td>Boolean()函数</td><td>其他类型转成布尔值</td><td>Boolean(‘true’);</td></tr></tbody></table></div><p>空、否定的值会被转换为 false。如: <strong>“ “、0、NaN、null、undefined</strong> 。其余值都会被转换为 true</p><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h3><div class="table-container"><table><thead><tr><th>算数运算符</th><th>描述</th><th>举例</th></tr></thead><tbody><tr><td>+</td><td>加</td><td>10 + 20 = 30</td></tr><tr><td>-</td><td>减</td><td>10 - 20 = -10</td></tr><tr><td>*</td><td>乘</td><td>10 * 20 = 200</td></tr><tr><td>/</td><td>除</td><td>10 / 20 = 0.5</td></tr><tr><td>%</td><td>取余数（取模）</td><td>9 % 2 = 1</td></tr></tbody></table></div><p>拓展：</p><ol><li>判断一个数能够被整除<br>余数是 0 就说明这个数能被整除，这就是 <code>%</code> 取余运算符的主要用途</li><li>浮点数的精度问题<br>浮点数值的最高精度是17位小数，但在进行算术计算时其精确度远远不如整数。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> result = <span class="number">0.1</span> + <span class="number">0.2</span>; <span class="comment">//结果不是0.3,而是：0.300000000000004</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">0.07</span> * <span class="number">100</span>); <span class="comment">//结果不是7,而是：7.0000000000001</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="递增和递减运算符"><a href="#递增和递减运算符" class="headerlink" title="递增和递减运算符"></a>递增和递减运算符</h3><p>需要反复给数字变量添加或减去 1,可以使用<strong>递增（++)和递减（—)运算符</strong></p><p>注意：</p><ol><li>递增和递减运算符<strong>必须和变量配合使用</strong>。</li><li>前置自增和后置自增如果<strong>单独使用效果是一样的</strong>。</li></ol><h4 id="前置递增-递减"><a href="#前置递增-递减" class="headerlink" title="前置递增(递减)"></a>前置递增(递减)</h4><blockquote><p>先自加(减)，后返回值</p></blockquote><p>++num 前置递增，就是自加1。（类似于 num = num + 1）</p><h4 id="后置递增-递减"><a href="#后置递增-递减" class="headerlink" title="后置递增(递减)"></a>后置递增(递减)</h4><blockquote><p>先返回值，后自加(减)</p></blockquote><h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><blockquote><p>比较运算符（关系运算符）是两个数据进行比较时所使用的运算符，比较运算后，会返回一个<strong>布尔值</strong>作为比较结果。</p></blockquote><div class="table-container"><table><thead><tr><th>比较运算符</th><th>说明</th><th>举例</th><th>结果</th></tr></thead><tbody><tr><td>&lt;</td><td>小于号</td><td>1&lt;2</td><td>true</td></tr><tr><td>&gt;</td><td>大于号</td><td>1&gt;2</td><td>false</td></tr><tr><td>&gt;=</td><td>大于等于号（大于或者等于）</td><td>2&gt;=2</td><td>true</td></tr><tr><td>&lt;=</td><td>小于等于号（小于或者等于）</td><td>3&lt;=2</td><td>false</td></tr><tr><td>==</td><td>判等号（会转型）</td><td>37==’37’</td><td>true</td></tr><tr><td>!=</td><td>不等号</td><td>37!=37</td><td>false</td></tr><tr><td>=== 和 !==</td><td>全等（要求值和数据类型都一致）</td><td>37===’37’</td><td>false</td></tr></tbody></table></div><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><blockquote><p>逻辑运算符是用来进行布尔值运算的运算符，其返回值也是布尔值。<strong>经常用于多个条件的判断。</strong></p></blockquote><div class="table-container"><table><thead><tr><th>逻辑运算符</th><th>说明</th></tr></thead><tbody><tr><td>&amp;&amp;</td><td>“逻辑与”，简称“与” and</td></tr><tr><td><i>\\</i></td><td>“逻辑或”，简称“或” or</td></tr><tr><td>!</td><td>“逻辑非”，简称“非” not</td></tr></tbody></table></div><p>&amp;&amp; 逻辑与</p><p>两侧都为 true 结果才是 true 只要有一侧为 false 结果就为 false</p><p>|| 逻辑或</p><p>两侧都为 false 结果才 false 只要有一侧为 true 结果就是 true</p><p>! 逻辑非</p><p>逻辑非（!)也叫作取反符，用来取一个布尔值相反的值</p><p>拓展：</p><p>短路运算（逻辑中断）</p><blockquote><p>短路运算的原理：当有多个表达式（值）时，<strong>左边的表达式值可以确定结果时，就不再继续运算右边的表达式的值</strong></p></blockquote><ol><li>&amp;&amp; 逻辑与 短路运算<br>语法：<br><strong>表达式1 &amp;&amp; 表达式2</strong><br>如果第一个表达式的值为真，则返回 表达式 2<br>如果第一个表达式的值为假，则返回 表达式 1</li><li>|| 逻辑或 短路运算<br>语法：<br><strong>表达式1 || 表达式2</strong><br>如果第一个表达式的值为真，则返回 表达式 1<br>如果第一个表达式的值为假，则返回 表达式 2</li></ol><h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><div class="table-container"><table><thead><tr><th>赋值运算符</th><th>说明</th></tr></thead><tbody><tr><td>=</td><td>直接赋值</td></tr><tr><td>+= 和 -=</td><td>加、减一个数后在赋值</td></tr><tr><td>*= 和 /= 和 %=</td><td>乘、除、取模后在赋值</td></tr></tbody></table></div><h3 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h3><div class="table-container"><table><thead><tr><th>优先级</th><th>运算符</th><th>顺序</th></tr></thead><tbody><tr><td>1</td><td>小括号</td><td>()</td></tr><tr><td>2</td><td>一元运算符</td><td>++ — !</td></tr><tr><td>3</td><td>算数运算符</td><td>先 * / % 后 + -</td></tr><tr><td>4</td><td>关系运算符</td><td>&gt; &gt;= &lt; &lt;=</td></tr><tr><td>5</td><td>相等运算符</td><td>== != === !==</td></tr><tr><td>6</td><td>逻辑运算符</td><td>先 &amp;&amp; 后 <i>\\</i></td></tr><tr><td>7</td><td>赋值运算符</td><td>=</td></tr><tr><td>8</td><td>逗号运算符</td><td>,</td></tr></tbody></table></div><h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><blockquote><p>流程控制主要有三种结构，分别是<strong>顺序结构、分支结构和循环结构</strong></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220729175456.png" alt="20220729175456"></p><h3 id="IF-分支结构"><a href="#IF-分支结构" class="headerlink" title="IF (分支结构)"></a>IF (分支结构)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (condition1) &#123;</span><br><span class="line">   code to run <span class="keyword">if</span> condition1 is <span class="literal">true</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(condition2) &#123;</span><br><span class="line">   code to run <span class="keyword">if</span> condition2 is <span class="literal">true</span> and condition1 is <span class="literal">false</span></span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">   run some other code instead</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Switch-分支结构"><a href="#Switch-分支结构" class="headerlink" title="Switch (分支结构)"></a>Switch (分支结构)</h3><blockquote><p>主要针对变量设置一系列的特定值的选项时使用。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (expression) &#123;</span><br><span class="line">  <span class="keyword">case</span> <span class="attr">choice1</span>:</span><br><span class="line">    run <span class="variable language_">this</span> code;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">case</span> <span class="attr">choice2</span>:</span><br><span class="line">    run <span class="variable language_">this</span> code instead;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attr">default</span>:</span><br><span class="line">    actually, just run <span class="variable language_">this</span> code</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Switch 注意事项：</p><ol><li>表达式的值和 case 选项中的值是<strong>全等</strong>（必须值和数据类型一致才可以。）</li><li>如果 case 选项中没有 break 语句，会有<strong>穿透现象</strong>出现。</li><li>switch 语句进行条件判断后直接执行到程序的条件语句，效率比 if 语句更高。</li></ol><h3 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 条件表达式结果为真则返回表达式1的值。如果条件表达式结果为假则返回表达式2的值。</span></span><br><span class="line">( 条件表达式 ) ? 表达式<span class="number">1</span> : 表达式<span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h2><h3 id="for"><a href="#for" class="headerlink" title="for"></a>for</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(初始化变量;条件表达式;操作表达式）&#123;</span><br><span class="line">  <span class="comment">//循环体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>拓展：双重for循环<br>特点：外层循环循环一次，内层循环执行全部。</p><h3 id="while"><a href="#while" class="headerlink" title="while"></a>while</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (exit-condition) &#123;</span><br><span class="line">  <span class="comment">// code to run</span></span><br><span class="line"></span><br><span class="line">  final-expression</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="do-while"><a href="#do-while" class="headerlink" title="do while"></a>do while</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 先再执行循环体，再判断，do...while循环语句至少会执行一次循环体代码</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">  <span class="comment">// code to run</span></span><br><span class="line"></span><br><span class="line">  final-expression</span><br><span class="line">&#125; <span class="keyword">while</span> (exit-condition)</span><br></pre></td></tr></table></figure><h3 id="break-continue"><a href="#break-continue" class="headerlink" title="break continue"></a>break continue</h3><p>break:<br>立即跳出整个循环（循环结束）</p><p>continue:<br>跳过当前循环继续执行剩余的循环</p><h3 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h3><ol><li>断点调试：<br>控制台中点击：sources—&gt;找到需要调试的文件—&gt;在程序的某一行设置断点。<br>Watch: 监视：通过watch可以监视变量的值的变化。</li></ol><h1 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h1><blockquote><p>JavaScript 作用域: 就是代码名字（变量）在某个范围内起作用和效果。目的是为了提高程序的可靠性，减少命名从冲突。</p></blockquote><h2 id="全局和局部-函数-作用域"><a href="#全局和局部-函数-作用域" class="headerlink" title="全局和局部(函数)作用域"></a>全局和局部(函数)作用域</h2><h2 id="变量作用域"><a href="#变量作用域" class="headerlink" title="变量作用域"></a>变量作用域</h2><p>变量分类：</p><ol><li>全局变量<ol><li>在全局作用域下的变量</li><li>在函数内部没有声明直接赋值的变量</li></ol></li><li>局部变量<ol><li>在局部作用域（函数内部）的变量</li><li>函数的形参也可以看做是局部变量</li></ol></li></ol><p>补充：</p><ol><li>全局变量：只有浏览器关闭的时候才会销毁，比较占内存资源</li><li>局部变量：当我们程序执行完毕就会销毁，比较节约内存资源</li></ol><h2 id="块级作用域"><a href="#块级作用域" class="headerlink" title="块级作用域"></a>块级作用域</h2><h2 id="作用域链"><a href="#作用域链" class="headerlink" title="作用域链"></a>作用域链</h2><p>根据在内部函数可以访问外部函数变量的这种机制，用链式查找决定哪些数据能内部函数访问，就称作作用域链。（就近原则）</p><h1 id="JavaScript-预解析"><a href="#JavaScript-预解析" class="headerlink" title="JavaScript 预解析"></a>JavaScript 预解析</h1><p>JavaScript 引擎运行分为两步：</p><ol><li>预解析</li><li>代码执行</li></ol><h2 id="预解析"><a href="#预解析" class="headerlink" title="预解析"></a>预解析</h2><blockquote><p>JavaScript 引擎会把里面所有的 <code>var(变量提升)</code> 和 <code>function(函数提升)</code> 提升到当前作用域的最前面</p></blockquote><h3 id="变量提升"><a href="#变量提升" class="headerlink" title="变量提升"></a>变量提升</h3><p>变量提升就是把所有的<strong>变量声明</strong>提升到当前作用域的最前面，<strong>不提升赋值操作</strong>。</p><h3 id="函数提升"><a href="#函数提升" class="headerlink" title="函数提升"></a>函数提升</h3><p>函数提升就是把所有的<strong>函数声明</strong>提升到当前作用域的最前面，<strong>不调用函数</strong>。</p><h2 id="代码执行"><a href="#代码执行" class="headerlink" title="代码执行"></a>代码执行</h2><p>从上往下执行顺序执行</p><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">f1</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(c);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">f1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">    这里 b 和 c 直接赋值没有 var 声明当全局变量看</span></span><br><span class="line"><span class="comment">    注意此处与集体声明的区别，集体声明是 逗号 隔开 </span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">var</span> a = b = c = <span class="number">9</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(b);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 输出结果：99999 a is not defined</span></span><br></pre></td></tr></table></figure><h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><blockquote><p>数组可以把一组相关的<strong>任意类型数据</strong>一起存放，并提供方便的访问（获取）方式。</p></blockquote><h2 id="基操"><a href="#基操" class="headerlink" title="基操"></a>基操</h2><h3 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h3><p>数组字面量创建：let arr = [];</p><h3 id="访问数组元素"><a href="#访问数组元素" class="headerlink" title="访问数组元素"></a>访问数组元素</h3><p>数组名 [索引号]<br>补充：</p><ol><li>索引从 0 开始</li><li>索引越界输出 undefinde</li></ol><h3 id="遍历数组"><a href="#遍历数组" class="headerlink" title="遍历数组"></a>遍历数组</h3><p>使用for循环 + 数组名 [索引号] 的方式遍历</p><h3 id="数组长度"><a href="#数组长度" class="headerlink" title="数组长度"></a>数组长度</h3><p>数组名.<strong>length</strong><br>补充：</p><ol><li>length 属性是可读写的。<ol><li>可以通过修改 length 长度来实现<strong>数组扩容</strong></li><li>数组扩容默认值就是 undefined</li></ol></li></ol><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><blockquote><p>函数就是封装了一段可以被重复执行调用的代码块,让大量代码重复使用。</p></blockquote><h2 id="基操-1"><a href="#基操-1" class="headerlink" title="基操"></a>基操</h2><h3 id="先声明后调用"><a href="#先声明后调用" class="headerlink" title="先声明后调用"></a>先声明后调用</h3><h3 id="函数参数"><a href="#函数参数" class="headerlink" title="函数参数"></a>函数参数</h3><div class="table-container"><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>形参</td><td>形式上的参数函数。定义的时候传递的参数当前并不知道是什么</td></tr><tr><td>实参</td><td>实际上的参数函数。调用的时候传递的参数实参是传递给形参的</td></tr></tbody></table></div><p>函数形参和实参个数不匹配：</p><div class="table-container"><table><thead><tr><th>参数个数</th><th>说明</th></tr></thead><tbody><tr><td>实参个等于形参个数</td><td>输出正确结果</td></tr><tr><td>实参个数多于形参个数</td><td>实参多余部分将被忽略</td></tr><tr><td>实参个数小于形参个数</td><td>形参默认值为 undefined</td></tr></tbody></table></div><h3 id="函数返回值"><a href="#函数返回值" class="headerlink" title="函数返回值"></a>函数返回值</h3><blockquote><p>希望函数将值返回给调用者，使用 return 语句可以实现。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// return 将结果 返回给函数的调用者</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> 函数名() &#123;</span><br><span class="line">  <span class="keyword">return</span> 返回值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>补充：</p><ol><li>return 语句之后的代码不被执行。</li><li>return 只能返回一个值。如果用逗号隔开多个值，<strong>以最后一个为准</strong>。</li><li>函数没有 return 返回 undefined 。</li></ol><h3 id="arguments"><a href="#arguments" class="headerlink" title="arguments"></a>arguments</h3><blockquote><p>当不确定有多少个参数传递的时候，可以用arguments来获取。在JavaScript中，arguments实际上它是当前函数的一个内置对象。所有函数都内置了一个arguments对象，<strong>arguments对象中存储了传递的所有实参</strong>。</p></blockquote><p>arguments 展示形式是一个<strong>伪数组</strong>，因此可以进行遍历。伪数组具有以下特点：</p><ol><li>具有 length 属性</li><li>按索引方式储存数据</li><li>不具有数组的 push ,pop 等方法</li></ol><h2 id="立即执行函数"><a href="#立即执行函数" class="headerlink" title="立即执行函数"></a>立即执行函数</h2><blockquote><p>主要作用：创建一个<strong>独立的作用域</strong>。避免了命名冲突问题</p></blockquote><p>写法：</p><ol><li><code>(function()&#123;&#125;)()</code></li><li><code>(function()&#123;&#125;())</code></li></ol><h1 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h1><blockquote><p>对象是一个具体的事物。由一组无序的相关属性和方法的集合组成。</p></blockquote><h2 id="基操-2"><a href="#基操-2" class="headerlink" title="基操"></a>基操</h2><h3 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h3><ol><li>字面量创建对象<br>let obj = {};</li><li>new Object创建对象<br>let obj = new Object();</li><li>构造函数创建对象<br>构造函数主要用来初始化对象，就是把对象里面一些<strong>公共的属性和方法抽象出来封装到函数里面。</strong><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 声明构造函数（函数名首字母一般大写）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> 构造函数名() &#123;</span><br><span class="line">  <span class="variable language_">this</span>.属性 = 值;</span><br><span class="line">  <span class="variable language_">this</span>.方法 = <span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用构造函数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> 构造函数名();</span><br><span class="line"></span><br><span class="line"><span class="comment">// new 关键字执行原理</span></span><br><span class="line"></span><br><span class="line"><span class="number">1.</span> <span class="keyword">new</span> 构造函数在内存中创建了一个空的对象</span><br><span class="line"><span class="number">2.</span> <span class="variable language_">this</span> 就会指向刚才创建的空对象</span><br><span class="line"><span class="number">3.</span> 执行构造函数里面的代码，给这个空对象添加属性和方法</span><br><span class="line"><span class="number">4.</span> 返回这个对象（不需要写 <span class="keyword">return</span> 关键字）</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><h3 id="调用对象"><a href="#调用对象" class="headerlink" title="调用对象"></a>调用对象</h3><p>调用对象属性：</p><ol><li><code>对象名.属性名</code></li><li><code>对象名[&#39;属性名&#39;]</code></li></ol><p>调用对象方法：</p><ol><li><code>对象名.方法名();</code></li></ol><p>区别总结:</p><ol><li>变量：单独声明赋值，单独存在</li><li>对象属性：对象里面的变量称为属性</li><li>函数：单独存在的，通过<code>函数名()</code>的方式就可以调用</li><li>对象方法：对象里面的函数称为方法，方法不需要声明，使用<code>对象名.方法名()</code>的方式就可以调用</li></ol><h3 id="遍历对象"><a href="#遍历对象" class="headerlink" title="遍历对象"></a>遍历对象</h3><h4 id="for…in"><a href="#for…in" class="headerlink" title="for…in"></a>for…in</h4><blockquote><p><code>for...in 语句</code> 用于对数组或者对象的属性进行循环操作。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (variable <span class="keyword">in</span> object) &#123;</span><br><span class="line">  statement</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="内置对象"><a href="#内置对象" class="headerlink" title="内置对象"></a>内置对象</h2><blockquote><p>JavaScript中的对象分为3种：自定义对象、内置对象、浏览器对象。内置对象就是指JS语言自带的一些对象，这些对象供开发者使用，并提供了一些常用的或最基本而必要的功能（属性和方法）。</p></blockquote><p>学会查文档：<a href="https://developer.mozilla.org/zh-CN/">https://developer.mozilla.org/zh-CN/</a></p><h3 id="Math"><a href="#Math" class="headerlink" title="Math"></a>Math</h3><h4 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h4><ul><li>Math.round(x)<ul><li>注意：其他数字都是四舍五入，但是小数部分为.5时它往大了取。如：Math.round(-1.5)); //这个结果是 -1</li></ul></li><li>Math.random()</li></ul><h3 id="Date"><a href="#Date" class="headerlink" title="Date"></a>Date</h3><blockquote><p>Date 是一个构造函数，需要实例化后才能使用</p></blockquote><h4 id="方法-1"><a href="#方法-1" class="headerlink" title="方法"></a>方法</h4><div class="table-container"><table><thead><tr><th>Date方法</th><th>说明</th></tr></thead><tbody><tr><td>getFullYear()</td><td>获取当年</td></tr><tr><td>getMonth()</td><td>获取当月（0-11)</td></tr><tr><td>getDate()</td><td>获取当天日期</td></tr><tr><td>getDay()</td><td>获取星期几（周日0到周六6)</td></tr><tr><td>getHours()</td><td>获取当前小时</td></tr><tr><td>getMinutes()</td><td>获取当前分钟</td></tr><tr><td>getSeconds()</td><td>获取当前秒钟</td></tr></tbody></table></div><h4 id="时间戳"><a href="#时间戳" class="headerlink" title="时间戳"></a>时间戳</h4><blockquote><p>时间戳是基于1970年1月1日（世界标准时间）起的毫秒数</p></blockquote><p>四种获取方式：</p><ol><li>+new Date();</li><li>Date.now();</li><li>new Date().valueOf();</li><li>new Date().getTime();</li></ol><p>应用：</p><ol><li>加密（时间戳不会重复）</li><li>处理不同时区的时间</li></ol><h4 id="案例-1"><a href="#案例-1" class="headerlink" title="案例"></a>案例</h4><p>封装日期函数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 封装一个函数返回当前的时分秒格式 08:08:08</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getDate</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">    <span class="keyword">let</span> h = date.<span class="title function_">getHours</span>();</span><br><span class="line">    h = h &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> + h : h;</span><br><span class="line">    <span class="keyword">let</span> m = date.<span class="title function_">getMinutes</span>();</span><br><span class="line">    <span class="keyword">let</span> s = date.<span class="title function_">getSeconds</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;h&#125;</span>:<span class="subst">$&#123;m&#125;</span>:<span class="subst">$&#123;s&#125;</span>`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>倒计时：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">1. 核心算法：输入的时间减去现在的时间就是剩余的时间，即倒计时，但是不能拿着时分秒相减，比如05分减去25分，结果会是负数的。</span></span><br><span class="line"><span class="comment">2. 用时间戳来做。用户输入时间总的毫秒数减去现在时间的总的毫秒数，得到的就是剩余时间的毫秒数。</span></span><br><span class="line"><span class="comment">3. 把剩余时间总的毫秒数转换为天、时、分、秒（时间戳转换为时分秒）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">转换公式如下：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    d = parseInt(总秒数/60/60/24); //计算天数</span></span><br><span class="line"><span class="comment">    h = parseInt(总秒数/60/60%24); //计算小时</span></span><br><span class="line"><span class="comment">    m = parseInt(总秒数/60%60); //计算分数</span></span><br><span class="line"><span class="comment">    s = parseInt(总秒数%60); //计算当前秒数 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">countDown</span>(<span class="params">time</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> nowTime = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line">    <span class="keyword">let</span> inputTime = <span class="keyword">new</span> <span class="title class_">Date</span>(time);</span><br><span class="line">    <span class="comment">// times：剩余时间总秒数</span></span><br><span class="line">    <span class="keyword">let</span> times = (inputTime - nowTime) / <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">let</span> d = <span class="built_in">parseInt</span>(times / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span>);</span><br><span class="line">    d = d &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> + d : d;</span><br><span class="line">    <span class="keyword">let</span> h = <span class="built_in">parseInt</span>(times / <span class="number">60</span> / <span class="number">60</span> % <span class="number">24</span>);</span><br><span class="line">    h = h &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> + h : h;</span><br><span class="line">    <span class="keyword">let</span> m = <span class="built_in">parseInt</span>(times / <span class="number">60</span> % <span class="number">60</span>);</span><br><span class="line">    m = m &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> + m : m;</span><br><span class="line">    <span class="keyword">let</span> s = <span class="built_in">parseInt</span>(times % <span class="number">60</span>);</span><br><span class="line">    s = s &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> + s : s;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;d&#125;</span>天<span class="subst">$&#123;h&#125;</span>时<span class="subst">$&#123;m&#125;</span>分<span class="subst">$&#123;s&#125;</span>秒`</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">countDown</span>(<span class="string">&#x27;2022-08-02 1:00:00&#x27;</span>));</span><br></pre></td></tr></table></figure><h3 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h3><h4 id="方法-2"><a href="#方法-2" class="headerlink" title="方法"></a>方法</h4><div class="table-container"><table><thead><tr><th>常用方法</th><th>说明</th><th>返回值</th></tr></thead><tbody><tr><td>push(参数1….)</td><td>未尾添加一个或多个元素，会修改原数组</td><td>并返回新的长度</td></tr><tr><td>pop()</td><td>删除数组最后一个元素，数组长度减1，无参数、会修改原数组</td><td>返回它删除的元素的值</td></tr><tr><td>unshift(参数1…)</td><td>向数组的开头添加一个或更多元素，会修改原数组</td><td>并返回新的长度</td></tr><tr><td>shift()</td><td>删除数组的第一个元素，数组长度减1，无参数、会修改原数组</td><td>并返回第一个元素的值</td></tr><tr><td>sort([compareFunction])</td><td>对数组的元素进行排序(默认比较元素的 UTF-16 代码单元值)</td><td>排序后的数组</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>索引方法</th><th>说明</th><th>返回值</th></tr></thead><tbody><tr><td>indexOf()</td><td>数组中查找第一个给定元素的索引</td><td>存在返回索引号 不存在，则返回-1</td></tr><tr><td>lastIndexOf()</td><td>在数组中的最后一个给定元素的索引</td><td>存在返回索引号 不存在，则返回-1</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>转字符串方法</th><th>说明</th><th>返回值</th></tr></thead><tbody><tr><td>toString()</td><td>把数组转换成字符串，逗号分隔每一项</td><td>返回一个字符串</td></tr><tr><td>join(‘分隔符’)</td><td>把数组转换成字符串，分隔符分隔每一项</td><td>返回一个字符串</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>操作数组</th><th>说明</th><th>返回值</th></tr></thead><tbody><tr><td>concat()</td><td>连接两个或多个数组，不影响原数组</td><td>返回一个新的数组</td></tr><tr><td>slice()</td><td>数组截取slice(begin,end) 【包括 begin，不包括end】</td><td>返回含有被提取元素的新数组</td></tr><tr><td>splice()</td><td>数组删除splice(第几个开始，要删除个数）</td><td>返回被删除项目的新数组，会修改原数组</td></tr></tbody></table></div><h4 id="案例-2"><a href="#案例-2" class="headerlink" title="案例"></a>案例</h4><p>instanceof 检测是否为数组：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr <span class="keyword">instanceof</span> <span class="title class_">Array</span>); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><p>数组去重：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">目标：把旧数组里面不重复的元素选取出来放到新数组中，重复的元素只保留一个，放到新数组中去重。</span></span><br><span class="line"><span class="comment">核心算法：遍历旧数组，然后拿着旧数组元素去查询新数组，如果该元素在新数组里面没有出现过，我们就添加，否则不添加。 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">unique</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> newArr = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (newArr.<span class="title function_">indexOf</span>(arr[i]) === -<span class="number">1</span>) &#123;</span><br><span class="line">            newArr.<span class="title function_">push</span>(arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> newArr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> res = <span class="title function_">unique</span>([<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>]);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br></pre></td></tr></table></figure><h2 id="基本包装类型"><a href="#基本包装类型" class="headerlink" title="基本包装类型"></a>基本包装类型</h2><blockquote><p>String、Number、Boolean。基本包装类型就是把简单数据类型包装成为复杂数据类型，这样<strong>基本数据类型就有了属性和方法</strong>。</p></blockquote><p>包装执行过程：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.生成临时变量，把简单类型包装为复杂数据类型</span></span><br><span class="line"><span class="keyword">var</span> temp = <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&#x27;andy&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.赋值给我们声明的字符变量</span></span><br><span class="line">str = temp;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.销毁临时变量</span></span><br><span class="line">temp = <span class="literal">null</span>;</span><br></pre></td></tr></table></figure><h3 id="String-1"><a href="#String-1" class="headerlink" title="String"></a>String</h3><blockquote><p>字符串的不可变: 指的是里面的值不可变，强行赋值可以改变内容，但其实是地址引用变了，指向内存中新开辟了一个内存，原来的引用还存在于内存中。【所以不要大量的拼接字符串】</p></blockquote><h4 id="方法-3"><a href="#方法-3" class="headerlink" title="方法"></a>方法</h4><blockquote><p>字符串所有的方法，<strong>都不会修改字符串本身</strong>（字符串是不可变的），操作完成会返回一个新的字符串。</p></blockquote><div class="table-container"><table><thead><tr><th>索引方法</th><th>说明</th><th>返回值</th></tr></thead><tbody><tr><td>indexOf()</td><td>字符串中查找第一个给定元素的索引</td><td>存在返回索引号 不存在，则返回-1</td></tr><tr><td>lastIndexOf()</td><td>字符串中的最后一个给定元素的索引</td><td>存在返回索引号 不存在，则返回-1</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>根据位置返回字符方法</th><th>说明</th></tr></thead><tbody><tr><td>charAt(index)</td><td>返回指定位置的字符（index字符串的索引号）</td></tr><tr><td>str[index]</td><td>获取指定位置处字符（【IE8+】和charAt等效）</td></tr><tr><td>charCodeAt(index)</td><td>获取指定位置处字符的ASCII码（index索引号）</td></tr></tbody></table></div><p>charCodeAt 应用：判断用户按下了哪个键</p><div class="table-container"><table><thead><tr><th>操作字符串方法</th><th>说明</th></tr></thead><tbody><tr><td>concat(str1,str2,str3…)</td><td>concat()方法用于连接两个或多个字符串。拼接字符串，等效于 +</td></tr><tr><td>slice(start,end)</td><td>从start位置开始，截取到end位置 （不包括end）</td></tr><tr><td>substring(start, end)</td><td>从start位置开始，截取到end位置 （不包括end）【不接受负值】</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>其他方法</th><th>说明</th></tr></thead><tbody><tr><td>replace(‘被替换的字符’,’替换为的字符’)</td><td>替换字符串</td></tr><tr><td>split(‘分隔符’)</td><td>字符串转为数组</td></tr><tr><td>toUpperCase()</td><td>转换大写</td></tr><tr><td>toLowerCase()</td><td>转换小写</td></tr></tbody></table></div><h4 id="案例-3"><a href="#案例-3" class="headerlink" title="案例"></a>案例</h4><p>查找字符在字符串中出现的位置及总次数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">核心算法：先查找第一个字符出现的位置</span></span><br><span class="line"><span class="comment">然后只要 indexOf 返回的结果不是 -1就继续往后查找</span></span><br><span class="line"><span class="comment">因为 indexOf 只能查找到第一个，所以后面的查找，利用第二个参数，当前索引加 1,从而继续查找 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;abcdefgabcdefga&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> index = str.<span class="title function_">indexOf</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (index !== -<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(index);</span><br><span class="line">    count++;</span><br><span class="line">    index = str.<span class="title function_">indexOf</span>(<span class="string">&#x27;a&#x27;</span>, index + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;出现的次数：&#x27;</span> + count);</span><br></pre></td></tr></table></figure><p>统计字符串中出现次数最多的字符及次数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">核心算法：利用charAt() 遍历这个字符串</span></span><br><span class="line"><span class="comment">把每个字符都存储给对象，如果对象没有该属性，就为1,如果存在了就 +1</span></span><br><span class="line"><span class="comment">遍历对象，得到最大值和该字符 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;abcabca&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> obj = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; str.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">let</span> charts = str.<span class="title function_">charAt</span>(i);</span><br><span class="line">    <span class="keyword">if</span>(obj[charts]) &#123;</span><br><span class="line">        obj[charts] ++;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        obj[charts] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> max = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> ch = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> k <span class="keyword">in</span> obj) &#123;</span><br><span class="line">    <span class="keyword">if</span>(obj[k] &gt; max)&#123;</span><br><span class="line">        max = obj[k];</span><br><span class="line">        ch = k;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;出现最多的字符是：&#x27;</span> + ch + <span class="string">&#x27;出现了&#x27;</span> +max+ <span class="string">&#x27;次。&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="Number-1"><a href="#Number-1" class="headerlink" title="Number"></a>Number</h3><h3 id="Boolean-1"><a href="#Boolean-1" class="headerlink" title="Boolean"></a>Boolean</h3>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>摘抄</title>
      <link href="/2022/07/27%E5%8F%91%E5%B1%95/%E5%8F%91%E5%B1%95_%E9%98%85%E8%AF%BB_%E6%91%98%E6%8A%84/639b053d/"/>
      <url>/2022/07/27%E5%8F%91%E5%B1%95/%E5%8F%91%E5%B1%95_%E9%98%85%E8%AF%BB_%E6%91%98%E6%8A%84/639b053d/</url>
      
        <content type="html"><![CDATA[<h1 id="经典-🎁"><a href="#经典-🎁" class="headerlink" title="经典 🎁"></a>经典 🎁</h1>  <div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>忽如一夜春风来，千树万树梨花开。</p>            </div> <div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>梧桐花开，凤凰自来。</p>            </div> <div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>“人一能之，己百之，人十能之，己千之，果能此道矣，虽愚必明，虽柔必强。” —- 中庸</p>            </div> <div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>概念本身没有意义，概念描述的事物才有意义。</p>            </div> <div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>有一个夜晚我烧毁了所有的记忆，从此我的梦就透明了；有一个早晨我扔掉了所有的昨天，从此我的脚步就轻盈了。—— 泰戈尔</p>            </div> <div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>不与夏虫语冰。</p>            </div> <div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>我们离开世界的时候，这个世界仍然像我们来到这个世界时一样愚蠢和丑恶，没有任何变化。</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>如果没有对旧事物进行大量练习，你不太可能发现新事物。</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>现实是一堵墙，你的目光要越过那堵墙，看到更远的地方。</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>万丈高楼平地起，千里之行始于足下（千里远的路程，是从脚下迈第一步开始的；做事的成功在于由小到大、由少到多的逐步积累。），千里长提溃于蚁穴（对细微之事疏忽大意，往往会酿成大灾祸，造成严重损失。）。</p>            </div> <h1 id="警醒-🎋"><a href="#警醒-🎋" class="headerlink" title="警醒 🎋"></a>警醒 🎋</h1><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>人生刚好够实现自己的一个梦想，前提是你必须从一开始，就把所有精力专注于此。</p>            </div><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>不带有目的性的学习，都是耍流氓。</p>            </div><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>差距太大的两个人，是不可能走到一起的，没有人会一直陪你去成长。</p>            </div><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>把“为什么受伤的总是我”，变成“我能从这件事上学到什么”。</p>            </div><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>这个世界不会在乎你的自尊，你必须先有所成就，然后再去强调自己的感受。</p>            </div><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>不算而算，才是真正的算。</p>            </div><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>那些看似波澜不惊的日复一日，总有一天会让你看到坚持的意义。</p>            </div><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>如果你不够优秀，遇见也不配拥有。</p>            </div><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>接受自己的普通，然后拼尽全力去与众不同，生活给你压力你就还它奇迹，追逐光，成为光，散发光，一切都会慢慢变好。</p>            </div><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>你不会让别人偷走你的财产，但你却让别人偷走你的时间。</p>            </div><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>喜欢同时研究很多事情，一旦对某件事情产生了兴趣，就会放下手头的工作，推说稍后再回来接着做，可惜人生并没有为他留出”回过头再做”的时间。</p>            </div><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>人生也没有为你我留出这些时间。如果你听任时间浪费在各种琐碎的用途，那你就永久失去了这些时间。只有当你能够保护好自己的时间，专注于一个方向，人生才不会那么短暂。</p>            </div><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>笔记和记忆力远比我们认为的重要得多。它们不仅可以提高使用效率，还有助于将新知识集成进入我们现有的知识储备。</p>            </div><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>努力学习你最感兴趣的东西：如果可以选择，一定要学习自己喜欢的东西，否则你不仅很可能失败，也许还会抑郁。</p>            </div><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>生活本来就充满苦难，期望低一些，就不容易失望。</p>            </div><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>不管心情多糟糕，都必须要求自己做到三点：吃得下，睡得着，笑得出来。</p>            </div><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>你不努力，一路听到的都是别人的好消息。</p>            </div><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>永远保持清醒 别越陷越深 专注自己的生活和事业 好的爱情很重要但是前途比爱情更重要。</p>            </div><h1 id="嬷嬷-🍤"><a href="#嬷嬷-🍤" class="headerlink" title="嬷嬷 🍤"></a>嬷嬷 🍤</h1><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>女人不慧，屈人之威。 女人不贤，蓄意轰拳。 女人不淑，强手裂颅。 女人不死，叹为观止。</p>            </div><h1 id="自虐-🥇"><a href="#自虐-🥇" class="headerlink" title="自虐 🥇"></a>自虐 🥇</h1><div class='checkbox gray checked'><input type="checkbox" checked="checked"/>            <p>当现实予你一击，幽默就是你的盔甲。</p>            </div><div class='checkbox gray checked'><input type="checkbox" checked="checked"/>            <p>不要轻易依赖一个人，那会成为你的习惯。当分别来临时，你失去的不是某个人，而是你的精神支柱。独立，会让你更坦然。</p>            </div><div class='checkbox gray checked'><input type="checkbox" checked="checked"/>            <p>我以为我二十多岁，会去看大山大海，落日余晖，没想到，到了曾经向往的年龄，我还在找自己。</p>            </div><h1 id="小黄-🎄"><a href="#小黄-🎄" class="headerlink" title="小黄 🎄"></a>小黄 🎄</h1><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>难道我监禁你？还是你霸占我？你闯进我的心，关上门又扭上锁。丢了锁上的钥匙，是我，也许你自己。从此无法开门，永远，你关在我心里。</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>你嘴凑上来，我对你嘴说，这话就一直钻到你心里，省得走远路，拐了弯从耳朵里进去。</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>智者不入爱河…</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>星星是银河递给月亮的情书，你是世界赠与我的恩赐。</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>我的酒量大概就是：八瓶香槟、七瓶伏特加、六瓶野格、五瓶威士忌、四瓶杰克丹尼、三瓶朗姆、两瓶生命之水，或者你的一声：宝贝。</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>避而不答也是一种回答。</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>相遇不一定有结果，但一定有意义。</p>            </div>]]></content>
      
      
      <categories>
          
          <category> 发展 </category>
          
          <category> 阅读 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>220711</title>
      <link href="/2022/07/11%E9%9A%8F%E7%AC%94/220711/651de0df/"/>
      <url>/2022/07/11%E9%9A%8F%E7%AC%94/220711/651de0df/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, this password doesn't look right. Please try again." data-whm="Sorry, this article cannot be verified, but you can still see the decrypted content.">  <script id="hbeData" type="hbeData" data-hmacdigest="bdf951e6aa800debc618663d2fe43f05c2afd74dd7d91f3faea8ad2bbae05163"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-surge">      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="Enter Password.">Enter Password.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
          <category> Diary </category>
          
          <category> 小黄 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flex响应式布局</title>
      <link href="/2022/07/07%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF_CSS_Flex%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B8%83%E5%B1%80/976189ad/"/>
      <url>/2022/07/07%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF_CSS_Flex%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B8%83%E5%B1%80/976189ad/</url>
      
        <content type="html"><![CDATA[<h1 id="Flex"><a href="#Flex" class="headerlink" title="Flex"></a>Flex</h1><blockquote><p>flex 是 flexible Box的缩写，意为“弹性布局”，用来为盒状模型提供最大的灵活性，任何一个容器都可以指定为flex布局。</p></blockquote><p>注意：当我们<strong>为父盒子设为flex布局以后，子元素的 float、clear 和 vertical-align 属性将失效。</strong></p><p>布局原理：</p><p>采用Flex布局的元素，称为Flex容器（flex container),简称”容器”。它的所有子元素自动成为容器成员，称为Flex项目（flexitem),简称“项目”。（<strong>就是通过给父盒子添加flex属性，来控制子盒子的位置和排列方式。</strong>）</p><h1 id="flex布局父项常见属性"><a href="#flex布局父项常见属性" class="headerlink" title="flex布局父项常见属性"></a>flex布局父项常见属性</h1><div class="table-container"><table><thead><tr><th>父项属性</th><th>Description</th></tr></thead><tbody><tr><td>flex-direction</td><td>设置主轴的方向</td></tr><tr><td>justify-content</td><td>设置主轴上的子元素排列方式</td></tr><tr><td>flex-wrap</td><td>设置子元素是否换行</td></tr><tr><td>align-items</td><td>设置侧轴上的子元素排列方式（单行）</td></tr><tr><td>align-content</td><td>设置侧轴上的子元素的排列方式（多行）</td></tr><tr><td>flex-flow</td><td>复合属性，相当于同时设置了 flex-direction 和 flex-wrap</td></tr></tbody></table></div><p>主轴与侧轴的概念：（在flex布局中，是分为主轴和侧轴两个方向。（同样的叫法有：行和列、x轴和y轴））</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220707223821.png" alt="20220707223821"></p><p><strong>flex-direction</strong> 设置<strong>主轴</strong>的方向 </p><blockquote><p>注意：主轴和侧轴是会变化的，就看flex-direction设置谁为主轴，剩下的就是侧轴。而我们的子元素是跟着主轴来排列的。</p></blockquote><div class="table-container"><table><thead><tr><th>flex-direction 属性值</th><th>Description</th></tr></thead><tbody><tr><td>row</td><td>从左到右(默认值)</td></tr><tr><td>row-reverse</td><td>从右到左</td></tr><tr><td>column</td><td>从上到下</td></tr><tr><td>column-reverse</td><td>从下到上</td></tr></tbody></table></div><p><strong>justify-content</strong> 设置<strong>主轴上的子元素</strong>排列方式（<strong>先确定好主轴</strong>）</p><div class="table-container"><table><thead><tr><th>justify-content 属性值</th><th>Description</th></tr></thead><tbody><tr><td>flex-start</td><td>从头部开始排列(默认值)</td></tr><tr><td>flex-end</td><td>从尾部开始排列</td></tr><tr><td>center</td><td>在主轴居中对齐（如果主轴是x轴则水平居中）</td></tr><tr><td>space-evenly</td><td>均匀排列每个元素，元素之间的间隔相等</td></tr><tr><td>space-around</td><td>平分剩余空间</td></tr><tr><td>space-between</td><td>先两边贴边再平分剩余空间（重要）</td></tr></tbody></table></div><p><strong>flex-wrap</strong> 设置<strong>子元素是否换行</strong> </p><blockquote><p>默认情况下，项目都排在一条线（又称”轴线”）上。flex-wrap属性定义，<strong>flex布局中默认是不换行的。</strong></p></blockquote><div class="table-container"><table><thead><tr><th>flex-wrap 属性值</th><th>Description</th></tr></thead><tbody><tr><td>nowrap</td><td>不换行（默认值）</td></tr><tr><td>wrap</td><td>换行</td></tr></tbody></table></div><p><strong>align-items</strong> 设置<strong>侧轴</strong>上的子元素排列方式（<strong>单行</strong>）</p><div class="table-container"><table><thead><tr><th>align-items 属性值</th><th>Description</th></tr></thead><tbody><tr><td>flex-start</td><td>从上到下（默认值）</td></tr><tr><td>flex-end</td><td>从下到上</td></tr><tr><td>center</td><td>挤在一起居中（垂直居中）</td></tr><tr><td>stretch</td><td>拉伸</td></tr></tbody></table></div><p><strong>align-content</strong> 设置<strong>侧轴</strong>上的子元素的排列方式（<strong>多行</strong>）</p><div class="table-container"><table><thead><tr><th>align-content 属性值</th><th>Description</th></tr></thead><tbody><tr><td>flex-start</td><td>在侧轴的头部开始排列（默认值）</td></tr><tr><td>flex-end</td><td>在侧轴的尾部开始排列</td></tr><tr><td>center</td><td>在侧轴中间显示</td></tr><tr><td>space-around</td><td>子项在侧轴平分剩余空间</td></tr><tr><td>space-between</td><td>子项在侧轴先分布在两头，再平分剩余空间</td></tr><tr><td>stretch</td><td>设置子项元素高度平分父元素高度</td></tr></tbody></table></div><p>总结：单行找 align-items 多行找 align-content</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220707233102.png" alt="20220707233102"></p><p><strong>flex-flow</strong> 属性是 flex-direction 和 flex-wrap 属性的复合属性</p><h1 id="flex布局子项常见属性"><a href="#flex布局子项常见属性" class="headerlink" title="flex布局子项常见属性"></a>flex布局子项常见属性</h1><div class="table-container"><table><thead><tr><th>子项属性</th><th>Description</th></tr></thead><tbody><tr><td>flex</td><td>子项目占的份数</td></tr><tr><td>align-self</td><td>控制子项自己在侧轴的排列方式</td></tr><tr><td>order</td><td>定义子项的排列顺序（前后顺序）</td></tr></tbody></table></div><p><strong>flex</strong> 定义子项目占的份数</p><blockquote><p>flex属性定义子项目分配<strong>剩余空间</strong>，用flex来表示占多少份数。</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">    <span class="attribute">flex</span>:&lt;number&gt;; <span class="comment">/* default 0*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>align-self</strong> 控制子项自己在侧轴的排列方式</p><blockquote><p>align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖 align-items属性。默认值为auto,表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) &#123;</span><br><span class="line">    <span class="comment">/*设置自己在侧轴上的排列方式*/</span></span><br><span class="line">    <span class="attribute">align-self</span>:flex-end;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>order</strong> 定义子项的排列顺序（前后顺序。【和 z-index 不一样，z-index 是上下顺序】） </p><p>数值越小，排列越靠前，默认为0。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 响应式 </tag>
            
            <tag> css(3) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bug记录及解决</title>
      <link href="/2022/07/07%E5%B7%A5%E5%85%B7/%E5%B7%A5%E5%85%B7_%E6%89%8B%E5%86%8C_Bug%E8%AE%B0%E5%BD%95%E5%8F%8A%E8%A7%A3%E5%86%B3/10d28195/"/>
      <url>/2022/07/07%E5%B7%A5%E5%85%B7/%E5%B7%A5%E5%85%B7_%E6%89%8B%E5%86%8C_Bug%E8%AE%B0%E5%BD%95%E5%8F%8A%E8%A7%A3%E5%86%B3/10d28195/</url>
      
        <content type="html"><![CDATA[<h1 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h1><ol><li>Failed to connect to github.com port 443:connection timed out<ol><li>git config —global —unset http.proxy</li><li>git config —global —unset https.proxy</li></ol></li></ol><h1 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h1><h2 id="外接显示器不兼容"><a href="#外接显示器不兼容" class="headerlink" title="外接显示器不兼容"></a>外接显示器不兼容</h2><p>问题描述：</p><p>用我的 AMD 处理器的笔记本通过 HDMI 连接 redmin 2k 显示器用一段时间出现屏幕花屏的现象，感觉是驱动出问题了，下载了一个驱动，问题已解决。</p><p>下载地址：<a href="https://www.amd.com/en/support">https://www.amd.com/en/support</a></p><p>安装完成花屏问题已解决</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220730163640.png" alt="20220730163640"></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> 手册 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>移动端布局</title>
      <link href="/2022/07/07%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF_CSS_%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%B8%83%E5%B1%80/ea92cade/"/>
      <url>/2022/07/07%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF_CSS_%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%B8%83%E5%B1%80/ea92cade/</url>
      
        <content type="html"><![CDATA[<h1 id="移动端基础"><a href="#移动端基础" class="headerlink" title="移动端基础"></a>移动端基础</h1><h2 id="常见移动端屏幕尺寸"><a href="#常见移动端屏幕尺寸" class="headerlink" title="常见移动端屏幕尺寸"></a>常见移动端屏幕尺寸</h2><blockquote><p>数据来源：<a href="https://material.io/devices/">https://material.io/devices/</a> 注：作为前端开发，不建议大家去纠结 dp, dpi, pt, ppi等单位。</p></blockquote><div class="table-container"><table><thead><tr><th>设备</th><th>尺寸（英寸）</th><th>开发尺寸（px)</th><th>物理像素比（dpr)</th></tr></thead><tbody><tr><td>iphone6</td><td>4.7</td><td>375*667</td><td>2.0</td></tr><tr><td>Nexus 4</td><td>4.7</td><td>384*640</td><td>2.0</td></tr><tr><td>Nexus 5x</td><td>5.2</td><td>411*731</td><td>2.6</td></tr><tr><td>iphone6 Plus</td><td>5.5</td><td>414*736</td><td>3.0</td></tr><tr><td>Samsung Galaxy Note 4</td><td>5.7</td><td>480*853</td><td>3.0</td></tr><tr><td>Sony Xperia Z Ultra</td><td>6.4</td><td>540*960</td><td>2.0</td></tr><tr><td>Nexus7(12)</td><td>7.0</td><td>600*960</td><td>1.3</td></tr><tr><td>iPad Mini</td><td>7.9</td><td>768*1024</td><td>1.0</td></tr></tbody></table></div><h2 id="移动端调试"><a href="#移动端调试" class="headerlink" title="移动端调试"></a>移动端调试</h2><ul><li>Chrome DevTools(谷歌浏览器）的模拟手机调试</li><li>搭建本地web服务器，手机和服务器一个局域网内，通过手机访问服务器</li><li>使用外网服务器，直接IP或域名访问</li></ul><h2 id="视口"><a href="#视口" class="headerlink" title="视口"></a>视口</h2><blockquote><p>视口（viewport) 就是浏览器显示页面内容的屏幕区域，视口可以分为<strong>布局视口、视觉视口和理想视口</strong>。</p></blockquote><ul><li><p>布局视口 layout viewport<br>一般移动设备的浏览器都默认设置了一个布局视口，用于解决早期的PC端页面在手机上显示的问题。<br>iOS,Android 基本都将这个视口分辨率设置为 980px,所以PC上的网页大多都能在手机上呈现，只不过元素看上去很小，一般默认可以通过手动缩放网页。</p></li><li><p>视觉视口 visual viewport<br>用户正在看到的网站的区域。注意：是网站的区域。<br>可以通过缩放去操作视觉视口，但不会影响布局视口，布局视口仍保持原来的宽度。</p></li><li><p><strong>理想视口 ideal viewport</strong><br>为了<strong>使网站在移动端</strong>有最理想的浏览和阅读宽度而设定<br>需要手动添写 <strong>meta视口标签</strong>通知浏览器操作<br>meta 视口标签的主要目的：布局视口的宽度应该与理想视口的宽度一致，<strong>简单理解就是设备有多宽，我们布局的视口就多宽</strong></p></li></ul><h3 id="meta-视口标签"><a href="#meta-视口标签" class="headerlink" title="meta 视口标签"></a>meta 视口标签</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=&quot;viewport&quot; <span class="attribute">content</span>=&quot;<span class="attribute">width</span>=device-<span class="attribute">width</span>, user-scalable=no, initial-scale=<span class="number">1.0</span>, maximum-scale=<span class="number">1.0</span>,minimum-scale=<span class="number">1.0</span>&quot;&gt;</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>content 属性</th><th>Description</th></tr></thead><tbody><tr><td>width</td><td>宽度设置的是viewport宽度，可以设置device-width特殊值</td></tr><tr><td>initial-scale</td><td>初始缩放比，大于0的数字</td></tr><tr><td>maximum-scale</td><td>最大缩放比，大于0的数字</td></tr><tr><td>minimum-scale</td><td>最小缩放比，大于0的数字</td></tr><tr><td>user-scalable</td><td>用户是否可以缩放，yes或no (1或0)</td></tr></tbody></table></div><h3 id="标准的viewport设置"><a href="#标准的viewport设置" class="headerlink" title="标准的viewport设置"></a>标准的viewport设置</h3><ul><li>视口宽度和设备保持一致</li><li>视口的默认缩放比例1.0</li><li>不允许用户自行缩放</li><li>最大允许的缩放比例1.0</li><li>最小允许的缩放比例1.0</li></ul><h2 id="二倍图"><a href="#二倍图" class="headerlink" title="二倍图"></a>二倍图</h2><h3 id="物理像素-amp-物理像素比"><a href="#物理像素-amp-物理像素比" class="headerlink" title="物理像素 &amp; 物理像素比"></a>物理像素 &amp; 物理像素比</h3><p>物理像素：指的是屏幕显示的最小颗粒，是物理真实存在的。这是厂商在出厂时就设置好了。(比如苹果6\7\8是750*1334)</p><p>开发时候：<strong>1px不一定等于1个物理像素</strong>（PC 端 1px 等于1个物理像素，但是移动端就不尽相同。[ Retina(视网膜屏幕）是一种显示技术，可以将把更多的物理像素点压缩至一块屏幕里，从而达到更高的分辨率，并提高屏幕显示的细腻程度。]）</p><p>物理像素比：一个 px 的能显示的物理像素点的个数，称为物理像素比或屏幕像素比。</p><h3 id="多倍图"><a href="#多倍图" class="headerlink" title="多倍图"></a>多倍图</h3><blockquote><p>对于一张50px<em>50px的图片，在手机<code>Retina屏</code>中打开，按照刚才的物理像素比会放大倍数，这样会<em>*造成图片模糊</em></em></p></blockquote><p>解决方案：</p><blockquote><p>原理：使用大二倍的图片，然后手动将尺寸调小一半，在手机中即使物理像素比会放大倍数，也不会造成图片模糊问题。</p></blockquote><ul><li>在标准的viewport设置中，使用<strong>倍图</strong>来提高图片质量，<strong>解决在高清设备中的模糊问题</strong></li><li>通常使用<strong>二倍图</strong>。（但是现在还存在3倍图4倍图的情况，这个看实际开发公司需求）</li><li>背景图片注意缩放问题</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*在iphone8下面*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="comment">/*原始图片100*100px*/</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="comment">/*原始图片100*100px*/</span></span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">50px</span> <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="background-size-背景缩放"><a href="#background-size-背景缩放" class="headerlink" title="background-size 背景缩放"></a>background-size 背景缩放</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">单位：长度|百分比|cover|contain;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">cover：把背景图像扩展至足够大，以使背景图像完全覆盖背景区域。</span></span><br><span class="line"><span class="comment">contain：把图像图像扩展至最大尺寸，以使其宽度和高度完全适应内容区域。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="attribute">background-size</span>: 背景图片宽度 背景图片高度;</span><br></pre></td></tr></table></figure><h3 id="cutterman-多倍图切图"><a href="#cutterman-多倍图切图" class="headerlink" title="cutterman 多倍图切图"></a>cutterman 多倍图切图</h3><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220707152320.png" alt="20220707152320"></p><ul><li>@1 X1倍图原图</li><li>@2 X2倍图</li><li>@3 X3倍图</li></ul><h3 id="二倍精灵图"><a href="#二倍精灵图" class="headerlink" title="二倍精灵图"></a>二倍精灵图</h3><ul><li>在 FW或 PS中把精灵图等比例缩放为<strong>原来的一半</strong>，然后根据大小<strong>测量缩放后的坐标</strong></li><li>注意代码里面 background-size ：精灵图<strong>原来宽度的一半</strong></li></ul><h2 id="移动端技术解决方案"><a href="#移动端技术解决方案" class="headerlink" title="移动端技术解决方案"></a>移动端技术解决方案</h2><h3 id="移动端浏览器"><a href="#移动端浏览器" class="headerlink" title="移动端浏览器"></a>移动端浏览器</h3><blockquote><p>移动端浏览器基本以webkit内核为主，因此我们就<strong>考虑 webkit 兼容性问题</strong>。可以放心使用H5标签和CSS3样式。浏跨器的<strong>私有前缀我们只需要考虑添加 webkit 即可</strong>。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220707153417.png" alt="20220707153417"></p><h3 id="CSS初始化-normalize-css"><a href="#CSS初始化-normalize-css" class="headerlink" title="CSS初始化 normalize.css"></a>CSS初始化 normalize.css</h3><blockquote><p>移动端CSS初始化推荐使用 <code>normalize.css</code>  官方地址：<a href="https://necolas.github.io/normalize.css/">https://necolas.github.io/normalize.css/</a></p></blockquote><ul><li>Normalize.css: 保护了有价值的默认值</li><li>Normalize.css: 修复了浏览器的bug</li><li>Normalize.css: 是模块化的</li><li>Normalize.css: 拥有详细的文档</li></ul><h3 id="特殊样式"><a href="#特殊样式" class="headerlink" title="特殊样式"></a>特殊样式</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*CSS3盒子模型*/</span></span><br><span class="line"><span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">-webkit-<span class="attribute">box-sizing</span>: border-box;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*点击高亮我们需要清除清除设置为 transparent 完成透明*/</span></span><br><span class="line">-webkit-tap-highlight-<span class="attribute">color</span>: transparent;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*在移动端浏览器默认的外观，在 ios上加上这个属性才能给按钮和输入框自定义样式*/</span></span><br><span class="line">-webkit-appearance: none;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*禁用长按页面时的弹出菜单*/</span></span><br><span class="line"><span class="selector-tag">img</span>,</span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    -webkit-touch-callout: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="移动端技术选型"><a href="#移动端技术选型" class="headerlink" title="移动端技术选型"></a>移动端技术选型</h1><p>建议：选取一种主要技术选型，其他技术做为辅助，这种混合技术开发。</p><h2 id="方案一：单独制作移动端页面（主流）"><a href="#方案一：单独制作移动端页面（主流）" class="headerlink" title="方案一：单独制作移动端页面（主流）"></a>方案一：单独制作移动端页面（主流）</h2><blockquote><p>通常情况下，网址域名前面加 <code>m(mobile)</code> 可以打开移动端。通过<strong>判断设备</strong>，如果是移动设备打开，则跳到移动端页面。</p></blockquote><ol><li>流式布局（百分比布局）</li><li>flex 弹性布局（强烈推荐）</li><li>less + rem + 媒体查询布局</li><li>混合布局</li></ol><h3 id="流式布局"><a href="#流式布局" class="headerlink" title="流式布局"></a>流式布局</h3><blockquote><p>流式布局，就是百分比布局。通过<strong>盒子的宽度设置成百分比</strong>来根据屏幕的宽度来进行伸缩，不受固定像素的限制，内容向两侧填充。流式布局方式是移动web开发使用的比较常见的布局方式。</p></blockquote><p>max-width 最大宽度（max-height最大高度）<br>min-width 最小宽度（min-height 最小高度）</p><h3 id="flex-弹性布局（推荐）"><a href="#flex-弹性布局（推荐）" class="headerlink" title="flex 弹性布局（推荐）"></a>flex 弹性布局（推荐）</h3><div class="tag link"><a class="link-card" title="Flex响应式布局" href="http://universe2086.top/2022/07/072207/Flex%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B8%83%E5%B1%80/976189ad/"><div class="left"><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/flex.png"/></div><div class="right"><p class="text">Flex响应式布局</p><p class="url">http://universe2086.top/2022/07/072207/Flex%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B8%83%E5%B1%80/976189ad/</p></div></a></div><blockquote><p>flex 是 flexible Box的缩写，意为“弹性布局”，用来为盒状模型提供最大的灵活性，任何一个容器都可以指定为flex布局。</p></blockquote><p>注意：当我们<strong>为父盒子设为flex布局以后，子元素的 float、clear 和 vertical-align 属性将失效。</strong></p><p>布局原理：</p><p>采用Flex布局的元素，称为Flex容器（flex container),简称”容器”。它的所有子元素自动成为容器成员，称为Flex项目（flexitem),简称“项目”。（<strong>就是通过给父盒子添加flex属性，来控制子盒子的位置和排列方式。</strong>）</p><h4 id="flex布局父项常见属性"><a href="#flex布局父项常见属性" class="headerlink" title="flex布局父项常见属性"></a>flex布局父项常见属性</h4><div class="table-container"><table><thead><tr><th>父项属性</th><th>Description</th></tr></thead><tbody><tr><td>flex-direction</td><td>设置主轴的方向</td></tr><tr><td>justify-content</td><td>设置主轴上的子元素排列方式</td></tr><tr><td>flex-wrap</td><td>设置子元素是否换行</td></tr><tr><td>align-items</td><td>设置侧轴上的子元素排列方式（单行）</td></tr><tr><td>align-content</td><td>设置侧轴上的子元素的排列方式（多行）</td></tr><tr><td>flex-flow</td><td>复合属性，相当于同时设置了 flex-direction 和 flex-wrap</td></tr></tbody></table></div><p>主轴与侧轴的概念：（在flex布局中，是分为主轴和侧轴两个方向。（同样的叫法有：行和列、x轴和y轴））</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220707223821.png" alt="20220707223821"></p><p><strong>flex-direction</strong> 设置<strong>主轴</strong>的方向 </p><blockquote><p>注意：主轴和侧轴是会变化的，就看flex-direction设置谁为主轴，剩下的就是侧轴。而我们的子元素是跟着主轴来排列的。</p></blockquote><div class="table-container"><table><thead><tr><th>flex-direction 属性值</th><th>Description</th></tr></thead><tbody><tr><td>row</td><td>从左到右(默认值)</td></tr><tr><td>row-reverse</td><td>从右到左</td></tr><tr><td>column</td><td>从上到下</td></tr><tr><td>column-reverse</td><td>从下到上</td></tr></tbody></table></div><p><strong>justify-content</strong> 设置<strong>主轴上的子元素</strong>排列方式（<strong>先确定好主轴</strong>）</p><div class="table-container"><table><thead><tr><th>justify-content 属性值</th><th>Description</th></tr></thead><tbody><tr><td>flex-start</td><td>从头部开始排列(默认值)</td></tr><tr><td>flex-end</td><td>从尾部开始排列</td></tr><tr><td>center</td><td>在主轴居中对齐（如果主轴是x轴则水平居中）</td></tr><tr><td>space-evenly</td><td>均匀排列每个元素，元素之间的间隔相等</td></tr><tr><td>space-around</td><td>平分剩余空间</td></tr><tr><td>space-between</td><td>先两边贴边再平分剩余空间（重要）</td></tr></tbody></table></div><p><strong>flex-wrap</strong> 设置<strong>子元素是否换行</strong> </p><blockquote><p>默认情况下，项目都排在一条线（又称”轴线”）上。flex-wrap属性定义，<strong>flex布局中默认是不换行的。</strong></p></blockquote><div class="table-container"><table><thead><tr><th>flex-wrap 属性值</th><th>Description</th></tr></thead><tbody><tr><td>nowrap</td><td>不换行（默认值）</td></tr><tr><td>wrap</td><td>换行</td></tr></tbody></table></div><p><strong>align-items</strong> 设置<strong>侧轴</strong>上的子元素排列方式（<strong>单行</strong>）</p><div class="table-container"><table><thead><tr><th>align-items 属性值</th><th>Description</th></tr></thead><tbody><tr><td>flex-start</td><td>从上到下（默认值）</td></tr><tr><td>flex-end</td><td>从下到上</td></tr><tr><td>center</td><td>挤在一起居中（垂直居中）</td></tr><tr><td>stretch</td><td>拉伸</td></tr></tbody></table></div><p><strong>align-content</strong> 设置<strong>侧轴</strong>上的子元素的排列方式（<strong>多行</strong>）</p><div class="table-container"><table><thead><tr><th>align-content 属性值</th><th>Description</th></tr></thead><tbody><tr><td>flex-start</td><td>在侧轴的头部开始排列（默认值）</td></tr><tr><td>flex-end</td><td>在侧轴的尾部开始排列</td></tr><tr><td>center</td><td>在侧轴中间显示</td></tr><tr><td>space-around</td><td>子项在侧轴平分剩余空间</td></tr><tr><td>space-between</td><td>子项在侧轴先分布在两头，再平分剩余空间</td></tr><tr><td>stretch</td><td>设置子项元素高度平分父元素高度</td></tr></tbody></table></div><p><strong>总结：单行找 align-items 多行找 align-content</strong></p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220707233102.png" alt="20220707233102"></p><p><strong>flex-flow</strong> 属性是 flex-direction 和 flex-wrap 属性的复合属性</p><h4 id="flex布局子项常见属性"><a href="#flex布局子项常见属性" class="headerlink" title="flex布局子项常见属性"></a>flex布局子项常见属性</h4><div class="table-container"><table><thead><tr><th>子项属性</th><th>Description</th></tr></thead><tbody><tr><td>flex</td><td>子项目占的份数</td></tr><tr><td>align-self</td><td>控制子项自己在侧轴的排列方式</td></tr><tr><td>order</td><td>定义子项的排列顺序（前后顺序）</td></tr></tbody></table></div><p><strong>flex</strong> 定义子项目占的份数</p><blockquote><p>flex属性定义子项目分配<strong>剩余空间</strong>，用flex来表示占多少份数。</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">    <span class="attribute">flex</span>:&lt;number&gt;; <span class="comment">/* default 0*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>align-self</strong> 控制子项自己在<strong>侧轴</strong>的排列方式</p><blockquote><p>align-self属性允许<strong>单个项目</strong>有与其他项目不一样的对齐方式，<strong>可覆盖 align-items属性</strong>。默认值为auto,表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) &#123;</span><br><span class="line">    <span class="comment">/*设置自己在侧轴上的排列方式*/</span></span><br><span class="line">    <span class="attribute">align-self</span>:flex-end;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>order</strong> 定义子项的排列顺序（前后顺序。【和 z-index 不一样，z-index 是上下顺序】） </p><p>数值越小，排列越靠前，默认为0。</p><h3 id="less-rem-媒体查询布局-（推荐）"><a href="#less-rem-媒体查询布局-（推荐）" class="headerlink" title="less + rem + 媒体查询布局 （推荐）"></a>less + rem + 媒体查询布局 （推荐）</h3><p>rem 适配方案：</p><ol><li>页面布局文字能否随着屏幕大小变化而变化？</li><li>流式布局和flex布局主要针对于宽度布局，那高度如何设置？</li><li>怎么样让屏幕发生变化的时候元素高度和宽度等比例缩放？</li></ol><h4 id="rem"><a href="#rem" class="headerlink" title="rem"></a>rem</h4><blockquote><p>rem 的优点就是可以通过修改 html 里面的文字大小来改变页面中元素的大小</p></blockquote><p>rem(root em)是一个相对单位，类似于em（em 是父元素字体大小）<strong>rem 的基准是相对于 html 元素的字体大小。</strong>(比如，根元素 html 设置 font-size=12px;非根元素设置width:2rem;则换成px表示就是24px。)</p><p>市场比较常见配置：</p><ol><li>需要不断修改 html 文字大小</li><li>需要媒体查询  </li><li>需要 flexible.js</li></ol><h4 id="媒体查询-CSS3"><a href="#媒体查询-CSS3" class="headerlink" title="媒体查询 CSS3"></a>媒体查询 CSS3</h4><blockquote><p>媒体查询我们要按照从小到大或者从大到小的顺序来写，<strong>建议从小到大来写，这样代码更简洁。</strong></p></blockquote><p>层叠性：</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220725000656.png" alt="20220725000656"></p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">用@media开头注意@符号</span></span><br><span class="line"><span class="comment">mediatype 媒体类型</span></span><br><span class="line"><span class="comment">关键字andy not only</span></span><br><span class="line"><span class="comment">media feature 媒体特性必须有小括号包含 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> mediatype <span class="keyword">and</span> | <span class="keyword">not</span> | <span class="keyword">only</span> (media feature)&#123;</span><br><span class="line">    CSS-<span class="selector-tag">Code</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>mediatype 媒体类型</th><th>Description</th></tr></thead><tbody><tr><td>all</td><td>用于所有设备</td></tr><tr><td>print</td><td>用于打印机和打印预览</td></tr><tr><td><strong>screen</strong></td><td><strong>用于电脑屏幕，平板电脑，智能手机等</strong></td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>关键字</th><th>Description</th></tr></thead><tbody><tr><td>and</td><td>可以将多个媒体特性连接到一起，相当于“且”的意思。</td></tr><tr><td>not</td><td>排除某个媒体类型，相当于“非”的意思，可以省略。</td></tr><tr><td>only</td><td>指定某个特定的媒体类型，可以省略。</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>媒体特性（小括号包含 ）</th><th>Description</th></tr></thead><tbody><tr><td>width</td><td>定义输出设备中页面可见区域的宽度</td></tr><tr><td>min-width</td><td>定义输出设备中页面最小可见区域宽度</td></tr><tr><td>max-width</td><td>定义输出设备中页面最大可见区域宽度</td></tr></tbody></table></div><p>案例：媒体查询+rem 实现元素动态变化</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">320px</span>) &#123;</span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">html</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">font-size</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">640px</span>) &#123;</span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">html</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">font-size</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">1rem</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">1rem</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: .<span class="number">5rem</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: darkcyan;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        Lorem ipsum dolor.</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>媒体查询：引入资源</p><blockquote><p>可以<strong>针对于不同的屏幕尺寸 使用不同的stylesheets(样式表）</strong>。原理，就是直接在link中判断设备的尺寸，然后引用不同的css文件。</p></blockquote><p>语法规范：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel= &quot;stylesheet&quot; media=&quot;mediatype and|not|only (media feature)&quot; href= &quot;mystylesheet<span class="selector-class">.css</span>&quot;&gt;&lt;/link&gt;</span><br></pre></td></tr></table></figure><h4 id="less"><a href="#less" class="headerlink" title="less"></a>less</h4><blockquote><p><a href="https://lesscss.org/">Less</a>(Leaner Style Sheets的缩写）是一门<strong>CSS预处理语言</strong>，它扩展了CSS的动态特性。作为CSS的一种形式的扩展，它并没有减少CSS的功能，而是在现有的CSS语法上，为CSS加入程序式语言的特性。它在CSS的语法基础之上，引入了<strong>变量，Mixin(混入）,运算以及函数等功能</strong>，大大简化了CSS的编写,并且降低了CSS的维护成本。(常见的CSS预处理器：Sass、Less、Stylus)</p></blockquote><p>less 基本使用：</p><ul><li>Less 变量</li><li>Less 编译</li><li>Less 嵌套</li><li>Less 运算</li></ul><ol><li>Less 变量（变量是指没有固定的值，可以改变的。）<br>语法：<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">变量命名规范：</span></span><br><span class="line"><span class="comment">1. 必须有 @为前缀</span></span><br><span class="line"><span class="comment">2. 不能包含特殊字符</span></span><br><span class="line"><span class="comment">3. 不能以数字开头</span></span><br><span class="line"><span class="comment">4. 大小写敏感</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">@变量名: 值;</span><br></pre></td></tr></table></figure></li><li>Less 编译（Easy LESS 插件）<br>本质上，Less包含一套自定义的语法及一个解析器，用户根据这些语法定义自己的样式规则，这些规则最终会通过解析器，编译生成对应的CSS文件。<br><code>Easy LESS</code> 插件用来把less文件编译为css文件。安装完毕插件，重新加载下vscode。<strong>只要保存一下Less文件，会自动生成CSS文件</strong>。</li><li>Less 嵌套<br>如需嵌套一般直接在父元素内部直接写子元素样式<br>如果遇见（<strong>交集 | 伪类 | 伪元素选择器</strong> 需要在前面加上 <code>&amp;</code> 符号）<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">        <span class="attribute">color</span>: red;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><strong>Less 运算</strong><br>任何<strong>数字、颜色</strong>或者<strong>变量</strong>都可以参与运算。就是Less提供了加（+)、减（-)、乘（*)、除（/)算术运算。<br>注意事项：</li></ol><ul><li>乘号（*)和除号（/)的写法</li><li>运算符中间<strong>左右有个空格隔开</strong>（ 1px + 5 ）</li><li>对于两个不同的单位的值之间的运算，运算结果的值<strong>取第一个值的单位</strong></li><li>如果两个值之间<strong>只有一个值有单位，则运算结果就取该单位</strong></li></ul><h4 id="rem-的两种适配方案"><a href="#rem-的两种适配方案" class="headerlink" title="rem 的两种适配方案"></a>rem 的两种适配方案</h4><p><strong>方案1：less + rem + 媒体查询（不推荐）</strong></p><ol><li>设计稿宽度（基本以 750px 为准。）</li><li><strong>动态设置 html 标签 font-size 大小：</strong> 使用屏幕尺寸 除以 <strong>划分的份数</strong>得到了 html 里面的文字大小</li><li>元素大小取值方法：页面元素的 <strong>rem 值 = 页面元素值（px) / html font-size字体大小</strong></li></ol><p><strong>方案2：<a href="https://github.com/amfe/lib-flexible">flexible.js </a> + rem（推荐）</strong></p><p>适配原理：</p><ol><li>我们再也<strong>不需要在写不同屏幕的媒体查询</strong>，因为里面<strong>js做了处理</strong></li><li>它的原理是把当前设备<strong>划分为10等份</strong>，但是不同设备下，比例还是一致的。</li><li>我们要做的，就是确定好我们当前设备的 html 文字大小就可以了</li><li>比如当前设计稿是 750px,那么我们只需要把 html 文字大小设置为 75px(750px/10) 就可以</li><li>里面页面元素rem值：页面元素的 px值/75</li><li>剩余的，让 flexible.js 来算 </li></ol><h2 id="方案二：响应式开发"><a href="#方案二：响应式开发" class="headerlink" title="方案二：响应式开发"></a>方案二：响应式开发</h2><blockquote><p>通过<strong>判断屏幕宽度</strong>来改变样式，以适应不同终端。（制作麻烦，需要花很大精力去调兼容性问题）</p></blockquote><ul><li>媒体查询</li><li>bootstarp</li></ul><h3 id="响应式原理"><a href="#响应式原理" class="headerlink" title="响应式原理"></a>响应式原理</h3><blockquote><p>使用<strong>媒体查询</strong>针对不同宽度的设备进行布局和样式的设置，从而适配不同设备的目的。</p></blockquote><div class="table-container"><table><thead><tr><th>设备</th><th>尺寸区间</th></tr></thead><tbody><tr><td>超小屏幕（手机）</td><td>&lt; 768px</td></tr><tr><td>小屏设备（平板）</td><td>&gt;= 768px ~ &lt; 992px</td></tr><tr><td>中等屏幕（桌面显示器）</td><td>&gt;= 992px ~ &lt; 1200px</td></tr><tr><td>宽屏设备（大桌面显示器）</td><td>&gt;= 1200px</td></tr></tbody></table></div><h3 id="布局容器"><a href="#布局容器" class="headerlink" title="布局容器"></a>布局容器</h3><blockquote><p>响应式<strong>需要一个父级做为布局容器</strong>，来配合子级元素来实现变化效果。</p></blockquote><p>原理：在不同屏幕下，<strong>通过<code>媒体查询</code>来改变这个布局容器的大小，再改变里面子元素的排列方式和大小</strong>，从而实现<br>不同屏幕下，看到不同的页面布局和样式变化。</p><p>响应式布局容器尺寸划分（常用）：</p><div class="table-container"><table><thead><tr><th>设备</th><th>布局容器尺寸</th></tr></thead><tbody><tr><td>超小屏幕（手机，小于768px)</td><td>设置宽度为 100%</td></tr><tr><td>小屏幕（平板，大于等于768px)</td><td>设置宽度为 750px</td></tr><tr><td>中等屏幕（桌面显示器，大于等于992px)</td><td>宽度设置为 970px</td></tr><tr><td>大屏幕（大桌面显示器，大于等于1200px)</td><td>宽度设置为 1170px</td></tr></tbody></table></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.container</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: slateblue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 1. 超小屏幕下 小于 768 布局容器的宽度为 100% */</span></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">767px</span>) &#123;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.container</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 2. 小屏幕下 大于等于 768 布局容器改为 750px */</span></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">768px</span>) &#123;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.container</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">750px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: khaki;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 3. 中等屏幕下 大于等于 992px 布局容器修改为970px */</span></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">992px</span>) &#123;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.container</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">970px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: hotpink;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">1200px</span>) &#123;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.container</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">1170px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: slategrey;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Bootstrap-V3"><a href="#Bootstrap-V3" class="headerlink" title="Bootstrap V3"></a>Bootstrap V3</h3><blockquote><p>控制权在框架本身，使用者要按照框架所规定的某种规范进行开发。</p></blockquote><p>Bootstrap 使用四步曲：</p><ol><li>创建文件夹结构<ol><li>在项目根目录下新建 bootstrap 文件夹</li><li>将下载好的 Bootstrap 文件 拷贝到项目根目录下 bootstrap 文件夹中。</li></ol></li><li>创建html骨架结构<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--要求当前网页使用IE浏览器最高版本的内核来渲染--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--视口的设置：视口的宽度和设备一致，默认的缩放比例和PC端一致--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap 101 Template<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Bootstrap --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- HTML5 shim 和 Respond.js 是为了让 IE8 支持 HTML5 元素和媒体查询（media queries）功能 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 警告：通过 file:// 协议（就是直接将 html 页面拖拽到浏览器中）访问页面时 Respond.js 不起作用 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 兼容 IE 代码： --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--[if lt IE 9]&gt;</span></span><br><span class="line"><span class="comment">      &lt;script src=&quot;https://cdn.jsdelivr.cn/npm/html5shiv@3.7.3/dist/html5shiv.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">      &lt;script src=&quot;https://cdn.jsdelivr.cn/npm/respond.js@1.4.2/dest/respond.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">    &lt;![endif]--&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>你好，世界！<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.cn/npm/jquery@1.12.4/dist/jquery.min.js&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-nvAa0+6Qg9clwYCGGPpDQLVpLNn0fRaROjHqs13t4Ggj3Ez50XnGQqc/r8MhnRDZ&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-aJ21OjlMXNL5UyIl/XNwTMqvzeRMZH2w8c5cRVpzpU8Y5bApTppSuUkhZXN0VxHd&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>引入相关样式文件<br>使用 link标签 引入项目根目录 bootstrap 文件夹中的样式文件</li><li>书写内容<ol><li>直接拿 Bootstrap 预先定义好的样式来使用。</li><li>修改 Bootstrap 原来的样式，<strong>注意权重问题</strong>。</li><li>学好 Bootstrap 的关键在于知道它定义了哪些样式，以及这些样式能实现什么样的效果。</li></ol></li></ol><h3 id="Bootstrap-布局容器"><a href="#Bootstrap-布局容器" class="headerlink" title="Bootstrap 布局容器"></a>Bootstrap 布局容器</h3><blockquote><p>Bootstrap 需要为页面内容和栅格系统包裹一个.container容器，<strong>Bootstarp 预先定义好了这个类</strong>，叫 <code>.container</code> 它提供了两个作此用处的类。</p></blockquote><h4 id="container-类"><a href="#container-类" class="headerlink" title="container 类"></a>container 类</h4><ul><li>响应式布局的容器固定宽度</li><li>大屏（&gt;=1200px)宽度定为1170px</li><li>中屏（&gt;=992px)宽度定为970px</li><li>小屏（&gt;=768px)宽度定为750px</li><li>超小屏（100%)</li></ul><h4 id="container-fluid-类"><a href="#container-fluid-类" class="headerlink" title="container-fluid 类"></a>container-fluid 类</h4><ul><li>流式布局容器百分百宽度</li><li>占据全部视口（viewport)的容器。</li><li>适合于单独做移动端开发</li></ul><h3 id="Bootstrap-栅格系统"><a href="#Bootstrap-栅格系统" class="headerlink" title="Bootstrap 栅格系统"></a>Bootstrap 栅格系统</h3><blockquote><p>栅格系统将页面布局(容器)划分为等宽的列，然后通过列数的定义来模块化页面布局。</p></blockquote><h4 id="栅格选项参数"><a href="#栅格选项参数" class="headerlink" title="栅格选项参数"></a>栅格选项参数</h4><div class="table-container"><table><thead><tr><th></th><th>超小屏幕（手机）&lt;768px</th><th>小屏设备（平板）&gt;=768px</th><th>中等屏幕（桌面显示器） &gt;=992px</th><th>宽屏设备（大桌面显示器）&gt;=1200px</th></tr></thead><tbody><tr><td>.container最大宽度</td><td>自动（100%)</td><td>750px</td><td>970px</td><td>1170px</td></tr><tr><td>类前缀</td><td>.col-xs-</td><td>.col-sm-</td><td>.col-md-</td><td>.col-lg-</td></tr><tr><td>列（column)数</td><td>12</td><td>12</td><td>12</td><td>12</td></tr></tbody></table></div><ul><li>行（row)必须放到container布局容器里面</li><li>列的平均划分需要给<strong>列添加类前缀</strong></li><li><strong>xs-extra small:超小；sm-small:小；md-medium:中等；lg-large:大；</strong></li><li>列（column)大于12,多余的“列（column)”所在的元素将被作为一个整体另起一行排列</li><li>每一列默认有左右15像素的padding</li><li><strong>可以同时为一列指定多个设备的类名，以便划分不同份数</strong>。例如：class=”col-md-4 col-sm-6”</li></ul><h4 id="列嵌套"><a href="#列嵌套" class="headerlink" title="列嵌套"></a>列嵌套</h4><blockquote><p>栅格系统内置的栅格系统将内容再次嵌套。就是一个列内再分成若干份小列（套娃）。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220710210121.png" alt="20220710210121"></p><p>可以<strong>通过添加一个新的 .row 元素</strong>和一系列 <code>.col-sm-*</code> 元素到已经存在的 <code>.col-sm-*</code> 元素内。<br>列嵌套最好加 1个行row这样可以<strong>取消父元素的padding值</strong>而且<strong>高度自动和父级一样高</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-4&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-6&quot;</span>&gt;</span>小列<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-6&quot;</span>&gt;</span>小列<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="列偏移"><a href="#列偏移" class="headerlink" title="列偏移"></a>列偏移</h4><p>使用 <code>.col-md-offset-*</code> 类可以<strong>将列向右侧偏移</strong>。这些类实际是通过使用*选择器为当前元素增加了左侧的边距（margin)。</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220710211246.png" alt="20220710211246"></p><h4 id="列排序"><a href="#列排序" class="headerlink" title="列排序"></a>列排序</h4><blockquote><p>4.0以上已废弃该用法，转为 order-(权重）</p></blockquote><p>通过使用 <code>.col-md-push-*</code> 和 <code>.col-md-pull-*</code> 类就可以很容易的改变列（column)的顺序。</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220710212107.png" alt="20220710212107"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-4 col-lg-push-8&quot;</span>&gt;</span>左侧<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-8 col-lg-pull-4&quot;</span>&gt;</span>右侧<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="响应式工具"><a href="#响应式工具" class="headerlink" title="响应式工具"></a>响应式工具</h4><blockquote><p>实现在不同屏幕大小下，显示或隐藏某些元素。</p></blockquote><div class="table-container"><table><thead><tr><th>类名</th><th>超小屏</th><th>小屏</th><th>中屏</th><th>大屏</th></tr></thead><tbody><tr><td>.hidden-xs</td><td>隐藏</td><td>可见</td><td>可见</td><td>可见</td></tr><tr><td>.hidden-sm</td><td>可见</td><td>隐藏</td><td>可见</td><td>可见</td></tr><tr><td>.hidden-md</td><td>可见</td><td>可见</td><td>隐藏</td><td>可见</td></tr><tr><td>.hidden-lg</td><td>可见</td><td>可见</td><td>可见</td><td>隐藏</td></tr></tbody></table></div><p>补充：与之相反的 <code>visible-xs</code> <code>visible-sm</code> <code>visible-md</code> <code>visible-lg</code> 是<strong>显示某个页面内容</strong></p><h2 id="补充知识点"><a href="#补充知识点" class="headerlink" title="补充知识点"></a>补充知识点</h2><h3 id="vw-和-vh"><a href="#vw-和-vh" class="headerlink" title="vw 和 vh"></a>vw 和 vh</h3><blockquote><p>vw / vh是一个相对单位相对于视口来说的。 <strong>vw 和 vh 是未来的趋势，用于替代 rem</strong> 相较于 rem 省去各种判断和修改。</p></blockquote><p>vw是：viewport width <strong>视口宽度单位</strong></p><ul><li>1vw = 1/100 视口宽度</li><li>例如：当前屏幕视口是375像素，则1vw就是3.75像素</li></ul><p>vh是：viewport height <strong>视口高度单位</strong> (vh很少使用)</p><ul><li>1vh = 1/100 视口高度</li></ul><p>注意：和百分比有区别的，百分比是相对于父元素来说的，而vw和vh总是<strong>针对于当前视口</strong>来说的，所以不同视口（屏幕）下，宽高一起变化完成适配。</p><p>场景举例：有个盒子是50像素*50像素的，如何使用vw？</p><ol><li>设计稿参照iPhone678,所以视口宽度尺寸是375像素（像素切换到2x模式）</li><li>1vw是 375px/100 = 3.75px</li><li>50像素<em>50像素的盒子 = 50 / 3.75 = 13.3333vw (因为设计到大量除法，<em>*建议搭配 LESS 使用</em></em>)</li></ol><p>还原设计稿：</p><ol><li>把模式改为 2x 模式</li><li>确定设计稿视口宽度。（比如375）</li><li>直接使用测量数值 / (视口宽度 / 100)。(比如：50 / (375 / 100))</li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> CSS </category>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 响应式 </tag>
            
            <tag> css(3) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>查看GitHub仓库大小的几种方法</title>
      <link href="/2022/07/01%E5%B7%A5%E5%85%B7/%E5%B7%A5%E5%85%B7_Github_%E6%9F%A5%E7%9C%8BGitHub%E4%BB%93%E5%BA%93%E5%A4%A7%E5%B0%8F%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/45d40d84/"/>
      <url>/2022/07/01%E5%B7%A5%E5%85%B7/%E5%B7%A5%E5%85%B7_Github_%E6%9F%A5%E7%9C%8BGitHub%E4%BB%93%E5%BA%93%E5%A4%A7%E5%B0%8F%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/45d40d84/</url>
      
        <content type="html"><![CDATA[<h1 id="GitHub自带查看仓库大小的功能（public、private）"><a href="#GitHub自带查看仓库大小的功能（public、private）" class="headerlink" title="GitHub自带查看仓库大小的功能（public、private）"></a>GitHub自带查看仓库大小的功能（public、private）</h1><blockquote><p>因为这是自带功能，所以公开仓库和私有仓库都可以查看大小。</p></blockquote><p>登录github网页首页，选择自己账户的settings —&gt; repository：</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220701230113.png" alt="20220701230113"></p><h1 id="利用GitHub提供的API查看（public）"><a href="#利用GitHub提供的API查看（public）" class="headerlink" title="利用GitHub提供的API查看（public）"></a>利用GitHub提供的API查看（public）</h1><blockquote><p>只要访问指定API，即可参看仓库大小，；所以只能访问<strong>公开仓库</strong>的信息。</p></blockquote><p>语法：<a href="https://api.github.com/repos/user/repo">https://api.github.com/repos/user/repo</a> ，访问后得到一个包含仓库信息的json数据</p><h1 id="利用浏览器插件：Enhanced-GitHub（public、private）"><a href="#利用浏览器插件：Enhanced-GitHub（public、private）" class="headerlink" title="利用浏览器插件：Enhanced GitHub（public、private）"></a>利用浏览器插件：Enhanced GitHub（public、private）</h1><ol><li>GitHub 开源地址：<a href="https://github.com/softvar/enhanced-github">https://github.com/softvar/enhanced-github</a></li><li>Google商店网址：<a href="https://chrome.google.com/webstore/detail/enhanced-github/anlikcnbgdeidpacdbdljnabclhahhmd">https://chrome.google.com/webstore/detail/enhanced-github/anlikcnbgdeidpacdbdljnabclhahhmd</a></li><li>注意：私有仓库需要添加Token<br>该插件适用于公开和私有仓库，但是私有仓库需要添加token，不然因为<strong>权限不够，会访问不了。</strong><br>添加token步骤：<ol><li>先到 <a href="https://github.com/settings/tokens">https://github.com/settings/tokens</a> ，点击“Generate new token”，范围勾选repo就可以了，拉到最下面，点击“Generatetoken”申请一个token。</li><li>复制token，然后（右键）点击该插件，选择“选项”，跳转后，等一会儿（10s左右），会弹出如下弹窗，将复制的token填进去，然后去访问一个自己的私有仓库就可以显示大小。<br><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220701230731.png" alt="20220701230731"></li></ol></li></ol><p>补充：该插件的另一个很棒的功能就是很简单就能<strong>下载一个文件</strong>（暂时不支持下载文件夹）</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> Github </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>HTML&amp;CSS基础笔记</title>
      <link href="/2022/06/25%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF_CSS_HTML&amp;CSS%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/8074a0ef/"/>
      <url>/2022/06/25%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF_CSS_HTML&amp;CSS%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/8074a0ef/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><blockquote><p>HTML指的是<strong>超文本标记语言</strong>（Hyper Text Markup Language),它是用来描述网页的一种语言。</p></blockquote><h2 id="Web-标准"><a href="#Web-标准" class="headerlink" title="Web 标准"></a>Web 标准</h2><blockquote><p>Web标准是由W3C组织和其他标准化组织制定的一系列标准的集合。<strong>W3C(万维网联盟）是国际最著名的标准化组织</strong>。</p></blockquote><p>Web 标准主要包括<strong>结构（Structure)、表现（Presentation)和行为（Behavior)</strong>三个方面。</p><ol><li>结构(结构用于对网页元素进行整理和分类，如<code>HTML</code>。</li><li>表现(表现用于设置网页元素的版式、颜色、大小等<strong>外观样式</strong>，主要指的是<code>CSS</code>)</li><li>行为(行为是指网页模型的定义及<strong>交互</strong>的编写，现阶段主要学的是<code>Javascript</code>)</li></ol><h2 id="HTML-语法规范"><a href="#HTML-语法规范" class="headerlink" title="HTML 语法规范"></a>HTML 语法规范</h2><ol><li>HTML标签通常是成对出现的称为<strong>双标签</strong>。标签对中的第一个标签是开始标签，第二个标签是结束标签。有些特殊的标签必须是单个标签（极少情况）,例如<br/>;,称为<strong>单标签</strong>。</li><li>标签之间的关系<ol><li>包含关系（父子关系）</li><li>并列关系（兄弟关系）</li></ol></li><li>HTML 标签结构<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1.&lt;!DOCTYPE&gt;标签 (&lt;!DOCTYPE&gt;文档类型声明，作用就是告诉浏览器使用哪种HTML版本来显示网页。)</span></span><br><span class="line"><span class="comment">注意：</span></span><br><span class="line"><span class="comment">  1. &lt;!DOCTYPE&gt;声明位于文档中的最前面的位置，处于&lt;html&gt;标签之前。</span></span><br><span class="line"><span class="comment">  2. &lt;!DOCTYPE&gt;不是一个HTML标签，它就是文档类型声明标签。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2.lang语言 (用来定义当前文档显示的语言。)</span></span><br><span class="line"><span class="comment">  1. en 定义语言为英语</span></span><br><span class="line"><span class="comment">  2. zh-CN 定义语言为中文</span></span><br><span class="line"><span class="comment">  简单来说，定义为en就是英文网页，定义为zh-CN就是中文网页</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">3.charset字符集 (字符集（Character set)是多个字符的集合。以便计算机能够识别和存储各种文字。)</span></span><br><span class="line"><span class="comment">  1. 在&lt;head&gt;标签内，可以通过&lt;meta&gt;标签的charset属性来规定HTML文档应该使用哪种字符编码。</span></span><br><span class="line"><span class="comment">  2. charset常用的值有：GB2312、BIG5、GBK 和 UTF-8</span></span><br><span class="line"><span class="comment">  其中UTF-8也被称为万国码，基本包含了全世界所有国家需要用到的字符.</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>html标签结构<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="HTML-常用标签"><a href="#HTML-常用标签" class="headerlink" title="HTML 常用标签"></a>HTML 常用标签</h2><blockquote><p>语义化：根据标签的语义，在合适的地方给一个最为合理的标签，可以让页面结构更清晰。</p></blockquote><ol><li><code>&lt;h1&gt; - &lt;/h6&gt;</code> （标签语义：作为标题使用，并且依据重要性递减。一个标题<strong>独占一行</strong>。）</li><li><code>&lt;p&gt;&lt;/p&gt;</code> (标签语义：可以把HTML文档分割为若干段落。)<ol><li>文本在一个段落中会根据浏览器窗口的大小<strong>自动换行</strong>。</li><li>段落和段落之间保有<strong>空隙</strong>。</li></ol></li><li><code>&lt;br/&gt;</code> (标签语义：<strong>强制换行</strong>。)</li><li>文本格式化标签<ol><li>加粗：<code>&lt;strong&gt;&lt;/strong&gt; 或 &lt;b&gt;&lt;/b&gt;</code> (更推荐使用<code>&lt;strong&gt;</code>;标签加粗语义更强烈)</li><li>倾斜：<code>&lt;em&gt;&lt;/em&gt; 或 &lt;i&gt;&lt;/i&gt;</code> (更推荐使用<code>&lt;em&gt;</code>标签加粗语义更强烈)</li><li>删除线：<code>&lt;del&gt;&lt;/del&gt; 或 &lt;s&gt;&lt;/s&gt;</code> (更推荐使用<code>&lt;del&gt;</code>标签加粗语义更强烈)</li><li>下划线：<code>&lt;ins&gt;&lt;/ins&gt; 或 &lt;u&gt;&lt;/u&gt;</code> (更推荐使用<code>&lt;ins&gt;</code>;标签加粗语义更强烈)</li></ol></li><li><code>&lt;div&gt;&lt;/div&gt; 和 &lt;span&gt;&lt;/span&gt;</code> (没有语义，它们就是一个盒子，用来装内容的。)<ol><li><code>&lt;div&gt;</code>标签用来布局，但是现在<strong>一行只能放一个<code>&lt;div&gt;</code></strong>。</li><li><code>&lt;span&gt;</code>标签用来布局，<strong>一行上可以多个<code>&lt;span&gt;</code></strong>。</li></ol></li><li><code>&lt;img src = &quot;&quot;/&gt;</code><ol><li>图片的宽度/高度一般只修改一个即可。</li><li>路径<ol><li>相对路径 (以<strong>引用文件所在位置为参考</strong>基础，而建立出的目录路径。)<ol><li>留空直接写文件名 (同一级)</li><li>/ (下一级)</li><li>../ (上一级)</li></ol></li><li>绝对路径 (指<strong>目录</strong>下的绝对位置，直接到达目标位置，通常是从盘符开始的路径。)</li></ol></li></ol></li><li><code>&lt;a href = &quot;&quot; target = &quot;&quot;&gt;&lt;/a&gt;</code> (anchor[‘aenke(r)]的缩写，意为：锚。)<ol><li>链接分类<ol><li>外部链接</li><li>内部链接 (网站内部页面之间的相互链接)</li><li>空链接：<code>&lt;a href = &quot;#&quot;&gt;&lt;/a&gt;</code></li><li>下载链接：如果href里面地址<strong>是一个文件或者压缩包</strong>，会下载这个文件。</li><li>网页元素链接：在网页中的各种网页元素，如<strong>文本、图像、表格、音频、视频</strong>等都可以添加超链接.</li><li>锚点链接 (点我们点击链接，可以快速定位到页面中的某个位置.)<ol><li>在链接文本的href属性中，设置属性值为 <strong>#名字</strong>的形式，如<code>&lt;a href=&quot;#anchor&quot;&gt;跳转至锚点&lt;/a&gt;</code></li><li>找到目标位置标签，里面添加一个id属性=刚才的名字，如：<code>&lt;h3 id=&quot;#anchor&quot; 锚点&lt;/h3&gt;</code></li></ol></li></ol></li></ol></li><li><code>&lt;!--注释语句--&gt;</code>  快捷键：<code>Ctrl + /</code></li><li>特殊字符<br><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220625182416.png" alt="20220625182416"></li><li>表格<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">A:表格相关标签：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">1. &lt;table&gt;&lt;/table&gt;是用于定义表格的标签。</span></span><br><span class="line"><span class="comment">2. &lt;tr&gt;/tr&gt;标签用于定义表格中的行，必须嵌套在&lt;table&gt;&lt;/table&gt;标签中。</span></span><br><span class="line"><span class="comment">3. &lt;td&gt;&lt;/td&gt;用于定义表格中的单元格，必须嵌套在&lt;tr&gt;&lt;/tr&gt;标签中。</span></span><br><span class="line"><span class="comment">4. &lt;thead&gt;标签表格的头部区域、&lt;tbody&gt;标签表格的主体区域.这样可以更好的分清表格结构。【语义化】</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line">B:表格相关属性</span><br><span class="line"></span><br><span class="line">| 表格属性    | 属性值                  | 描述                                             |</span><br><span class="line">| ----------- | ----------------------- | ------------------------------------------------ |</span><br><span class="line">| align       | left、center、right     | 规定表格相对周围元素的对齐方式。                 |</span><br><span class="line">| border      | 1或&quot;&quot;                   | 规定表格单元是否拥有边框，默认为&quot;&quot;，表示没有边框 |</span><br><span class="line">| cellpadding | 像素值 (string)         | 规定**单元边沿与内容之间**的空白，默认1像素。    |</span><br><span class="line">| cellspacing | 像素值 (string)         | 规定**单元格与单元格**之间的空白，默认2像素。    |</span><br><span class="line">| width       | 像素值或百分比 (number) | 规定表格的宽度。                                 |</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>HeadA<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>HeadB<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">C:合并单元格 (将多个单元格合并为一个单元格.)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">1. 合并单元格方式</span></span><br><span class="line"><span class="comment">  1. 跨行合并（纵向合并）：rowspan=&quot;合并单元格的个数&quot;</span></span><br><span class="line"><span class="comment">  2. 跨列合并（横向合并）：colspan=&quot;合并单元格的个数&quot;</span></span><br><span class="line"><span class="comment">2. 目标单元格</span></span><br><span class="line"><span class="comment">3. 合并单元格的**步骤**</span></span><br><span class="line"><span class="comment">  1. 先确定是跨行还是跨列合并。</span></span><br><span class="line"><span class="comment">  2. 找到目标单元格.写上合并方式=合并的单元格数量。比如：&lt;tdcolspan=&quot;2&quot;&gt;&lt;/td&gt;。</span></span><br><span class="line"><span class="comment">  3. 删除多余的单元格。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">th</span>&gt;</span>HeadA<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span> = <span class="string">&quot;2&quot;</span>&gt;</span>HeadB<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>Content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>Content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>Content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span> = <span class="string">&quot;2&quot;</span>&gt;</span>Content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>Content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>Content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>Content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>Content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>列表 (注意事项：<code>&lt;ul&gt;&lt;/ul&gt;或&lt;ol&gt;&lt;/ol&gt;</code>中只能嵌套<code>&lt;li&gt;&lt;/li&gt;,</code>直接在<code>&lt;ul&gt;&lt;/ul&gt;或&lt;ol&gt;&lt;/ol&gt;</code>标签中输入其他标签或者文字的做法是不被允许的。<code>&lt;li&gt;与&lt;/li&gt;</code>之间相当于一个<strong>容器</strong>，<strong>可以容纳所有元素</strong>。)<ol><li>无序列表<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    去掉li前面的项目符号（小圆点）: li &#123; list-style:none; &#125;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">&lt;1i&gt;列表项1&lt;/1i&gt;</span><br><span class="line">&lt;1i&gt;列表项2&lt;/1i&gt;</span><br><span class="line">&lt;1i&gt;列表项3&lt;/1i&gt;</span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>有序列表<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">&lt;1i&gt;列表项1&lt;/1i&gt;</span><br><span class="line">&lt;1i&gt;列表项2&lt;/1i&gt;</span><br><span class="line">&lt;1i&gt;列表项3&lt;/1i&gt;</span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>自定义列表（常用于对术语或名词进行<strong>解释和描述</strong>，定义列表的<strong>列表项前没有任何项目符号</strong>。）<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">&lt;dl&gt;&lt;/dl&gt;里面只能包含&lt;dt&gt;和&lt;dd&gt;，dt和dd里面可以放任何标签。</span></span><br><span class="line"><span class="comment">&lt;dt&gt;和&lt;dd&gt;个数没有限制，经常是一个&lt;dt&gt;对应多个&lt;dd&gt;。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词1<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词1解释1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词1解释2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol></li><li>表单（一个完整的表单通常由<strong>表单域、表单控件（也称为表单元素）和提示信息3个部分构成</strong>。作用：收集用户信息。）<ol><li>表单域（在HTML标签中，<code>&lt;form&gt;</code>标签用于定义表单域，以实现用户信息的收集和传递。<code>&lt;form&gt;</code>会把它范围内的表单元素信息提交给服务器.）<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;ur1地址&quot;</span><span class="attr">method</span>=<span class="string">&quot;提交方式&quot;</span><span class="attr">name</span>=<span class="string">&quot;表单域名称&quot;</span>&gt;</span></span><br><span class="line">各种表单元素控件</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">| 属性   | 属性值     | 作用                                                  |</span><br><span class="line">| ------ | ---------- | ----------------------------------------------------- |</span><br><span class="line">| action | url 地址   | 用于指定**接收并处理表单数据**的服务器程序的url地址。 |</span><br><span class="line">| method | get / post | 用于设置表单数据的**提交方式**，其取值为get或post。   |</span><br><span class="line">| name   | 名称       | 指定表单的名称，以**区分**同一个页面中的多个表单域。  |</span><br></pre></td></tr></table></figure></li><li>表单控件<ol><li>input输入表单元素<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&#x27;属性值&#x27;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--type属性值--&gt;</span></span><br><span class="line"></span><br><span class="line">| type 属性值 | 描述                                                                                                                       |</span><br><span class="line">| ----------- | -------------------------------------------------------------------------------------------------------------------------- |</span><br><span class="line">| button      | 定义可点击按钮（多数情况下，用于通过JavaScript启动脚本）。                                                                 |</span><br><span class="line">| file        | 定义输入字段和“浏览”按钮，供文件上传。                                                                                     |</span><br><span class="line">| hidden      | 定义隐藏的输入字段。                                                                                                       |</span><br><span class="line">| image       | 定义图像形式的提交按钮。                                                                                                   |</span><br><span class="line">| password    | 定义密码字段。该字段中的字符被掩码。                                                                                       |</span><br><span class="line">| radio       | 定义单选按钮。（通过 name 自定义相同的属性实现多选一）拓展：可以使用<span class="tag">&lt;<span class="name">lable</span> <span class="attr">for</span> = <span class="string">&quot;id&quot;</span>&gt;</span> 的形式优化radio提示信息的选择区域。 |</span><br><span class="line">| checkbox    | 定义复选框。 (通过 name 自定义相同的属性实现多选)                                                                          |</span><br><span class="line">| reset       | 定义重置按钮。重置按钮会清除表单中的所有数据。                                                                             |</span><br><span class="line">| submit      | 定义提交按钮。提交按钮会把表单数据发送到服务器。                                                                           |</span><br><span class="line">| text        | 定义单行的输入字段，用户可在其中输入文本。默认宽度为20个字符。                                                             |</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--除type属性外，&lt;input&gt;标签还有其他很多属性--&gt;</span></span><br><span class="line"></span><br><span class="line">| 其他属性  | 属性值  | 描述                                                                                        |</span><br><span class="line">| --------- | ------- | ------------------------------------------------------------------------------------------- |</span><br><span class="line">| name      | 自定义  | 定义input元素的名称，用于区别不同的表单。（radio 或 checkbox)如果是一组，要有相同的name值） |</span><br><span class="line">| value     | 自定义  | 规定input元素的默认值。                                                                     |</span><br><span class="line">| checked   | checked | 规定此input元素首次加载时应当被选中。（主要针对于单选按钮和复选框）                         |</span><br><span class="line">| maxlength | 正整数  | 规定输入字段中的字符的最大长度。                                                            |</span><br></pre></td></tr></table></figure></li><li>select下拉表单元素 (实用场景：多个选项让用户选择，想要节约页面空间时，可以使用<code>&lt;select&gt;</code>标签控件定义下拉列表)<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    1.&lt;select&gt;中至少包含一对&lt;option&gt;。</span></span><br><span class="line"><span class="comment">    2.在&lt;option&gt;中定义 selected=&quot;selected&quot;时，当前项即为默认选中项。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>选项1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>选项2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>选项3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>textarea文本域元素 (实用场景：用户输入内容较多的情况下【如：留言板，评论】，可以使用<code>&lt;textarea&gt;</code>标签。)<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--cols=“每行中的字符数”，rows=“显示的行数”，我们在实际开发中不会使用，都是用CSS来改变大小。--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">rows</span>=<span class="string">&quot;3&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;20&quot;</span>&gt;</span></span><br><span class="line">文本内容</span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol></li><li>提示信息</li></ol></li></ol><h2 id="HTML5-新特性"><a href="#HTML5-新特性" class="headerlink" title="HTML5 新特性"></a>HTML5 新特性</h2><p>新的标签、新的表单和新的表单属性等。</p><h3 id="HTML5-语义化标签"><a href="#HTML5-语义化标签" class="headerlink" title="HTML5 语义化标签"></a>HTML5 语义化标签</h3><blockquote><p>语义化标签便于浏览器看，<strong>主要针对SEO搜索引擎优化</strong>。</p></blockquote><ul><li><code>&lt;header&gt;</code>: 头部标签</li><li><code>&lt;nav&gt;</code>: 导航标签</li><li><code>&lt;article&gt;</code>: 内容标签</li><li><code>&lt;section&gt;</code>: 定义文档某个区域</li><li><code>&lt;aside&gt;</code>: 侧边栏标签</li><li><code>&lt;footer&gt;</code>: 尾部标签</li></ul><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220702214259.png" alt="20220702214259"></p><h3 id="HTML5-多媒体标签"><a href="#HTML5-多媒体标签" class="headerlink" title="HTML5 多媒体标签"></a>HTML5 多媒体标签</h3><ol><li>音频：<code>&lt;audio&gt;</code></li><li>视频：<code>&lt;video&gt;</code></li></ol><h3 id="HTML5-新增-input-类型"><a href="#HTML5-新增-input-类型" class="headerlink" title="HTML5 新增 input 类型"></a>HTML5 新增 input 类型</h3><p>新增表单 type</p><div class="table-container"><table><thead><tr><th>type</th><th>说明</th></tr></thead><tbody><tr><td>type=”email”</td><td>限制用户输入必须为Email类型</td></tr><tr><td>type=”url”</td><td>限制用户输入必须为URL类型</td></tr><tr><td>type=”date”</td><td>限制用户输入必须为日期类型</td></tr><tr><td>type=”time”</td><td>限制用户输入必须为时间类型</td></tr><tr><td>type=”month”</td><td>限制用户输入必须为月类型</td></tr><tr><td>type=”week”</td><td>限制用户输入必须为周类型</td></tr><tr><td><strong>type=”number</strong></td><td><strong>限制用户输入必须为数字类型</strong></td></tr><tr><td><strong>type=”tel”</strong></td><td><strong>手机号码</strong></td></tr><tr><td><strong>type=”search</strong></td><td><strong>搜索框</strong></td></tr><tr><td>type=”color”</td><td>生成一个颜色选择表单</td></tr></tbody></table></div><p>新增表单属性</p><div class="table-container"><table><thead><tr><th>属性</th><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>required</td><td>required</td><td>表单拥有该属性表示其内容不能为空，必填</td></tr><tr><td><strong>placeholder</strong></td><td>提示文本</td><td>表单的提示信息，存在默认值将不显示</td></tr><tr><td>autofocus</td><td>autofocus</td><td>自动聚焦属性，页面加载完成自动聚焦到指定表单</td></tr><tr><td>autocomplete</td><td>off/on</td><td>当用户在字段开始键入时，浏览器基于之前键入过的值，应该显示出在字段中填写的选项。</td></tr><tr><td><strong>multiple</strong></td><td>multiple</td><td>可以多选<strong>文件（按住Ctrl）</strong>提交</td></tr></tbody></table></div><p>拓展：修改 <code>placeholder</code> 中的字体颜色<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::placeholder</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h1><blockquote><p>Cascading Style Sheets（层叠样式表) 实现结构样式相分离。</p></blockquote><p>CSS选择器<br>CSS3伪类<br>CSS伪元素<br>CSS过渡<br>线性渐变，径向渐变<br>CSS动画Animation<br>弹性盒模型<br>经典布局练习（双飞翼，品字布局）+案例<br>制作布局：浮动、定位、显示、盒模型、网格布局、弹性布局、响应式布局</p><h2 id="Emmet-语法"><a href="#Emmet-语法" class="headerlink" title="Emmet 语法"></a>Emmet 语法</h2><blockquote><p>Emmet语法的前身是 `Zen coding,它使用缩写，来提高html/css的编写速度，Vscode内部已经集成该语法.</p></blockquote><ol><li>生成标签直接输入标签名按 <code>tab键</code> 即可比如 div 然后tab键，就可以生成 <code>&lt;div&gt;&lt;/div&gt;</code>;</li><li>如果想要生成多个相同标签加上 <em> 就可以了比如 `div</em>3` 就可以快速生成3个div</li><li>如果有父子级关系的标签，可以用 &gt; 比如 <code>ul&gt;li</code> 就可以了</li><li>如果有兄弟关系的标签，用 + 就可以了比如 <code>div+p</code></li><li>如果生成带有类名或者id名字的，直接写 <code>.demo</code> 或者 <code>#two</code> tab键就可以了</li><li>如果生成的div类名是有顺序的，可以用自增符号 <code>$</code></li><li>如果想要在生成的标签内部写内容可以用 <code>&#123;&#125;</code> 表示。如：<code>&#123;$&#125;</code>。</li></ol><h2 id="CSS-引入方式"><a href="#CSS-引入方式" class="headerlink" title="CSS 引入方式"></a>CSS 引入方式</h2><ol><li>外部样式表（推荐使用：完全实现结构和样式相分离，可控制多个页面。）<ol><li>新建一个后缀名为.css的样式文件，把所有CSS代码都放入此文件中。</li><li>在HTML页面中，使用<link>标签引入这个文件。<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">属性：</span></span><br><span class="line"><span class="comment">1. rel：定义当前文档与被链接文档之间的关系，在这里需要指定为“stylesheet”，表示被链接的文档是一个样式表文件。</span></span><br><span class="line"><span class="comment">2. href：定义所链接外部样式表文件的URL,可以是相对路径，也可以是绝对路径。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;1ink rel=&quot;stylesheet&quot; href=&quot;css文件路径&quot;&gt;</span><br></pre></td></tr></table></figure></li></ol></li><li>内部样式表（部分结构和样式相分离，控制一个页面。）</li><li>行内样式表（书写方便，权重高，控制一个标签。）</li></ol><h2 id="CSS-代码风格"><a href="#CSS-代码风格" class="headerlink" title="CSS 代码风格"></a>CSS 代码风格</h2><ol><li>样式格式书写<ol><li>展开格式书写（更直观）<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line">    <span class="attribute">color</span> : pink ;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li><li>样式大小写风格<ol><li>样式<strong>选择器，属性名，属性值</strong>关键字全部<strong>使用小写</strong>字母，特殊情况除外。</li></ol></li><li>样式空格风格<ol><li>属性值前面，冒号后面，保留一个空格</li><li>选择器（标签）和大括号中间保留空格</li></ol></li><li>CSS属性书写顺序<ol><li>布局定位属性：display/position/float/clear/visibility/overflow (建议display第一个写，毕竟关系到模式）</li><li>自身属性：width/height/margin/padding/border/background</li><li>文本属性：color/font/text-decoration/text-align/vertical-align/white-space/break-word</li><li>其他属性（CSS3):content/cursor/border-radius/box-shadow/text-shadow/background:linear-gradient…</li></ol></li></ol><h2 id="CSS-选择器"><a href="#CSS-选择器" class="headerlink" title="CSS 选择器"></a>CSS 选择器</h2><p>选择器命名规范（语义化）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">(1)页面结构</span><br><span class="line"></span><br><span class="line">容器: container</span><br><span class="line">页头：header</span><br><span class="line">内容：content/container</span><br><span class="line">页面主体：main</span><br><span class="line">页尾：footer</span><br><span class="line">导航：nav</span><br><span class="line">侧栏：sidebar</span><br><span class="line">栏目：column</span><br><span class="line">页面外围控制整体布局宽度：wrapper</span><br><span class="line">左右中：left right center</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(2)导航</span><br><span class="line"></span><br><span class="line">导航：nav</span><br><span class="line">主导航：mainbav</span><br><span class="line">子导航：subnav</span><br><span class="line">顶导航：topnav</span><br><span class="line">边导航：sidebar</span><br><span class="line">左导航：leftsidebar</span><br><span class="line">右导航：rightsidebar</span><br><span class="line">菜单：menu</span><br><span class="line">子菜单：submenu</span><br><span class="line">标题: title</span><br><span class="line">摘要: summary</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(3)功能</span><br><span class="line"></span><br><span class="line">标志：logo</span><br><span class="line">广告：banner</span><br><span class="line">登陆：login</span><br><span class="line">登录条：loginbar</span><br><span class="line">注册：regsiter</span><br><span class="line">搜索：search</span><br><span class="line">功能区：shop</span><br><span class="line">标题：title</span><br><span class="line">加入：joinus</span><br><span class="line">状态：status</span><br><span class="line">按钮：btn</span><br><span class="line">滚动：scroll</span><br><span class="line">标签页：tab</span><br><span class="line">文章列表：list</span><br><span class="line">提示信息：msg</span><br><span class="line">当前的: current</span><br><span class="line">小技巧：tips</span><br><span class="line">图标: icon</span><br><span class="line">注释：note</span><br><span class="line">指南：guild</span><br><span class="line">服务：service</span><br><span class="line">热点：hot</span><br><span class="line">新闻：news</span><br><span class="line">下载：download</span><br><span class="line">投票：vote</span><br><span class="line">合作伙伴：partner</span><br><span class="line">友情链接：link</span><br><span class="line">版权：copyright</span><br></pre></td></tr></table></figure><h3 id="基础选择器"><a href="#基础选择器" class="headerlink" title="基础选择器"></a>基础选择器</h3><ol><li>标签选择器 （用<strong>HTML标签名称</strong>作为选择器）</li><li>类选择器<ol><li>基础使用（单类名）<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.类名 &#123;</span><br><span class="line">    属性<span class="number">1</span>: 属性值<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>类选择器-多类名（应用场景：给含有相同类的元素<strong>统一设置</strong>公共样式）<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 在标签class属性中写多个类名，多个类名中间必须用空格分开 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;class1 class2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol></li><li><p>id选择器（id 选择器<strong>只能调用一次</strong>，后面相同ID 的元素将会被忽略，一般用于页面<strong>唯一性的元素上</strong>，经常和 JavaScript 搭配使用。）</p> <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#ID</span>名 &#123;</span><br><span class="line">    属性<span class="number">1</span>: 属性值<span class="number">1</span>;</span><br></pre></td></tr></table></figure></li><li><p>通配符选择器（使用场景：<strong>清除所有的元素标签的内外边距。统一格式化页面内容</strong>。）</p> <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 使用“*”定义，它表示选取页面中所有元素（标签）。</span><br><span class="line"></span><br><span class="line">* &#123;</span><br><span class="line">    属性<span class="number">1</span>: 属性值<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="复合选择器"><a href="#复合选择器" class="headerlink" title="复合选择器"></a>复合选择器</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. 组合器选择器（根据它们之间的特定关系来选取元素）</span><br><span class="line"><span class="number">2</span>. 伪类选择器（根据特定状态选取元素）</span><br><span class="line"><span class="number">3</span>. 伪元素选择器（选取元素的一部分并设置其样式）</span><br><span class="line"><span class="number">4</span>. 属性选择器（根据属性或属性值来选取元素）</span><br></pre></td></tr></table></figure><ol><li>后代选择器（选择<code>父元素里面子元素</code>）<ol><li>元素1是父级，元素2是子级，最终选择的是元素2</li><li>元素2可以是儿子，也可以是孙子等，只要是元素1的后代即可</li><li>元素1和元素2可以是任意基础选择器<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// 写法：外层标签写在前面，内层标签写在后面，中间用`空格`分隔。</span><br><span class="line"></span><br><span class="line">元素<span class="number">1</span> 元素<span class="number">2</span>&#123;样式声明&#125;</span><br></pre></td></tr></table></figure></li></ol></li><li>子选择器（选择<code>某元素最近一级子元素</code>）<ol><li>子选择器不能通过外部样式表实现   </li><li>只能选择<code>某元素最近一级子元素</code>(亲儿子)<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//  写法：元素<span class="number">1</span>和元素<span class="number">2</span>中间用`大于号`隔开</span><br><span class="line"></span><br><span class="line">元素<span class="number">1</span>&gt;元素<span class="number">2</span>&#123;样式声明&#125;</span><br></pre></td></tr></table></figure></li></ol></li><li>并集选择器（选择多组标签）<ol><li><code>任何形式的选择器</code>都可以作为并集选择器的一部分.</li><li>并集选择器通常用于<code>集体声明</code><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// 写法：并集选择器是各选择器通过`英文逗号(,)`连接而成</span><br><span class="line"></span><br><span class="line">元素<span class="number">1</span>,元素<span class="number">2</span>&#123;样式声明&#125;</span><br></pre></td></tr></table></figure></li></ol></li><li>伪类选择器<ol><li>链接伪类选择器<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 注意事项：为了确保生效，请按照LVHA的循顺序声明 <span class="selector-pseudo">:link</span>- <span class="selector-pseudo">:visited</span>- <span class="selector-pseudo">:hover</span>- <span class="selector-pseudo">:active</span>-</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span> <span class="comment">/*选择所有未被访问的链接*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> <span class="comment">/*选择所有已被访问的链接*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> <span class="comment">/*选择鼠标指针位于其上的链接*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span> <span class="comment">/*选择活动链接（鼠标按下未弹起的链接）*/</span></span><br></pre></td></tr></table></figure></li><li>:focus 伪类选择器 （选取<code>获得焦点</code>的表单元素【主要针对于表单元素】。）<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:focus</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>:yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li></ol><h2 id="CSS-字体属性"><a href="#CSS-字体属性" class="headerlink" title="CSS 字体属性"></a>CSS 字体属性</h2><p>书写规范：</p><ol><li>各种字体之间必须使用<strong>英文逗号隔开</strong></li><li>一般情况下，如果有<strong>空格隔开的多个单词组成的字体，加引号</strong>.</li><li>尽量使用系统默认自带字体，保证在任何用户的浏览器中都能正确显示</li></ol><h3 id="font-family"><a href="#font-family" class="headerlink" title="font-family"></a>font-family</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// CSS使用 <span class="attribute">font-family</span> 属性定义文本的字体系列。(定义多个字体，系统会从前到后解析优先使用已经存在的字体，如果都没有则使用系统默认字体。)</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123; <span class="attribute">font-family</span>:Arial,<span class="string">&quot;Microsoft Yahei&quot;</span>,<span class="string">&quot;微软雅黑&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><h3 id="font-size"><a href="#font-size" class="headerlink" title="font-size"></a>font-size</h3><ol><li><strong>px</strong>(像素）大小是我们网页的最常用的单位</li><li>谷歌浏览器默认的文字大小为16px,不同浏览器可能默认显示的字号大小不一致，<strong>尽量给一个明确值大小</strong>，不要默认大小.</li><li>标题标签比较特殊，需要<strong>单独指定</strong>文字大小</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="font-weight"><a href="#font-weight" class="headerlink" title="font-weight"></a>font-weight</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// <span class="attribute">font-weight</span> 取值：<span class="attribute">normal</span>（默认），bold，number（<span class="number">100</span>~<span class="number">900</span>；<span class="number">400</span>等同于<span class="attribute">normal</span>,而<span class="number">700</span>等同于bold，注意这个数字后面不跟单位。）</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="font-style"><a href="#font-style" class="headerlink" title="font-style"></a>font-style</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 平时我们很少给文字加斜体，反而要给斜体标签（<span class="selector-tag">em</span>,<span class="selector-tag">i</span>)改为不倾斜字体。</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">em</span> <span class="selector-tag">i</span> &#123;</span><br><span class="line">    <span class="attribute">font-style</span>: normal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="font-复合属性"><a href="#font-复合属性" class="headerlink" title="font 复合属性"></a>font 复合属性</h3><ol><li>使用font属性时，必须按语法格式中的顺序书写，<strong>不能更换顺序</strong>，并且各个属性间以<strong>空格隔开</strong>。</li><li>不需要设置的属性可以省略（取默认值）,但必须保留 <strong>font-size和font-family</strong> 属性，否则font属性将不起作用。</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font</span>:font-style font-weight font-size/line-height font-family;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 开发中 <span class="attribute">line-height</span> 常见的写法：可以根据文字大小自动调整行高。（如：<span class="number">12px</span>/<span class="number">1.5</span> 则行高为 <span class="number">12</span> * <span class="number">1.5</span> = <span class="number">18px</span>）</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font</span>: <span class="number">12px</span>/<span class="number">1.5</span> Microsoft YaHei;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="CSS-文本属性"><a href="#CSS-文本属性" class="headerlink" title="CSS 文本属性"></a>CSS 文本属性</h2><h3 id="color"><a href="#color" class="headerlink" title="color"></a>color</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// <span class="attribute">color</span> 取值：预定义的值（red,green,blue）/十六进制代码（<span class="selector-id">#FF0000</span>）/RGB代码（rgb(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>)或rgb(<span class="number">100%</span>,<span class="number">0%</span>,<span class="number">0%</span>)）。</span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="text-align-对齐文本"><a href="#text-align-对齐文本" class="headerlink" title="text-align 对齐文本"></a>text-align 对齐文本</h3><blockquote><p>text-align 让盒子内的文本居中对齐,如果让图片居中对齐，可以将text-align属性加到图片父级盒子上。</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// <span class="attribute">text-align</span> 取值： <span class="attribute">left</span> / center / <span class="attribute">right</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>:center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="text-decoration-装饰文本"><a href="#text-decoration-装饰文本" class="headerlink" title="text-decoration 装饰文本"></a>text-decoration 装饰文本</h3><p>应用场景：</p><ol><li>取消 a 链接默认下划线。</li><li>给文本添加下划线</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// <span class="attribute">text-decoration</span> 取值：<span class="attribute">none</span>（默认） / underline（下划线） / overline（上划线） / line-through（删除线）</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>:underline;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="text-indent"><a href="#text-indent" class="headerlink" title="text-indent"></a>text-indent</h3><p>应用场景： 段落的首行缩进。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// <span class="attribute">text-indent</span> 取值：px / <span class="selector-tag">em</span>（推荐，<span class="selector-tag">em</span> 是一个相对单位，就是当前元素（<span class="attribute">font-size</span>) <span class="number">1</span>个文字的大小，如果当前元素没有设置大小，则会按照父元素的<span class="number">1</span>个文字大小。）</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">text-indent</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="line-height"><a href="#line-height" class="headerlink" title="line-height"></a>line-height</h3><p>行间距的概念：<br>行间距 = 文本高度 + 上间距 + 下间距</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220626184607.png" alt="20220626184607"></p><p>line-height属性用于设置行间的距离（行高）。可以控制<strong>文字行与行之间的距离</strong>.</p><h2 id="CSS-的元素显示模式"><a href="#CSS-的元素显示模式" class="headerlink" title="CSS 的元素显示模式"></a>CSS 的元素显示模式</h2><blockquote><p>HTML元素一般分为<code>块元素</code>和<code>行内元素</code>两种类型。</p></blockquote><h3 id="块元素"><a href="#块元素" class="headerlink" title="块元素"></a>块元素</h3><blockquote><p>常见的块元素有<code>&lt;h1&gt;~&lt;h6&gt;、&lt;p&gt;、&lt;div&gt;、&lt;ul&gt;、&lt;ol&gt;、&lt;li&gt;</code>等，其中<code>&lt;div&gt;</code>标签是最典型的块元素。</p></blockquote><p>块元素特点：</p><ol><li>独占一行。</li><li><code>高度，宽度、外边距以及内边距</code>都可以控制。</li><li><code>宽度默认是容器（父级宽度）的</code>100%`。</li><li>是一个容器及盒子，<code>里面可以放行内或者块级元素</code>。</li></ol><p>注意：文字类的元素内不能使用块级元素</p><ol><li><code>&lt;p&gt;</code>标签主要用于存放文字，因此<code>&lt;p&gt;</code>里面不能放块级元素，特别是不能放<code>&lt;div&gt;</code>。</li><li><code>&lt;h1&gt;~&lt;h6&gt;</code> 都是文字类块级标签，里面也不能放其他块级元素。</li></ol><h3 id="行内元素"><a href="#行内元素" class="headerlink" title="行内元素"></a>行内元素</h3><blockquote><p>常见的行内元素有 <code>&lt;a&gt;、&lt;strong&gt;、&lt;b&gt;、&lt;em&gt;、&lt;i&gt;、&lt;del&gt;、&lt;ins&gt;、&lt;u&gt;、&lt;span&gt;</code> 等，其中<code>&lt;span&gt;</code>标签是最典型的行内元素。有的地方也将行内元素称为<code>内联元素</code>。</p></blockquote><p>行内元素特点：</p><ol><li>相邻行内元素在一行上，<code>一行可以显示多个</code>。</li><li><code>高、宽</code>直接设置是无效的。</li><li>默认宽度就是它<code>本身内容的宽度</code>。</li><li>行内元素<code>只能容纳文本或其他行内元素</code>。</li></ol><p>注意：</p><ol><li>链接里面不能再放链接</li><li>特殊情况链接<code>&lt;a&gt;</code>里面可以放块级元素，但是给<code>&lt;a&gt;</code>转换一下块级模式（display）最安全。</li></ol><h3 id="行内块元素"><a href="#行内块元素" class="headerlink" title="行内块元素"></a>行内块元素</h3><blockquote><p>在行内元素中有几个特殊的标签：<code>&lt;img/&gt;、&lt;input/&gt;、&lt;td&gt;</code>,它们同时具有块元素和行内元素的特点。它们又称为行内块元素。</p></blockquote><p>行内块元素的特点：</p><ol><li>和相邻行内元素（行内块）在一行上，但是他们之间 <code>会有空白缝隙</code>。<code>一行可以显示多个</code>（行内元素特点）。</li><li>默认宽度就是它<code>本身内容的宽度</code>（行内元素特点）。</li><li><code>高度，行高、外边距</code>以及<code>内边距</code>都可以控制（块级元素特点）。</li></ol><h3 id="元素显示模式转换"><a href="#元素显示模式转换" class="headerlink" title="元素显示模式转换"></a>元素显示模式转换</h3><p>应用场景：</p><ol><li>一个模式的元素需要另外一种模式的特性</li><li>增加链接<code>&lt;a&gt;</code>的触发范围</li></ol><p>转换方式：</p><ol><li><strong>转换为块元素：display:block;</strong></li><li>转换为行内元素：display:inline;</li><li><strong>转换为行内块：display:inline-block;</strong></li></ol><h2 id="CSS-背景"><a href="#CSS-背景" class="headerlink" title="CSS 背景"></a>CSS 背景</h2><p>背景颜色、背景图片、背景平铺、背景图片位置、背景图像固定</p><h3 id="background-color"><a href="#background-color" class="headerlink" title="background-color"></a>background-color</h3><h3 id="background-image"><a href="#background-image" class="headerlink" title="background-image"></a>background-image</h3><blockquote><p>background-image 属性描述了元素的背景图像。实际开发常见于logo或者一些装饰性的小图片或者是超大的背景图片，优点是非常便于控制位置（精灵图也是一种运用场景）</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>:</span><br><span class="line">   // 渐变</span><br><span class="line">   <span class="built_in">linear-gradient</span>(to bottom, <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">0</span>,<span class="number">0.5</span>), <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>,<span class="number">0.5</span>)),</span><br><span class="line">   // 背景图片</span><br><span class="line">   <span class="built_in">url</span>(<span class="string">&#x27;xxxx&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="background-repeat"><a href="#background-repeat" class="headerlink" title="background-repeat"></a>background-repeat</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-repeat</span>: repeat | no-repeat | repeat-x | repeat-y</span><br></pre></td></tr></table></figure><h3 id="background-position"><a href="#background-position" class="headerlink" title="background-position"></a>background-position</h3><blockquote><p>利用background-position属性可以改变<code>图片在背景中的位置</code>。应用场景：精灵图</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">1. 参数是方位名词：（left center right）</span></span><br><span class="line"><span class="comment">a. 指定的两个值都是方位名词，则两个值前后顺序无关，比如left top和top left效果一致</span></span><br><span class="line"><span class="comment">b. 只指定了一个方位名词，另一个值省略，则第二个值默认居中对齐</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2. 参数是精确单位</span></span><br><span class="line"><span class="comment">a. 参数值是精确坐标，那么第一个肯定是x坐标，第二个一定是y坐标</span></span><br><span class="line"><span class="comment">b. 只指定一个数值，那该数值一定是x坐标，另一个默认垂直居中</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">3. 参数是混合单位</span></span><br><span class="line"><span class="comment">指定的两个值是精确单位和方位名词混合使用，则第一个值是x坐标，第二个值是y坐标</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">background-position</span>: x y</span><br></pre></td></tr></table></figure><h3 id="background-attachment"><a href="#background-attachment" class="headerlink" title="background-attachment"></a>background-attachment</h3><blockquote><p>设置背景图像是否固定或者随着页面的其余部分滚动。应用场景：<strong>视差滚动的效果。</strong></p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-attachment</span>: scroll | fixed</span><br></pre></td></tr></table></figure><h3 id="background-复合属性"><a href="#background-复合属性" class="headerlink" title="background 复合属性"></a>background 复合属性</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 中间用空格分隔</span><br><span class="line"></span><br><span class="line"><span class="attribute">background</span>:背景颜色 背景图片地址 背景平铺 背景图像滚动 背景图片位置；</span><br><span class="line"></span><br><span class="line">background: transparent <span class="built_in">url</span>(<span class="string">image.jpg</span>) repeat-y fixed top;</span><br></pre></td></tr></table></figure><h3 id="background-rgba"><a href="#background-rgba" class="headerlink" title="background: rgba();"></a>background: rgba();</h3><blockquote><p>背景半透明是指盒子背景半透明，盒子里面的内容不受影响（CSS3新增）</p></blockquote><h3 id="background-size-背景缩放"><a href="#background-size-背景缩放" class="headerlink" title="background-size 背景缩放"></a>background-size 背景缩放</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">单位：长度|百分比|cover|contain;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">cover：把背景图像扩展至足够大，以使背景图像完全覆盖背景区域。</span></span><br><span class="line"><span class="comment">contain：把图像图像扩展至最大尺寸，以使其宽度和高度完全适应内容区域。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="attribute">background-size</span>: 背景图片宽度 背景图片高度;</span><br></pre></td></tr></table></figure><h3 id="linear-gradient"><a href="#linear-gradient" class="headerlink" title="linear-gradient()"></a>linear-gradient()</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 起始方向可以是：方位名词或者度数，如果省略默认就是top */</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(起始方向,颜色<span class="number">1</span>,颜色<span class="number">2</span>,...);</span><br></pre></td></tr></table></figure><h2 id="CSS-三大特性"><a href="#CSS-三大特性" class="headerlink" title="CSS 三大特性"></a>CSS 三大特性</h2><blockquote><p>CSS 三个特性：<code>层叠性、继承性、优先级</code>。</p></blockquote><h3 id="层叠性"><a href="#层叠性" class="headerlink" title="层叠性"></a>层叠性</h3><blockquote><p>相同选择器<code>设置相同</code>的样式，此时一个样式就会<code>覆盖</code>（层叠）另一个冲突的样式。层叠性主要解决<code>样式冲突</code>的问题</p></blockquote><p>层叠原则：</p><ol><li>样式冲突，遵循的原则是<code>就近原则</code>，哪个样式离结构近，就执行哪个样式（覆盖）</li><li>样式不冲突，不会层叠</li></ol><h3 id="继承性"><a href="#继承性" class="headerlink" title="继承性"></a>继承性</h3><blockquote><p>CSS中的继承：<code>子标签会继承父标签的某些样式</code>。主要是<code>文字相关</code>的样式：（<code>text-,font-,line-</code>这些元素开头的可以继承，以及<code>color</code>属性）</p></blockquote><h3 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h3><blockquote><p>当<code>同一个元素指定多个选择器</code>，就会有优先级的产生。</p></blockquote><ol><li>选择器相同，则执行<code>层叠性</code></li><li>选择器不同，则根据<code>选择器权重</code>执行</li></ol><p>选择器权重:</p><ol><li>权重是有4组数字组成，但是不会有进位。</li><li>等级判断从左向右，如果某一位数值相同，则判断下一位数值。</li><li><code>继承的权重是 0</code>， 如果该元素没有直接选中，不管父元素权重多高，子元素得到的权重都是 0。</li><li>通配符选择器高于继承，伪类选择器高于类选择器。</li><li>a 标签自带样式</li></ol><p>权重叠加：</p><p><code>复合选择器</code>，则会有权重叠加，需要计算权重。</p><div class="table-container"><table><thead><tr><th>选择器</th><th>选择器权重</th></tr></thead><tbody><tr><td>继承 或 *</td><td>0,0,0,0</td></tr><tr><td>元素选择器</td><td>0,0,0,1</td></tr><tr><td>类选择器，伪类选择器</td><td>0,0,1,0</td></tr><tr><td>ID选择器</td><td>0,1,0,0</td></tr><tr><td>行内样式style=””</td><td>1,0,0,0</td></tr><tr><td>!important</td><td>∞</td></tr></tbody></table></div><h2 id="CSS-盒子模型"><a href="#CSS-盒子模型" class="headerlink" title="CSS 盒子模型"></a>CSS 盒子模型</h2><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/6b1855c2bf99086cfe75a1afa60d9331.jpeg" alt="6b1855c2bf99086cfe75a1afa60d9331"></p><h3 id="盒子模型的组成"><a href="#盒子模型的组成" class="headerlink" title="盒子模型的组成"></a>盒子模型的组成</h3><ol><li>边框（border: 宽度 px 样式 颜色;)<ol><li>边框会影响盒子实际大小。（比如说盒子宽20px,边框2px,那页面上这个盒子实际占用的宽度是24px。）解决方案：<ol><li>测量盒子大小的时候，<code>不量边框</code>。</li><li>如果测量的时候包含了边框，则需要 <code>width/height 减去边框宽度</code>。</li></ol></li></ol></li><li>内边距（padding)<ol><li>padding 会影响盒子实际大小。解决方案：<ol><li>保证盒子跟效果图大小保持一致，则让 <code>width/height 减去多出来的内边距大小</code>即可。</li></ol></li><li>应用场景：导航栏之间的边距。</li><li>匿名行盒：<a href="http://layout.imweb.io/article/box-type.html">http://layout.imweb.io/article/box-type.html</a></li><li>如果盒子本身<code>没有指定width/height</code>属性，则此时 padding <code>不会撑开盒子大小</code>。</li></ol></li><li>外边距（margin)<ol><li>应用场景：让<code>块级盒子水平居中</code>，方法：<code>margin: 0 auto;</code> 但是必须满足两个条件：<ol><li>盒子必须指定了<code>宽度（width)</code>。</li><li>盒子左右的<code>外边距都设置为 auto</code>。</li><li>注意：以上方法是让<strong>块级元素水平居中</strong>，<code>行内元素</code>或者<code>行内块元素</code>水平居中给其<code>父元素添加text-align:center</code>即可。</li></ol></li><li><strong>外边距合并</strong>：使用 <code>margin</code> 定义块元素的<code>垂直外边距</code>时，可能会出现外边距的合并。<ol><li><strong>相邻块元素垂直外边距的合并。</strong>（当上下相邻的两个块元素（兄弟关系）相遇时，如果上面的元素有下外边距margin-bottom,下面的元素有上外边距margin-top,则他们之间的垂直间距不是margin-bottom与margin-top<strong>之和</strong>。<code>取两个值中的较大者这种现象被称为相邻块元素垂直外边距的合并</code>。）解决方案：<code>尽量只给一个盒子添加margin值。</code><br><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220628233216.png" alt="20220628233216"></li><li><strong>嵌套块元素垂直外边距的塌陷。</strong>（对于两个嵌套关系（父子关系）的块元素，<code>父元素有上外边距同时子元素也有上外边距</code>，此时父元素会塌陷较大的外边距值。<code>浮动、固定，绝对定位的盒子不会有塌陷问题</code>。）解决方案：<code>为父元素添加overflow:hidden</code><br><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220628234207.png" alt="20220628234207"></li></ol></li></ol></li></ol><h3 id="清除内外边距"><a href="#清除内外边距" class="headerlink" title="清除内外边距"></a>清除内外边距</h3><blockquote><p>网页元素很多都带有默认的内外边距，而且不同浏览器默认的也不一致。因此我们在布局前，首先要清除下网页元素的内外边距。</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">0</span>;<span class="comment">/*清除内边距*/</span></span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">0</span>;<span class="comment">/*清除外边距*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：行内元素为了照顾兼容性，尽量只设置<code>左右内外边距</code>，不要设置上下内外边距。但是转换为块级和行内块元素就可以了</strong></p><h3 id="CSS3-新增样式"><a href="#CSS3-新增样式" class="headerlink" title="CSS3 新增样式"></a>CSS3 新增样式</h3><ol><li>圆角边框（border-radius）<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1. 参数值可以为数值或百分比的形式</span></span><br><span class="line"><span class="comment">2. 如果是正方形，想要设置为一个圆，把数值修改为高度或者宽度的一半即可，或者直接写为 50%</span></span><br><span class="line"><span class="comment">3. 如果是个矩形，设置为高度的一半就可以</span></span><br><span class="line"><span class="comment">4. length 属性是一个简写属性，可以跟四个值，分别代表 **左上角、右上角、右下角、左下角**</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="attribute">border-radius</span>: length;</span><br></pre></td></tr></table></figure></li><li>盒子阴影（box-shadow）<ol><li><code>默认的是外阴影（outset)</code>,但是不可以写这个单词，否则导致阴影无效。</li><li>盒子阴影<code>不占用空间</code>，不会影响其他盒子排列。</li></ol></li><li>文字阴影（text-shadow）</li></ol><h2 id="CSS-浮动"><a href="#CSS-浮动" class="headerlink" title="CSS 浮动"></a>CSS 浮动</h2><h3 id="传统网页布局方式"><a href="#传统网页布局方式" class="headerlink" title="传统网页布局方式"></a>传统网页布局方式</h3><blockquote><p>网页布局的本质：用CSS来摆放盒子。把盒子摆放到相应位置</p></blockquote><p>CSS提供了三种传统布局方式（一个页面基本都包含了这三种布局方式。）：</p><ol><li>标准流（普通流/文档流）：默认方式排列<ol><li>块级元素会<code>独占一行</code>，从上向下顺序排列。常用元素：<code>div、hr、p、h1~h6、ul、ol、dl、form、table</code> 。<ol><li>网页布局<strong>块级元素</strong>第一准则：多个块级元素<code>纵向排列找标准流</code>，多个块级元素<code>横向排列找浮动</code>。</li></ol></li><li>行内元素会按照顺序，从<code>左到右顺序排列</code>，碰到父元素边缘则自动换行。常用元素：<code>span、a、i、em</code> 等</li></ol></li><li>浮动（浮动可以改变元素标签默认的排列方式）</li><li>定位</li></ol><h3 id="浮动特性（重点）"><a href="#浮动特性（重点）" class="headerlink" title="浮动特性（重点）"></a>浮动特性（重点）</h3><ol><li>浮动元素会脱离标准流（脱标）<ol><li>脱离标准普通流的控制（浮）移动到指定位置（动）,俗称脱标。</li><li>浮动的盒子<code>不再保留原先的位置</code><br><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220629161333.png" alt="20220629161333"></li></ol></li><li>浮动的元素会<code>一行内显示并且元素顶部对齐</code>。（注意：浮动的元素是互相贴靠在一起的（不会有缝隙）,如果父级宽度<strong>装不下</strong>这些浮动的盒子，多出的盒子会<strong>另起一行对齐</strong>。）<br><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220629162425.png" alt="20220629162425"></li><li><strong>浮动的元素会具有行内块元素的特性。</strong>（<strong>任何元素都可以浮动</strong>。不管原先是什么模式的元素，添加浮动之后<strong>具有行内块元素相似的特性</strong>。）</li><li>浮动元素只会压住它下面标准流的盒子，但是<strong>不会压住下面标准流盒子里面的文字（图片）。</strong></li></ol><h3 id="浮动元素经常和标准流父级搭配使用"><a href="#浮动元素经常和标准流父级搭配使用" class="headerlink" title="浮动元素经常和标准流父级搭配使用"></a>浮动元素经常和标准流父级搭配使用</h3><ol><li>先用<strong>标准流的父元素排列上下位置</strong>，之后<strong>内部子元素采取浮动排列左右位置</strong>。符合网页布局第一准则。<br><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220629182221.png" alt="20220629182221"></li><li>一个元素浮动了，理论上其余的兄弟元素也要浮动。（一个盒子里面有多个子盒子，如果其中一个盒子浮动了，那么其他兄弟也应该浮动，以防止引起问题。）<br>浮动的盒子<strong>只会影响浮动盒子后面的标准流不会影响前面的标准流</strong></li></ol><h3 id="清除浮动"><a href="#清除浮动" class="headerlink" title="清除浮动"></a>清除浮动</h3><blockquote><p>由于父级盒子很多情况下，<strong>不方便给高度</strong>，但是<strong>子盒子浮动又不占有位置</strong>，最后<strong>父级盒子高度为0</strong>时，就会<strong>影响下面的标准流盒子</strong>（塌陷）。</p></blockquote><h4 id="清除浮动语法"><a href="#清除浮动语法" class="headerlink" title="清除浮动语法"></a>清除浮动语法</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123; <span class="attribute">clear</span>: 属性值; &#125;</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>left</td><td>不允许左侧有浮动元素（清除左侧浮动的影响）</td></tr><tr><td>right</td><td>不允许右侧有浮动元素（清除右侧浮动的影响）</td></tr><tr><td><strong>both（常用）</strong></td><td><strong>同时清除左右两侧浮动的影响</strong></td></tr></tbody></table></div><ol><li>清除浮动的本质是<strong>清除浮动元素造成的影响</strong></li><li>如果<strong>父盒子本身有高度，则不需要清除浮动</strong></li><li><strong>清除浮动之后，父级就会根据浮动的子盒子自动检测高度。父级有了高度，就不会影响下面的标准流了</strong></li><li>清除浮动的策略是：<strong>闭合浮动。</strong>（只让浮动在父盒子内部影响，不影响父盒子外面的其他盒子.）</li></ol><h4 id="清除浮动方法"><a href="#清除浮动方法" class="headerlink" title="清除浮动方法"></a>清除浮动方法</h4><ol><li>额外标签法也称为隔墙法，是W3C推荐的做法。<br>额外标签法会在<strong>浮动元素末尾添加一个空的标签（必须是块级元素）</strong>。例如 <code>&lt;div style=&quot;clear: both&quot;&gt;&lt;/div&gt;</code>,或者其他标签(如<code>&lt;br/&gt;</code>等）。<br>优点：通俗易懂，书写方便<br>缺点：添加许多<strong>无意义的标签，结构化较差</strong></li><li><strong>父级添加overflow属性</strong><br>给父级添加 overflow 属性，将其属性值设置为 <code>hidden、auto 或 scroll。</code><br>优点：代码简洁<br>缺点：<strong>无法显示溢出的部分</strong></li><li><strong>父级添加after伪元素</strong><br>:after 方式是额外标签法的升级版。<strong>是给父元素添加。</strong><br>优点：没有增加标签，结构更简单<br>缺点：<strong>照顾低版本浏览器</strong><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="attribute">display</span>: block ;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">    <span class="attribute">visibility</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span> &#123;<span class="comment">/*IE6、7专有*/</span></span><br><span class="line">    *zoom: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><strong>父级添加双伪元素</strong><br>优点：代码更简洁<br>缺点：照顾低版本浏览器<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:before</span>,<span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="attribute">display</span>: table;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span> &#123;</span><br><span class="line">    *zoom: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="PS-切图"><a href="#PS-切图" class="headerlink" title="PS 切图"></a>PS 切图</h2><blockquote><p>UI 设计师完成 PSD 后再由前端去完成页面的还原制作。</p></blockquote><h3 id="PS-测量效果图"><a href="#PS-测量效果图" class="headerlink" title="PS 测量效果图"></a>PS 测量效果图</h3><ul><li>文件→打开：可以打开我们要测量的图片</li><li>Ctrl+R:可以打开标尺，或者视图→标尺</li><li>右击标尺，把里面的单位改为像素</li><li>Ctrl+加号（+)可以放大视图，Ctrl+减号（-)可以缩小视图</li><li>按住空格键，鼠标可以变成小手，拖动PS视图</li><li>用选区拖动可以测量大小</li><li>Ctrl+D可以取消选区，或者在旁边空白处点击一下也可以取消选区</li></ul><h3 id="图层切图"><a href="#图层切图" class="headerlink" title="图层切图"></a>图层切图</h3><h4 id="导出图层"><a href="#导出图层" class="headerlink" title="导出图层"></a>导出图层</h4><ol><li>用选择工具选择对应的图层。</li><li>右击图层→快速导出为PNG。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220630130446.png" alt="20220630130446"></p><h4 id="合并图层"><a href="#合并图层" class="headerlink" title="合并图层"></a>合并图层</h4><ol><li>选中需要的图层：图层菜单→合并图层（<code>ctrl+e</code>)</li><li>右击 → 快速导出为PNG</li></ol><h3 id="切片切图"><a href="#切片切图" class="headerlink" title="切片切图"></a>切片切图</h3><ol><li>利用切片选中图片<br>利用切片工具手动划出:<br><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220630131023.png" alt="20220630131023"></li><li>导出选中的图片<br>文件菜单→导出→存储为web设备所用格式→选择我们要的图片格式→存储。</li></ol><h3 id="PS-插件切图"><a href="#PS-插件切图" class="headerlink" title="PS 插件切图"></a>PS 插件切图</h3><blockquote><p><code>Cutterman</code>（<a href="https://www.cutterman.cn/zh）是一款运行在Photoshop中的插件，能够自动将你需要的图层进行输出，以替代传统的手工“导出web所用格式”以及使用切片工具进行挨个切图的繁琐流程。">https://www.cutterman.cn/zh）是一款运行在Photoshop中的插件，能够自动将你需要的图层进行输出，以替代传统的手工“导出web所用格式”以及使用切片工具进行挨个切图的繁琐流程。</a></p></blockquote><p>注意：Cutterman 插件要求 PS <strong>必须是完整版</strong>。</p><h2 id="页面布局整体思路"><a href="#页面布局整体思路" class="headerlink" title="页面布局整体思路"></a>页面布局整体思路</h2><ol><li>必须确定页面的<strong>版心</strong>（可视区）,我们测量可得知。<ol><li>设置一个类：<code>.w &#123; width: 版心宽度; margin: auto; &#125;</code></li><li>给需要添加版心的盒子添加 <code>.w</code> 类名</li></ol></li><li>分析页面中的行模块，以及每个行模块中的列模块。其实页面布局第一准则.</li><li>一行中的列模块经常浮动布局，先确定每个列的大小，之后确定列的位置.页面布局第二准则</li><li>制作HTML结构。我们还是遵循，<strong>先有结构，后有样式</strong>的原则。结构永远最重要。</li><li>所以，先理清楚布局结构，再写代码尤为重要.这需要我们多写多积累.</li></ol><h2 id="CSS-定位"><a href="#CSS-定位" class="headerlink" title="CSS 定位"></a>CSS 定位</h2><blockquote><p>定位：将盒子<strong>定在某一个位置</strong>，所以定位也是在摆放盒子，按照定位的方式移动盒子。</p></blockquote><h3 id="为什么要用定位"><a href="#为什么要用定位" class="headerlink" title="为什么要用定位"></a>为什么要用定位</h3><ol><li>浮动可以让多个块级盒子一行没有缝隙排列显示，经常用于<strong>横向排列盒子</strong>。</li><li>定位则是可以让盒子<strong>自由的在某个盒子内移动位置</strong>或者<strong>固定屏幕中某个位置</strong>，并且可以<strong>压住其他盒子</strong>。</li></ol><h3 id="定位组成"><a href="#定位组成" class="headerlink" title="定位组成"></a>定位组成</h3><p>定位=定位模式+边偏移（定位模式用于指定一个元素在文档中的<strong>定位方式</strong>。边偏移则决定了该元素的<strong>最终位置</strong>。）</p><h4 id="定位模式：position"><a href="#定位模式：position" class="headerlink" title="定位模式：position"></a>定位模式：position</h4><div class="table-container"><table><thead><tr><th>值</th><th>语义</th></tr></thead><tbody><tr><td>static</td><td>静态定位</td></tr><tr><td>relative</td><td>相对定位</td></tr><tr><td>absolute</td><td>绝对定位</td></tr><tr><td>fixed</td><td>固定定位</td></tr><tr><td>sticky</td><td>粘性定位</td></tr></tbody></table></div><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220701153129.png" alt="20220701153129"></p><ol><li>静态定位（默认定位方式，无定位。）<ol><li>静态定位按照标准流特性摆放位置，它没有边偏移。</li></ol></li><li>相对定位（相对于原来的位置定位。）<ol><li>它是相对于自己原来的位置来移动的（移动位置的时候参照点是自己原来的位置）。</li><li><strong>原来标准流的位置继续保留</strong>，后面的盒子仍然以<strong>标准流的方式对待它</strong>。（不脱标，继续保留原来位置。）</li><li>典型的应用是<strong>做绝对定位的父级。</strong></li></ol></li><li>绝对定位（相对于<strong>祖先元素</strong>定位。）<ol><li>如果没有祖先元素或者祖先元素没有定位，则<strong>以浏览器为准定位</strong>（Document文档）。</li><li>如果祖先元素有定位（相对、绝对、固定定位）,则以<strong>最近一级有定位祖先元素为参考点</strong>移动位置。</li><li><strong>绝对定位不再占有原先的位置。</strong>（脱标）</li><li>子级是绝对定位的话，父级要用相对定位。（<strong>子绝父相。</strong>）<ol><li>子级绝对定位，不会占有位置，可以放到父盒子里面的任何一个地方，不会影响其他的兄弟盒子。</li><li>父盒子需要加定位限制子盒子在父盒子内显示。</li><li>父盒子布局时，需要占有位置，因此父亲只能是相对定位。</li></ol></li></ol></li><li>固定定位（固定于浏览器可视区的位置。）<ol><li>以浏览器的<strong>可视窗口为参照点</strong>移动元素。主要使用场景：可以在浏览器页面滚动时元素的<strong>位置不会改变</strong>。<ol><li>跟父元素没有任何关系。</li><li>不随滚动条滚动。</li></ol></li><li>固定定位<strong>不占有原先的位置</strong>。</li></ol></li><li>粘性定位（相对定位和固定定位的混合。）<ol><li>以浏览器的<strong>可视窗口为参照点移动元素</strong>（固定定位特点）。</li><li>粘性定位<strong>占有原先的位置</strong>（相对定位特点）。</li><li><strong>必须添加</strong> top、left、right、bottom <strong>其中一个才有效。</strong></li></ol></li></ol><h4 id="边偏移"><a href="#边偏移" class="headerlink" title="边偏移"></a>边偏移</h4><div class="table-container"><table><thead><tr><th>边偏移属性</th><th>描述</th></tr></thead><tbody><tr><td>top</td><td>顶端偏移量，定义元素相对于其父元素上边线的距离。</td></tr><tr><td>bottom</td><td>底部偏移量，定义元素相对于其父元素下边线的距离。</td></tr><tr><td>left</td><td>左侧偏移量，定义元素相对于其父元素左边线的距离。</td></tr><tr><td>right</td><td>右侧偏移量，定义元素相对于其父元素右边线的距离。</td></tr></tbody></table></div><h3 id="定位拓展（重要）"><a href="#定位拓展（重要）" class="headerlink" title="定位拓展（重要）"></a>定位拓展（重要）</h3><h4 id="绝对定位"><a href="#绝对定位" class="headerlink" title="绝对定位"></a>绝对定位</h4><ol><li>绝对定位的盒子居中（ <strong>加了绝对定位的盒子不能通过 margin: 0 auto 水平居中</strong>，但是可以通过以下计算方法实现水平和垂直居中。）<ol><li>水平居中<ol><li><code>left:50%;</code> （ 让盒子的左侧移动到父级元素的水平中心位置。）</li><li><code>margin-left:-自身宽度的一半;</code>（ 让盒子向左移动自身宽度的一半。）</li></ol></li><li>垂直居中<ol><li><code>left:50%;</code> （ 让盒子的左侧移动到父级元素的水平中心位置。）</li><li><code>top:50%;</code> （ 让盒子的下侧移动到父级元素的水平中心位置。）</li><li><code>margin-top:-自身宽度的一半;</code>（ 让盒子向上移动自身宽度的一半。）</li><li><code>margin-left:-自身宽度的一半;</code>（ 让盒子向左移动自身宽度的一半。）</li></ol></li></ol></li></ol><h4 id="固定定位"><a href="#固定定位" class="headerlink" title="固定定位"></a>固定定位</h4><ol><li>固定定位小技巧：<strong>固定在版心右侧位置</strong>。算法：<ol><li>让固定定位的盒子 <code>left:50%</code> 。走到浏览器可视区（也可以看做版心）的一半位置。</li><li>让固定定位的盒子<code>margin-left: 版心宽度的一半距离</code>。多走版心宽度的一半位置就可以让固定定位的盒子贴着版心右侧对齐了。<br>效果：<br><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220824162125.png" alt="20220824162125"></li></ol></li></ol><h4 id="定位特殊特性"><a href="#定位特殊特性" class="headerlink" title="定位特殊特性"></a>定位特殊特性</h4><ol><li><strong>行内元素</strong>添加<strong>绝对或者固定定位</strong>，可以<strong>直接设置高度和宽度</strong>。</li><li><strong>块级元素</strong>添加<strong>绝对或者固定定位</strong>，如果不给宽度或者高度，<strong>默认大小是内容的大小</strong>。</li><li><strong>脱标的盒子不会触发外边距塌陷。（浮动元素、绝对定位（固定定位）元素的都不会触发外边距合并的问题</strong>。）</li><li><strong>绝对定位（固定定位）会完全压住盒子。</strong>（浮动元素不同，只会压住它下面标准流的盒子，但是不会压住下面标准流盒子里面的文字（图片）但是<strong>绝对定位（固定定位）会压住下面标准流所有的内容</strong>。）</li></ol><h3 id="定位叠放次序-z-index"><a href="#定位叠放次序-z-index" class="headerlink" title="定位叠放次序 z-index"></a>定位叠放次序 z-index</h3><blockquote><p>在使用定位布局时，可能会出现盒子重叠的情况。此时，可以使用z-index来控制盒子的<strong>前后次序</strong>（z轴）</p></blockquote><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1. 数值可以是正整数、负整数或0,默认是auto,数值越大，盒子越靠上。</span></span><br><span class="line"><span class="comment">2. 如果属性值相同，则按照书写顺序，后来居上。</span></span><br><span class="line"><span class="comment">3. 数字后面不能加单位。</span></span><br><span class="line"><span class="comment">4. 只有定位的盒子才有z-index属性。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">选择器 &#123; <span class="attribute">z-index</span>:<span class="number">1</span>; &#125;</span><br></pre></td></tr></table></figure><h2 id="CSS-元素的显示与隐藏"><a href="#CSS-元素的显示与隐藏" class="headerlink" title="CSS 元素的显示与隐藏"></a>CSS 元素的显示与隐藏</h2><ol><li>display显示隐藏<br>display属性用于设置一个元素应如何显示。<ol><li>display:none; 隐藏对象（<strong>不再占有原来的位置</strong>。）</li><li>display:block; 除了转换为块级元素之外，同时还有显示元素的意思</li></ol></li><li>visibility显示隐藏（<strong>继续占有原来的位置</strong>。）<ol><li>visibility:visible; 元素可视。</li><li>visibility:hidden; 元素隐藏。</li></ol></li><li>overflow 溢出显示隐藏<ol><li>如果<strong>有定位的盒子</strong>，<strong>请慎用 overflow:hidden</strong> 因为它会隐藏多余的部分。</li></ol></li></ol><h2 id="CSS-高级技巧"><a href="#CSS-高级技巧" class="headerlink" title="CSS 高级技巧"></a>CSS 高级技巧</h2><h3 id="精灵图"><a href="#精灵图" class="headerlink" title="精灵图"></a>精灵图</h3><blockquote><p>一个网页中往往会应用很多小的背景图像作为修饰，当网页中的图像过多时，服务器就会频繁地接收和发送请求图片，造成服务器请求压力过大，这将大大降低页面的加载速度。因此，<strong>为了有效地减少服务器接收和发送请求的次数，提高页面的加载速度</strong>，出现了CSS精灵技术（也称CSS Sprites、CSS雪碧）。</p></blockquote><p><strong>核心原理</strong>：将网页中的一些小<strong>背景图像整合到一张大图中</strong>，这样服务器只需要一次请求就可以了。</p><p>精灵图使用：</p><ol><li>主要借助于背景位置来实现：<code>background-position</code></li><li>一般情况下精灵图都是负值。（千万注意网页中的坐标：x轴右边走是正值，左边走是负值，y轴同理。）<ol><li>使用 photoshop 获取 X、Y 坐标: （使用切片工具选择区域，然后右击切片查看切片选项。）<br><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220701221933.png" alt="20220701221933"></li><li>使用 photoshop 获取 X、Y 坐标: 按下 <code>F8</code> 键调出信息面板获取信息。(推荐)<br><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220705145622.png" alt="20220705145622"></li></ol></li></ol><p>精灵图是有诸多优点的，但是缺点很明显：</p><ol><li>图片文件还是比较大的。</li><li>图片本身放大和缩小会失真。</li><li>一旦图片制作完毕想要更换非常复杂。</li></ol><h3 id="字体图标"><a href="#字体图标" class="headerlink" title="字体图标"></a>字体图标</h3><blockquote><p>字体图标可以为前端工程师提供一种方便高效的图标使用方式，<strong>展示的是图标，本质属于字体。</strong></p></blockquote><p>字体图标使用：</p><ol><li>字体图标的下载<ol><li>阿里 iconfont字库：<a href="http://www.iconfont.cn/">http://www.iconfont.cn/</a></li><li>Font Awesome：<a href="https://fontawesome.com/icons">https://fontawesome.com/icons</a></li><li>icomoon字库：<a href="http://icomoon.io">http://icomoon.io</a></li></ol></li><li>字体图标的引入（具体可查看字体文件中的 <code>demo</code>，里面有使用步骤。）</li><li>字体图标的追加（各个字体库追加方法不同，用到的时候再自行百度。）</li></ol><p>字体图标的优点：</p><ol><li>轻量级：一个图标字体要比一系列的图像要小。一旦字体加载了，图标就会马上渲染出来，减少了服务器请求。</li><li>灵活性：本质其实是文字，可以很随意的改变颜色、产生阴影、透明效果、旋转等。</li><li>兼容性：几乎支持所有的浏览器，请放心使用。</li></ol><p>注意：<strong>字体图标不能替代精灵技术</strong>，只是对工作中图标部分技术的提升和优化。</p><h3 id="CSS-三角"><a href="#CSS-三角" class="headerlink" title="CSS 三角"></a>CSS 三角</h3><blockquote><p>原理：利用盒子 border 属性设置 transparent 然后只保留一个边显示。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220702004815.png" alt="20220702004815"></p><p>等腰三角：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">line-height</span>: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">font-size</span>: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">border</span>: <span class="number">50px</span> solid transparent;</span><br><span class="line">   <span class="attribute">border-left-color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直角三角：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">border-color</span>: transparent red transparent transparent;</span><br><span class="line">   <span class="attribute">border-style</span>: solid;</span><br><span class="line">   <span class="attribute">border-width</span>: <span class="number">22px</span> <span class="number">8px</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CSS-用户界面样式"><a href="#CSS-用户界面样式" class="headerlink" title="CSS 用户界面样式"></a>CSS 用户界面样式</h3><ol><li>更改用户的鼠标样式 <code>cursor</code></li><li>表单轮廓 <code>outline</code><br>给表单添加 <code>outline: 0;</code> 或者 <code>outline: none;</code> 样式之后，就可以去掉默认的蓝色边框。</li><li>防止表单域拖拽 <code>resize</code><br>给文本域添加 <code>resize: none;</code></li></ol><h3 id="vertical-align"><a href="#vertical-align" class="headerlink" title="vertical-align"></a>vertical-align</h3><blockquote><p>vertical-align属性使用场景：经常用于设置图片或者表单（<strong>只针对于行内元素或者行内块元素有效。</strong>）和文字<strong>垂直对齐</strong>。</p></blockquote><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">vertical-align</span> : baseline | top | middle | bottom</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220702012710.png" alt="20220702012710"></p><p>解决图片底部默认空白缝隙问题：（bug:图片底侧会有一个空白缝隙，原因是行内块元素会和文字的基线对齐。）</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220702120325.png" alt="20220702120325"></p><p>解决方案：</p><ol><li>给图片添加 <strong>vertical-align: middle | top | bottom （提倡使用）</strong></li><li>把图片转换为块级元素 display: block;</li></ol><h3 id="溢出的文字省略号显示"><a href="#溢出的文字省略号显示" class="headerlink" title="溢出的文字省略号显示"></a>溢出的文字省略号显示</h3><blockquote><p>更推荐让后台人员来做这个效果，因为后台人员可以设置显示多少个字，操作更简单。</p></blockquote><ol><li><strong>单行</strong>文本溢出显示省略号<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*1.先强制一行内显示文本 (默认 normal 自动换行）*/</span></span><br><span class="line"><span class="attribute">white-space</span>: nowrap;</span><br><span class="line"><span class="comment">/*2.超出的部分隐藏*/</span></span><br><span class="line"><span class="attribute">overflow</span>: hidden;</span><br><span class="line"><span class="comment">/*3.文字用省略号替代超出的部分*/</span></span><br><span class="line"><span class="attribute">text-overflow</span>: ellipsis;</span><br></pre></td></tr></table></figure></li><li><strong>多行</strong>文本溢出显示省略号（要注意包含文字的盒子<strong>设置合理的高度。</strong>）<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">overflow</span>: hidden;</span><br><span class="line"><span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line"><span class="comment">/*弹性伸缩盒子模型显示*/</span></span><br><span class="line"><span class="attribute">display</span>: -webkit-box;</span><br><span class="line"><span class="comment">/*限制在一个块元素显示的文本的行数*/</span></span><br><span class="line">-webkit-line-clamp: <span class="number">2</span>;</span><br><span class="line"><span class="comment">/*设置或检索伸缩盒对象的子元素的排列方式*/</span></span><br><span class="line">-webkit-box-orient: vertical;</span><br></pre></td></tr></table></figure></li></ol><h3 id="常见布局技巧"><a href="#常见布局技巧" class="headerlink" title="常见布局技巧"></a>常见布局技巧</h3><ol><li>margin负值的运用<br>解决盒子边框叠加的问题：<br><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220702132215.png" alt="20220702132215"><br>让每个盒子margin往左侧移动-1px正好压住相邻盒子边框：<br><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220702132729.png" alt="20220702132729"><br>添加鼠标 hover 边框效果：如果父级没有有定位，则直接给子元素加相对定位（保留位置）如果父级有定位，则加z-index 提高层级<br><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220702133913.png" alt="20220702133913"></li><li>文字围绕浮动元素（浮动元素不会压住文字。）<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: royalblue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> <span class="selector-class">.img</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> <span class="selector-class">.img</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;img&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./Static/img/lunbotu.jpeg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet consectetur adipisicing elit. Similique fuga ea earum tempora? Quae exercitationem</span><br><span class="line">            explicabo magni, perferendis modi harum quidem beatae consequatur doloribus tempore cumque fugiat laborum</span><br><span class="line">            cupiditate deserunt.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>行内块的巧妙运用（给行内元素/行内块元素的父级添加 <code>text-align: center;</code> 属性即可实现行内元素/行内块元素水平居中。）<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">600px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">48px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: springgreen;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">48px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">48px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">48px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: royalblue;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="CSS-初始化（京东）"><a href="#CSS-初始化（京东）" class="headerlink" title="CSS 初始化（京东）"></a>CSS 初始化（京东）</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">em</span>,</span><br><span class="line"><span class="selector-tag">i</span> &#123;</span><br><span class="line">    <span class="attribute">font-style</span>: normal</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">vertical-align</span>: middle</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#666</span>;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#c81623</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: Microsoft YaHei, Heiti SC, tahoma, arial, Hiragino Sans GB, <span class="string">&quot;\5B8B\4F53&quot;</span>, sans-serif</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="comment">/* CSS3 抗锯齿，让文字显示的更加清晰 */</span></span><br><span class="line">    -webkit-<span class="attribute">font-smoothing</span>: antialiased;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">font</span>: <span class="number">12px</span>/<span class="number">1.5</span> Microsoft YaHei, Heiti SC, tahoma, arial, Hiragino Sans GB, <span class="string">&quot;\5B8B\4F53&quot;</span>, sans-serif;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#666</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.hide</span>,</span><br><span class="line"><span class="selector-class">.none</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">visibility</span>: hidden;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;.&quot;</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.clearfix</span> &#123;</span><br><span class="line">    *zoom: <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="CSS3-新特性"><a href="#CSS3-新特性" class="headerlink" title="CSS3 新特性"></a>CSS3 新特性</h2><h3 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h3><blockquote><p>属性选择器可以根据元素<strong>特定的属性</strong>来<strong>选择元素</strong>。这样就可以不用借助于类或者id选择器。</p></blockquote><div class="table-container"><table><thead><tr><th>选择符</th><th>描述</th></tr></thead><tbody><tr><td>E[att]</td><td>选择<strong>具有</strong>att属性的E元素</td></tr><tr><td><strong>E[att=”val”]</strong></td><td>选择具有att属性且属性值<strong>等于</strong>val的E元素</td></tr><tr><td>E[att^=”val”]</td><td>匹配具有att属性且值以val<strong>开头</strong>的E元素</td></tr><tr><td>E[att$=”val”]</td><td>匹配具有att属性且值以val<strong>结尾</strong>的E元素</td></tr><tr><td>E[att*=”val”]</td><td>匹配具有att属性且值中<strong>含有</strong>val的E元素</td></tr></tbody></table></div><p>补充：注意权重问题，类选择器、伪类选择器、<strong>属性选择器，权重为 10</strong>。</p><h3 id="结构伪类选择器"><a href="#结构伪类选择器" class="headerlink" title="结构伪类选择器"></a>结构伪类选择器</h3><blockquote><p>结构伪类选择器主要根据<strong>文档结构</strong>来选择器元素，常用于<strong>根据父级选择器里面的子元素</strong></p></blockquote><div class="table-container"><table><thead><tr><th>选择符</th><th>描述</th></tr></thead><tbody><tr><td>E:first-child</td><td>匹配父元素中的第一个子元素E</td></tr><tr><td>E:last-child</td><td>匹配父元素中最后一个E元素</td></tr><tr><td><strong>E:nth-child(n)</strong></td><td>匹配父元素中的第n个子元素E</td></tr><tr><td>E:first-of-type</td><td>指定类型E的第一个</td></tr><tr><td>E:last-of-type</td><td>指定类型E的最后一个</td></tr><tr><td>E:nth-of-type(n)</td><td>指定类型E的第n个</td></tr></tbody></table></div><p>补充1：E:nth-child(n) 不仅可以输入数字单选，还可以<strong>输入关键字和公式</strong>进行多选。</p><ol><li>n 如果是数字，就是选择第n个子元素，里面数字从1开始…</li><li>n可以是关键字：<strong>even偶数，odd奇数</strong></li><li>n可以是公式：常见的公式如下（如果n是公式（只能是 n 不能是其他字母），则<strong>从0开始计算，但是第0个元素或者超出了元素的个数会被忽略</strong>）</li></ol><div class="table-container"><table><thead><tr><th>公式</th><th>取值</th></tr></thead><tbody><tr><td>2n</td><td>偶数</td></tr><tr><td>2n+1</td><td>奇数</td></tr><tr><td>5n</td><td>5 10 15…</td></tr><tr><td>n+5</td><td>从第5个开始（包含第五个）到最后</td></tr><tr><td>-n+5</td><td>前5个（包含第5个）…</td></tr></tbody></table></div><p>补充2：<strong>E:nth-child(n) 和 E:nth-of-type(n) 的区别</strong></p><p><strong>E:nth-child(n) 是选择父元素的第n个子元素。</strong></p><ul><li>nth-child 对父元素里面所有孩子排序选择（序号是固定的）<strong>先找到第n个孩子，然后看看是否和E匹配</strong></li></ul><p><strong>E:nth-of-type(n) 是选择父元素的第n个同类型的子元素.</strong></p><ul><li>nth-of-type 对父元素里面<strong>指定子元素</strong>进行排序选择。<strong>先去匹配E,然后再根据E找第n个孩子</strong></li></ul><h3 id="伪元素选择器"><a href="#伪元素选择器" class="headerlink" title="伪元素选择器"></a>伪元素选择器</h3><blockquote><p>伪元素选择器可以帮助我们<strong>利用CSS创建新标签元素</strong>，而不需要HTML标签，从而<strong>简化HTML结构</strong>。</p></blockquote><div class="table-container"><table><thead><tr><th>选择符</th><th>描述</th></tr></thead><tbody><tr><td>::before</td><td>在元素内部的前面插入内容</td></tr><tr><td>::after</td><td>在元素内部的后面插入内容</td></tr></tbody></table></div><p>注意：</p><ol><li>before和after创建一个元素，但是属于<strong>行内元素，不可以直接设置宽高。</strong></li><li>新创建的这个元素在文档树中是找不到的，所以我们称为伪元素</li><li>语法：element::before {}</li><li>before和after必须有<strong>content属性</strong></li><li>before在父元素<strong>内容（内部）</strong>的前面创建元素，after在父元素内容的后面插入元素</li><li>伪元素选择器和标签选择器一样，<strong>权重为1</strong></li></ol><p>伪元素应用场景：</p><ol><li>伪元素字体图标</li><li>创建遮罩层</li><li>清除浮动</li></ol><h3 id="CSS3-盒子模型"><a href="#CSS3-盒子模型" class="headerlink" title="CSS3 盒子模型"></a>CSS3 盒子模型</h3><blockquote><p>CSS3 中可以通过 <strong>box-sizing</strong> 来指定盒模型，有2个值：即可指定为 content-box、<strong>border-box</strong></p></blockquote><ol><li>box-sizing: <code>content-box</code> 盒子大小为 width+padding+border（以前默认的）</li><li>box-sizing: <code>border-box</code> 盒子大小为 width（ padding 和 border 就不会撑大盒子了（<strong>前提 padding 和  border 不会超过 width 宽度</strong>））</li></ol><h3 id="CSS3-其他特性（了解）"><a href="#CSS3-其他特性（了解）" class="headerlink" title="CSS3 其他特性（了解）"></a>CSS3 其他特性（了解）</h3><ol><li>CSS3 filter: filter CSS属性 将模糊或颜色偏移等图形效果应用于元素。</li><li>CSS3 calc 函数：calc() 函数可以让你在声明 CSS 属性值时执行一些计算。例：<code>width: calc(100% - 80px);</code> 括号里面可以使用 <code>+ - * /</code> 来进行计算。</li></ol><h3 id="CSS3-过渡（重点）"><a href="#CSS3-过渡（重点）" class="headerlink" title="CSS3 过渡（重点）"></a>CSS3 过渡（重点）</h3><blockquote><p>经常和 <code>:hover</code> 一起搭配使用。(谁做过渡给谁加,多个变换属性利用<strong>逗号</strong>进行分隔，都变换就属性写<code>all</code>就行。)</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">   <span class="attribute">background-color</span>: tomato;</span><br><span class="line">   <span class="comment">/* 谁做过渡给谁加 */</span></span><br><span class="line">   <span class="attribute">transition</span>: all .<span class="number">5s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">   <span class="attribute">background-color</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CSS3-转换"><a href="#CSS3-转换" class="headerlink" title="CSS3 转换"></a>CSS3 转换</h3><blockquote><p>转换（transform) 是CSS3中具有颠覆性的特征之一，可以实现元素的位移、旋转、缩放等效果（可以简单理解为变形）</p></blockquote><h4 id="2D转换"><a href="#2D转换" class="headerlink" title="2D转换"></a>2D转换</h4><p>2D转换是改变标签在二维平面上的位置和形状的一种技术。</p><p>二维坐标系：</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220705182802.png" alt="20220705182802"></p><ol><li>移动：translate<br> 2D移动是2D转换里面的一种功能，可以改变元素在页面中的位置，类似<strong>定位</strong>。 <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform</span>: <span class="built_in">translate</span>(x,y);</span><br><span class="line"><span class="comment">/* 或者分开写 */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translateX</span>(n);</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translateY</span>(n);</span><br></pre></td></tr></table></figure> 重点：<ul><li>定义2D转换中的移动，沿着X和Y轴移动元素</li><li>translate最大的优点：<strong>不会影响到其他元素的位置</strong></li><li>translate中的百分比单位是<strong>相对于自身元素的</strong>translate: (50%,50%);</li><li>对<strong>行内标签</strong>没有效果</li></ul></li><li>旋转：rotate<br>2D旋转指的是让元素在2维平面内<strong>顺时针旋转或者逆时针旋转</strong>。<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(度数)</span><br></pre></td></tr></table></figure>重点：<ul><li>rotate里面跟度数，单位是 <code>deg</code> 比如 rotate(45deg)</li><li>角度为正时，顺时针，负时，为逆时针</li><li>默认旋转的<strong>中心点</strong>是元素的中心点<ul><li>2D转换中心点 <code>transform-origin</code>（设置元素转换的中心点）</li></ul></li></ul></li><li>缩放：scale<br>只要给元素添加上了这个属性就能控制它放大还是缩小。<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 参数之间用逗号分隔 --&gt;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">scale</span>(x,y);</span><br></pre></td></tr></table></figure>重点：<ul><li>transform: scale(1,1):宽和高都放大一倍，相对于没有放大</li><li>transform: scale(2,2):宽和高都放大了2倍</li><li>transform: scale(2):只写一个参数，第二个参数则和第一个参数一样，相当于scale(2,2)</li><li>transform: scale(0.5,0.5):缩小</li><li>sacle 缩放最大的优势：<strong>可以设置转换中心点缩放</strong>，默认以中心点缩放的，而且<strong>不影响其他盒子。</strong></li></ul></li><li>2D 转换综合写法（<code>transform:translate()rotate()scale()...</code>）<ul><li>其顺序会影转换的效果。（先旋转会改变坐标轴方向）</li><li>当我们同时有位移和其他属性的时候，记得要将<strong>位移放到最前</strong></li></ul></li></ol><p><strong>transform: translate 拓展：</strong>利用translate中的百分比单位是相对于自身元素，让一个盒子<strong>水平垂直居中</strong><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">   <span class="attribute">position</span>: absolute;</span><br><span class="line">   <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">   <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">   <span class="comment">/* translate(-50%, -50%) 是向x轴和y轴移动负的自身宽度一半 */</span></span><br><span class="line">   <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>);</span><br><span class="line">   <span class="attribute">background-color</span>: cornsilk;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>transform: rotate 拓展：</strong> 纯 CSS3 书写三角</p><p>效果图：</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220706151741.png" alt="20220706151741"></p><p>代码：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">45deg</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">right</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-right</span>: <span class="number">1px</span> solid <span class="number">#e44d26</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#e44d26</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>transform: rotate 拓展</strong>：旋转中心点</p><p>效果图：</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220706153950.png" alt="20220706153950"></p><p>代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid slateblue;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">content</span>: <span class="string">&quot;CONTENT&quot;</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: teal;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 核心代码 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform-origin</span>: left bottom;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">180deg</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: all .<span class="number">5s</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>)</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3D转换"><a href="#3D转换" class="headerlink" title="3D转换"></a>3D转换</h4><p>三维坐标系其实就是指立体空间，立体空间是由3个轴共同组成的</p><ul><li>x轴：水平向右注意：x右边是正值，左边是负值</li><li>y轴：垂直向下注意：y下面是正值，上面是负值</li><li>z轴：垂直屏幕注意：往外面是正值，往里面是负值</li></ul><ol><li>3D位移：translate3d(x,y,z)<ul><li>translform: translateX(100px): 仅仅是在X轴上移动</li><li>translform: translateY(100px): 仅仅是在Y轴上移动</li><li>translform: translateZ(100px): 仅仅是在Z轴上移动（<strong>注意：translateZ一般用px单位</strong>）</li><li>transform: translate3d(x,y,z): 其中x、y、Z分别指要移动的轴的方向的距离</li></ul></li><li>3D旋转：rotate3d(x,y,z)<ul><li>transform: rotateX(45deg): 沿着x轴正方向旋转45度</li><li>transform: rotateY(45deg): 沿着y轴正方向旋转45deg</li><li>transform: rotateZ(45deg): 沿着Z轴正方向旋转45deg</li><li>transform: rotate3d(x,y,z,deg): 沿着自定义轴旋转deg为角度（了解即可）</li></ul></li><li>透视：perspective<br><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220706222919.png" alt="20220706222919"><ul><li>如果想要在网页产生3D效果需要透视（理解成3D物体投影在2D平面内）。</li><li>透视我们也称为视距：视距就是人的眼睛到屏幕的距离</li><li>距离视觉点越近的在电脑平面成像越大，越远成像越小</li><li>透视的单位是<strong>像素</strong></li><li>透视写在被观察元素的<strong>父盒子</strong>上面的</li><li>d: 就是视距，视距就是一个距离人的眼睛到屏幕的距离。</li><li>z: 就是z轴，<strong>物体距离屏幕的距离</strong>，z轴越大（正值）我们看到的物体就越大。</li></ul></li><li>3D呈现 transfrom-style（控制子元素是否开启三维立体环境）<ul><li>transform-style: flat子元素不开启3d立体空间默认的</li><li>transform-style: preserve-3d;子元素开启立体空间</li><li>代码写给父级，但是影响的是子盒子</li><li>这个属性很重要，后面必用</li></ul></li></ol><h3 id="CSS3-动画"><a href="#CSS3-动画" class="headerlink" title="CSS3 动画"></a>CSS3 动画</h3><blockquote><p>动画（animation)是CSS3中具有颠覆性的特征之一，可通过设置多个节点来精确控制一个或一组动画,常用来实现复杂的幼画效果。</p></blockquote><h4 id="动画的基本使用"><a href="#动画的基本使用" class="headerlink" title="动画的基本使用"></a>动画的基本使用</h4><p>制作动画分为两步：</p><ol><li>定义动画<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">动画序列：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">0%是动画的开始，100%是动画的完成。这样的规则就是动画序列。</span></span><br><span class="line"><span class="comment">在 @keyframes 中规定某项 CSS 样式，就能创建由当前样式逐渐改为新样式的动画效果。</span></span><br><span class="line"><span class="comment">动画是使元素从一种样式逐渐变化为另一种样式的效果。您可以改变**任意多的样式任意多的次数**。</span></span><br><span class="line"><span class="comment">请用百分比来规定变化发生的时间，或用关键词 &quot;from&quot; 和 &quot;to&quot; ,等同于0%和100%。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> 动画名称 &#123;</span><br><span class="line">   <span class="number">0%</span> &#123;</span><br><span class="line">       <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="number">100%</span> &#123;</span><br><span class="line">       <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>调用动画<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">元素 &#123;</span><br><span class="line">   <span class="comment">/*调用动画*/</span></span><br><span class="line">   <span class="attribute">animation-name</span>: 动画名称;</span><br><span class="line">   <span class="comment">/*持续时间*/</span></span><br><span class="line">   <span class="attribute">animation-duration</span>: 持续时间;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="动画常用属性"><a href="#动画常用属性" class="headerlink" title="动画常用属性"></a>动画常用属性</h4><div class="table-container"><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>@keyframes</td><td>规定动画。</td></tr><tr><td>animation</td><td>所有动画属性的简写属性，除了 animation-play-state 属性。</td></tr><tr><td>animation-name</td><td>规定 @keyframes 动画的名称。（必须的）</td></tr><tr><td>animation-duration</td><td>规定动画完成一个周期所花费的秒或毫秒，默认是 0。（必须的）</td></tr><tr><td>animation-timing-function</td><td>规定动画的速度曲线，默认是 “ease”。</td></tr><tr><td>animation-delay</td><td>规定动画何时开始，默认是 0。</td></tr><tr><td>animation-iteration-count</td><td>规定动画被播放的次数，默认是 1,还有 infinite</td></tr><tr><td>animation-direction</td><td>规定动画是否在下一周期逆向播放，默认是 “normal” , alternate 逆播放</td></tr><tr><td>animation-play-state</td><td>规定动画是否正在运行或暂停。默认是 “running” ,还有 “paused” 。</td></tr><tr><td>animation-fill-mode</td><td>规定动画结束后状态，保持 forwards 回到起始 backwards</td></tr></tbody></table></div><p>动画简写属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* animation: 动画名称 持续时间 运动曲线 何时开始 播放次数 是否反方向 动画起始或者结束的状态； */</span></span><br><span class="line"><span class="attribute">animation</span>: name duration timing-function delay iteration-count direction fill-mode;</span><br></pre></td></tr></table></figure><h3 id="浏览器私有前缀"><a href="#浏览器私有前缀" class="headerlink" title="浏览器私有前缀"></a>浏览器私有前缀</h3><blockquote><p>浏览器私有前缀是为了兼容老版本的写法，比较新版本的浏览器无须添加。</p></blockquote><p>私有前缀：</p><p>-moz-: 代表firefox浏览器私有属性<br>-ms-: 代表ie浏览器私有属性<br>-webkit-: 代表satari、chrome私有属性<br>-o-: 代表Opera私有属性</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> CSS </category>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css(3) </tag>
            
            <tag> html(5) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端开发手册</title>
      <link href="/2022/06/23TEMP/%E5%B7%A5%E5%85%B7_%E6%89%8B%E5%86%8C_%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/f26f5ee8/"/>
      <url>/2022/06/23TEMP/%E5%B7%A5%E5%85%B7_%E6%89%8B%E5%86%8C_%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/f26f5ee8/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><p>HTML基础语法 | 排版标签 | 路径 | 多媒体标签 | 链接标签 | 列表标签 | 表格标签 | 表单标签 | 布局标签 | 语义化标签 | 字符实体 | SEO 基础的优化(logo 优化)</p><h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h1><p>选择器 | 外观 | 文字 | 背景 | 标准流 | 三大特性 | 盒模型 | 伪元素 | 浮动 | 伪类 | 定位 | 圆角 | 阴影 | 透明 | 过渡 | 显示 | 网格布局 | 弹性布局(圣杯布局，双飞翼布局，品字布局)</p><h1 id="移动-Web"><a href="#移动-Web" class="headerlink" title="移动 Web"></a>移动 Web</h1><h2 id="CSS高级特效"><a href="#CSS高级特效" class="headerlink" title="CSS高级特效"></a>CSS高级特效</h2><p>字体图标 ｜2D转换｜3D转换｜动画</p><h2 id="移动适配"><a href="#移动适配" class="headerlink" title="移动适配"></a>移动适配</h2><p>rem ｜ vw/vh｜Flex布局模型｜Less基础语法｜视口｜分辨率｜二倍图｜移动适配｜媒体查询</p><h2 id="响应式"><a href="#响应式" class="headerlink" title="响应式"></a>响应式</h2><p>媒体查询｜ bootstrap框架｜栅格系统｜组件｜响应式网页布局</p><h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><h2 id="JavaScript-基础"><a href="#JavaScript-基础" class="headerlink" title="JavaScript 基础"></a>JavaScript 基础</h2><p>变量 | 基本数据类型 | 数据类型的转换 | 运算符 | if分支 | switch分支 | 三元表达式 | while循环 | for循环 | 数组 | 函数 | 对象 | 内置对象 | let | const | 字面量</p><ol><li>JS 阻塞</li><li>懒加载</li><li>防抖 / 节流</li></ol><h2 id="WebAPI"><a href="#WebAPI" class="headerlink" title="WebAPI"></a>WebAPI</h2><h3 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h3><p>DOM树 | DOM对象 | 获取元素 | innerHTML | style | className | classList | 间歇函数 | 延迟函数 | 事件监听 | 鼠标事件 | 键盘事件 | 高阶函数 | 环境对象 | 节点操作 | 事件流 | 事件委托 | 元素位置</p><h3 id="BOM"><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h3><p>BOM | window对象 | swiper插件 | 本地存储 | 自定义属性 | 正则表达式</p><h2 id="JavaScript高级"><a href="#JavaScript高级" class="headerlink" title="JavaScript高级"></a>JavaScript高级</h2><p>构造函数 | 单体对象 | 面向对象 | 原型 | 解构 | 剩余 | 展开 | 箭头函数 | Object | Array | 严格模式 | 闭包 | 继承 | 防抖 | 节流 | 异常处理 | 深浅拷贝</p><h2 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h2><blockquote><ul><li>利用 axios 发起 Ajax 请求，实现前后端的数据交互。了解 HTTP 请求的过程以及 Ajax 的底层原理。</li><li>深入学习 JS 异步的底层原理，能够使用 Promise 处理异步操作，并使用 async/await 简化异步操作。</li></ul></blockquote><p>客户端与服务器 | axios | 请求与响应报文 | 接口 | form 表单 | 拦截器 | FormData | 文件上传 | XMLHttpRequest | Promise | async/await | EventLoop | 宏任务 | 微任务</p><p>Web 安全：</p><ul><li>HTTPS</li><li>内容安全策略（CSP）</li><li>跨域资源共享</li><li>OWASP 安全风险</li></ul><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><blockquote><ul><li>能够创建 Git 仓库管理前端项目，基于 Git 分支进行多人协同开发，并且能够把本地的 Git 仓库同步到远程码云或 Github 仓库中</li></ul></blockquote><p>安装和配置 Git | Git 本地操作的常用命令 | .gitignore 忽略文件 | Git 分支与常用命令 | 远程仓库的使用</p><h1 id="Vue-Vue2-Vue3"><a href="#Vue-Vue2-Vue3" class="headerlink" title="Vue (Vue2 + Vue3)"></a>Vue (Vue2 + Vue3)</h1><h2 id="预备阶段"><a href="#预备阶段" class="headerlink" title="预备阶段"></a>预备阶段</h2><blockquote><ul><li>掌握模块化思想，npm包管理，webpack基础，初探工程化开发。</li></ul></blockquote><p>Node.js安装 | fs模块 | path模块 | http模块 | npm | 包配置文件 | npm常用命令 | 模块化概念 | CommonJS | ES6Module | 工程化开发概念 | webpack基础配置 | dev-server | webpack插件 | 常用loader | babel</p><h2 id="Vue-核心技术"><a href="#Vue-核心技术" class="headerlink" title="Vue 核心技术"></a>Vue 核心技术</h2><p>MVVM | SPA | Vue 调试工具 | 虚拟DOM | diff算法 | 指令系统 | v-model原理 | 数据选项 | 生命周期 | 样式穿透 | 动态样式 | 插槽 | 组件系统 | 组件通信 | 自定义指令 | ref | 动态组件 | $nextTick | 自定义事件 | 计算属性 | 侦听器 | 组件库 | 组件封装 | keep-alive | 路由系统 | 导航守卫 | vue-cli | vuex | vant | element-ui | 路由懒加载</p><h3 id="vue基础"><a href="#vue基础" class="headerlink" title="vue基础"></a>vue基础</h3><h3 id="vue-cli"><a href="#vue-cli" class="headerlink" title="vue-cli"></a>vue-cli</h3><h3 id="vue-router"><a href="#vue-router" class="headerlink" title="vue-router"></a>vue-router</h3><h3 id="vuex"><a href="#vuex" class="headerlink" title="vuex"></a>vuex</h3><h3 id="element-ui"><a href="#element-ui" class="headerlink" title="element-ui"></a>element-ui</h3><h3 id="vue3"><a href="#vue3" class="headerlink" title="vue3"></a>vue3</h3><h2 id="Vue3-0"><a href="#Vue3-0" class="headerlink" title="Vue3.0"></a>Vue3.0</h2><blockquote><ul><li>掌握Vue3新特性、Vite、组合API、Pinia …</li></ul></blockquote><p>Vite | 选项API | 组合API | setup | 生命周期 | reactive | toRef | toRefs | computed | 组件通信 | 依赖注入 | ref边界 | Pinia</p><h2 id="TypeScript"><a href="#TypeScript" class="headerlink" title="TypeScript"></a>TypeScript</h2><blockquote><ul><li>掌握TypeScript基础语法，并且在Vue3项目中熟练运用TypeScript</li></ul></blockquote><p>基础类型｜联合类型｜字面量类型｜类型推断 | 类型断言 | 泛型 | 类型声明 | ts结合composition-api | ts结合axios | 头条案例</p><h1 id="小程序"><a href="#小程序" class="headerlink" title="小程序"></a>小程序</h1><h2 id="原生小程序"><a href="#原生小程序" class="headerlink" title="原生小程序"></a>原生小程序</h2><p>账号申请 | 开发工具 | 工程目录 | 项目配置 | 屏幕适配 | 资源托管 | 字体图标 | 数据绑定 | 事件处理 | 生命周期 | 场景值 | 模块化 | 网络请求 | 路由 | WXS | 模板 | 组件 | UI 框架 | 表单 | Promise</p><h2 id="uni-app"><a href="#uni-app" class="headerlink" title="uni-app"></a>uni-app</h2><p>脚手架 | 项目配置 | 单文件组件 | 生命周期 | 条件编译 | 计算属性 | 跨平台支持 | less | sass | 组件通信</p><h2 id="电商项目"><a href="#电商项目" class="headerlink" title="电商项目"></a>电商项目</h2><p>客户消息 | 微信支付 | 微信地址 | 小程序转发 | 区域滚动 | 上拉加载 | 下拉刷新 | 数据缓存 | 用户信息 | 自定义组件 | 微信登录 | 意见反馈 | 上线发布</p><h1 id="React"><a href="#React" class="headerlink" title="React"></a>React</h1><h2 id="React核心"><a href="#React核心" class="headerlink" title="React核心"></a>React核心</h2><p>JSX | 组件系统 | 虚拟 DOM | 生命周期 | 无状态组件 | 有状态组件 | ref | class | 组件通信 | create-react-app | 路由 | 插值 | state</p><h2 id="Hooks"><a href="#Hooks" class="headerlink" title="Hooks"></a>Hooks</h2><p>useState | useEffect | useRef | useContext | useEffect高级用法 | 放大镜案例 | 购物车案例</p><h2 id="Redux中间件"><a href="#Redux中间件" class="headerlink" title="Redux中间件"></a>Redux中间件</h2><p>状态管理流程 | action | dispatch | store | reducer | redux-thunk中间件 | combineReducers | react-redux | Redux Toolkit |开发调试工具 | 点餐案例</p><h2 id="TypeScript-1"><a href="#TypeScript-1" class="headerlink" title="TypeScript"></a>TypeScript</h2><p>ts结合hooks | ts结合redux | ts结合路由 | 点餐案例重构</p><h1 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h1><h2 id="小兔鲜儿电商项目首页制作"><a href="#小兔鲜儿电商项目首页制作" class="headerlink" title="小兔鲜儿电商项目首页制作"></a>小兔鲜儿电商项目首页制作</h2><p>精灵图 | 文档编码 | 性能优化 | 布局技巧 | SEO | 性能优化 | 版心 | 设计稿 | PxCook</p><h2 id="小兔鲜电商小程序项目"><a href="#小兔鲜电商小程序项目" class="headerlink" title="小兔鲜电商小程序项目"></a>小兔鲜电商小程序项目</h2><blockquote><ul><li>小程序无需安装，用完即走的应用方式越来越受到用户的欢迎，企业也都纷纷开展了小程序的开发。</li><li>小兔鲜儿是一个经典的电商类小程序项目，包括商品、用户、购物车、订单等核心功能模块，采用 uni-app 框架做为跨平台小程序开发方案，并综合运用了原生小程序的组件化、模块化、网络请求、本地存储、微信登录、微信支付等技术</li></ul></blockquote><h3 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h3><ol><li>能够开发跨平台的小程序</li><li>能够独立开发小程序项目</li><li>掌握微信登录的实现方式</li><li>掌握微信支付的实现方式</li></ol><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><ol><li>小程序跨平台开发解决方案</li><li>小程序微信登录实现方案</li><li>小程序微信支付实现方案</li><li>下拉刷新/上拉加载交互实现方案</li><li>数据缓存实现方案</li></ol><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><ol><li>uni-app跨平台开发框架</li><li>组件封装及通信</li><li>微信支付/登录</li><li>pinia 状态管理</li><li>基于vue3+ts技术实践方案</li><li>小程序云开发</li><li>vant组件库</li></ol><h2 id="数据看板项目"><a href="#数据看板项目" class="headerlink" title="数据看板项目"></a>数据看板项目</h2><blockquote><ul><li>数据看板是一个数据可视化项目，通过折线图、K线图、柱状图等图表形式归纳汇总大量数据，以实现更加直观的数据表达效果。</li></ul></blockquote><h3 id="学习目标-1"><a href="#学习目标-1" class="headerlink" title="学习目标"></a>学习目标</h3><ol><li>掌握Echarts 各类型数据可视化图表的应用</li><li>能够根据需要求创建折线图、K线图、地图等图表</li><li>掌握前后端分离技术的实现方式并了解其意义</li><li>掌握使用token进行访问鉴权功能实现</li></ol><h3 id="解决方案-1"><a href="#解决方案-1" class="headerlink" title="解决方案"></a>解决方案</h3><ol><li>基于 bootstrap 的响应式页面布局方案</li><li>基于 echarts 的数据可视化解决方案</li><li>基于 token 的访问权限控制解决方案</li></ol><h3 id="知识点-1"><a href="#知识点-1" class="headerlink" title="知识点"></a>知识点</h3><ol><li>基于axios 实现网站注册和登录功能 </li><li>基于 Echarts 结合需求高度自定义不同类型的可视化图表</li><li>Ajax、数据渲染和服务端推送前后端分离技术的应用</li><li>基于 token 的访问权限控制功能</li></ol><h2 id="面经全端项目"><a href="#面经全端项目" class="headerlink" title="面经全端项目"></a>面经全端项目</h2><blockquote><ul><li>面经系统，由面试经验文章PC管理后台，个人H5端面试文章浏览组成。能够锻炼对 Vue 完整技术栈的运用。同时该项目还涵盖了 token 身份认证、Vue 组件库、文件上传、富文本编辑器等前端技术解决方案，移动端开发，适合刚入手 Vue 框架、希望通过项目开发来巩固 Vue 基础的前端开发者学习。</li></ul></blockquote><h3 id="学习目标-2"><a href="#学习目标-2" class="headerlink" title="学习目标"></a>学习目标</h3><ol><li>掌握 element-ui 组件库的运用</li><li>掌握 axios 以及拦截器的应用</li><li>掌握 Vuex 管理全局状态的技术解决方案</li><li>熟练使用 vue-router 管理组件的切换展示</li><li>掌握 element-ui 中如何自定义表单的校验规则</li><li>掌握文件上传和富文本编辑器在 Vue 项目中的应用</li><li>掌握 Vant 组件库的运用</li><li>掌握使用 postcss-px-to-viewport 实现移动端适配</li></ol><h3 id="解决方案-2"><a href="#解决方案-2" class="headerlink" title="解决方案"></a>解决方案</h3><ol><li>token身份认证解决方案</li><li>文件上传解决方案</li><li>富文本编辑解决方案</li><li>表单验证解决方案</li><li>基于vant的移动端界面构建方案</li><li>基于postcss-px-to-viewport移动端适配方案</li></ol><h3 id="知识点-2"><a href="#知识点-2" class="headerlink" title="知识点"></a>知识点</h3><ol><li>基于 vue-cli 创建工程化的 Vue 项目</li><li>基于 element-ui 组件库快速实现项目布局</li><li>用户注册与登录的业务解决方案</li><li>使用 Vuex 管理全局共享的数据</li><li>使用 axios 实现前后端的数据交互</li><li>基于 vant 组件库快速构建移动端界面</li></ol><h2 id="iHRM人力资源项目"><a href="#iHRM人力资源项目" class="headerlink" title="iHRM人力资源项目"></a>iHRM人力资源项目</h2><blockquote><ul><li>iHRM是一款基于SaaS平台的人力资源管理系统， 企业通过该系统可以完成公司组织架构管理、员工管理、角色管理、权限管理（审批、考勤、社保）等，为企业的人力资源管理提供一站式解决方案。</li></ul></blockquote><h3 id="学习目标-3"><a href="#学习目标-3" class="headerlink" title="学习目标"></a>学习目标</h3><ol><li>掌握Vue + Element技术栈在开发管理型后台项目的技术开发能力</li><li>具备角色，人员，权限类系统的设计整体设计及应用能力</li><li>拥有Vuejs相关的技术要点及配套的插件，解决方案深度使用能力</li></ol><h3 id="解决方案-3"><a href="#解决方案-3" class="headerlink" title="解决方案"></a>解决方案</h3><ol><li>基于element-ui和vue2进行大型中台项目开发解决方案</li><li>基于axios封装请求工具模块解决方案</li><li>基于token的前端登录解决方案</li><li>vuex分模块持久化解决方案</li><li>RBAC大型中台项目权限控制解决方案</li><li>excel批量导入导出解决方案</li><li>上传组件封装解决方案</li><li>多语言动态主题解决方案</li><li>树形结构处理解决方案</li></ol><h3 id="知识点-3"><a href="#知识点-3" class="headerlink" title="知识点"></a>知识点</h3><p>vue-element-admin（请求模块化，请求工具拦截，scss 样式，布局组件） | Vuex 持久化（state，mutations，actions，getters 和 modules） | Vue CLI 配置(webpack) | 反向代理 | ElementUI 表单校验（async-validator） | vue-router 导航守卫 | token 认证 | token 失效控制 | 角色管理业务 | RBAC 权限 | Vuex + 路由 + RBAC | 动态路由 | 角色权限 | 混入 mixns | 工作日历 | Echarts 雷达图 | 全屏（screenfull） | tabs 页多页签组件 | vue-i18n 国际化方案 | history 路由模式的应用 | 树形菜单 |element 列表的数据过滤 | 导入导出 Excel | Excel 复杂型表头 | PDF 打印（vue-print-nb）| el-upload 上传第三方云服务器 | 打包性能分析 | CDN 加速的实践应用 | 组件封装 | 业务组件封装</p><h2 id="优医问诊项目"><a href="#优医问诊项目" class="headerlink" title="优医问诊项目"></a>优医问诊项目</h2><blockquote><ul><li>优医问诊是一个连接医生和患者的移动医疗行业H5应用，通过高效、快速的在线问诊服务，为患者提供健康帮助，涵盖了找医生、快速问诊、开药门诊、疾病查询，健康健康百科等功能。</li><li>该项目基于Vue3+TypeScript进行开发，且引入下一代状态管理工具 Pinia 和最热门的前端移动UI组件库 Vant ，采用全新技术栈</li></ul></blockquote><h3 id="学习目标-4"><a href="#学习目标-4" class="headerlink" title="学习目标"></a>学习目标</h3><ol><li>掌握使用Vue3 + TypeScript 开发大型前端项目开发能力</li><li>掌握使用Vant组件库开发移动端项目能力</li><li>掌握 Pinia 状态管理工具实现项目状态管理</li><li>掌握 第三方登录和第三方支付 业务解决能力</li><li>掌握 快速问诊 等在线问诊主流业务开发能力</li></ol><h3 id="解决方案-4"><a href="#解决方案-4" class="headerlink" title="解决方案"></a>解决方案</h3><ol><li>基于vue3.0+typescript中大型项目开发解决方案</li><li>基于vant组件库快速构建H5界面解决方案</li><li>基于vue-router的前端路由解决方案</li><li>基于vite构建vue3.0项目解决方案</li><li>基于pinia的状态管理解决方案</li><li>基于pinia-plugin-persistedstate状态持久化解决方案</li><li>基于@vuecore/use的组合API工具库解决方案</li><li>基于id-validator的身份证信息校验解决方案</li><li>基于postcss-px-to-viewport移动端适配解决方案</li><li>基于vite-plugin-svg-icons的svg图标组件解决方案</li><li>基于tailwindcss的原子化类名现代解决方案</li><li>基于socket.io的即时通讯问诊室解决方案</li><li>基于eruda 的移动端调试解决方案</li><li>第三方登录解决方案</li><li>第三方支付解决方案</li></ol><h3 id="知识点-4"><a href="#知识点-4" class="headerlink" title="知识点"></a>知识点</h3><p>vue3.0框架| TypeScript使用 | vite前端构建工具｜create-vue项目脚手架｜vue-router路由｜pinia状态管理｜pinia-plugin-persistedstate状态持久化｜sass预处理器｜ vite-plugin-svg-icons图标组件插件｜tailwindcss现代CSS框架｜@vueuse/core组合API工具库｜dayjs日期处理｜vant组件库 | postcss-px-to-viewport移动端适配 | id-validator校验身份证 | socket.io即时通讯 | eruda真机调试 | 第三方登录 | 第三方支付 | vant组件二次封装 | 通用组件封装 | reqeust工具函数 | 组件按需引入 | steup语法糖 | pnpm包管理 | 第三方库类型扩展 | 自定义composable | css变量</p><h2 id="极客园H5项目"><a href="#极客园H5项目" class="headerlink" title="极客园H5项目"></a>极客园H5项目</h2><blockquote><ul><li>「极客园」对标“CSDN”、“博客园”等竞品，致力成为更加贴近年轻 IT 从业者（学员）的科技资讯类应用。 本项目是极客园移动端，主要涵盖了H5端新闻资讯类项目的核心业务。</li><li>包括首页文章列表上拉加载与刷新，频道管理，本地线上频道管理，文章搜索，文章评论与回复，组件缓存，token过期与刷新处理，用户权限拦截，个人信息修改解决方案。</li></ul></blockquote><h3 id="学习目标-5"><a href="#学习目标-5" class="headerlink" title="学习目标"></a>学习目标</h3><p>熟练掌握typescript + react技术栈 + antd-mobile组件库开发H5移动端新闻资讯类项目的技术能力。</p><h3 id="解决方案-5"><a href="#解决方案-5" class="headerlink" title="解决方案"></a>解决方案</h3><ol><li>基于typescript开发中大型项目的解决方案</li><li>基于antd-design组件库移动端解决方案</li><li>基于react全家桶（react hooks + redux + react-router）移动端解决方案</li><li>基于axios封装请求工具类解决方案</li><li>基于token的前端登录解决方案，封装PrivateRouter拦截未登录用户</li><li>基于token实现token过期与token刷新处理</li><li>封装KeepAlive组件实现组件缓存的解决方案</li><li>基于antd-mobile实现文章列表的下拉刷新与上拉加载功能</li></ol><h3 id="知识点-5"><a href="#知识点-5" class="headerlink" title="知识点"></a>知识点</h3><p>react+hooks+redux+typescript+router全家桶 | 移动端项目搭建 | ant-mobile-v5 | vw 适配方案 | Token 过期处理 | 动态编辑 | 上拉加载 | 下拉刷新 | 评论与回复 | 搜索功能 | DayJS | 数据持久化 | 图片懒加载 | 组件定制 | 组件封装 | 性能优化 | 移动端1px像素 | Icon处理 | 表单验证 | 倒计时 | 拦截器 | 权限组件封装 | 缓存组件封装 | websocket | 防抖与节流 | 关键字高亮 | 吸顶组件 | keep-alive | CDN优化 ｜ahooks｜lodash</p><h2 id="极客园PC端项目"><a href="#极客园PC端项目" class="headerlink" title="极客园PC端项目"></a>极客园PC端项目</h2><h3 id="学习目标-6"><a href="#学习目标-6" class="headerlink" title="学习目标"></a>学习目标</h3><p>熟练掌握typescript + react技术栈（umi + dva + antd组件库 )开发后台管理项目的技术能力。</p><h3 id="解决方案-6"><a href="#解决方案-6" class="headerlink" title="解决方案"></a>解决方案</h3><ol><li>基于react hooks实现后台管理系统的解决方案</li><li>基于ant-design组件库解决方案</li><li>基于react-router的前端路由解决方案</li><li>基于dva的状态管理解决方案</li><li>基于react-quill的富文本编辑器解决方案</li><li>基于 umi 的构建react项目解决方案</li></ol><h3 id="知识点-6"><a href="#知识点-6" class="headerlink" title="知识点"></a>知识点</h3><p>ant-design组件库 | 表单校验 | token 认证 | token 失效控制 | history 路由| 组件封装 | react-quill | umi | dva | ant-design-pro | useModal | umi-request</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> 手册 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>220607</title>
      <link href="/2022/06/07%E9%9A%8F%E7%AC%94/220607/94a71e9c/"/>
      <url>/2022/06/07%E9%9A%8F%E7%AC%94/220607/94a71e9c/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, this password doesn't look right. Please try again." data-whm="Sorry, this article cannot be verified, but you can still see the decrypted content.">  <script id="hbeData" type="hbeData" data-hmacdigest="d92e4c7ba23a5d4951469b5a1d9fd7326be9f8ab800a861a8450fd9652d48236">176af5f71c6ac5419ca35683f9a93d1d2c4db0317ed9e2169d70d381b1a8ab6f329bbb22eed617fcae9ef6ecba22af754521cc1c0edb455ff27b2a15b67177a0d3047a854ed48a8a195f4a3dd915bb09513b9e0af79249aedf642abd283c4d581aa23a0a127b116bbe4f0c7421ca0f20fd0331d51e97df05a801ce19cd7d7823103a04e1efab6867a1a22dc9e7caa694db09821ae2d791aa7a8873932e6a6bb02478cfd1a26cdeb4a607cbe02fec9fabf655f1a6288ec06b41fdbae277c0d234499bf4577fecdc644af40addd7e5cbad052de176100a0f6a845630b62017008245b1336c5b31c7888b6f026269420f6e98eb29f053c28aa99c1a972ad7fb9496c8a0853c3db14d7d4ea705d6ea1ddadc9fbbd2a1ededb5dd7ce5b5482531b6a8331531aa0b63fdb369193e1ef89ea72f4f18ac3e688775ebb1f60e3feb0adf372e2c78d83fec226c762c76d1ddedc1b88c2b5521ac517020d789abf4958fa6850bc12abf284ef383993f0e81b379181de5bc7fb937acbfed70d3e55e3c6d2f1310f64110cfeaff2652326224edfc246ba4518e390acc441c0894962df4bb8d119b0ec99698cfce242d60523bd869fce9dcb904c5b0b8d69fe55be7f5f2f19c5da5726f49061638e5caed52b3c36da232f16ec0119f65e002ced989dce884ba43c1fe95282cdc3782aedacfb2f2eeda3d6d3f5a313a86cb099ba1ab5c012e00bcbfa728e61629dacf7b3c7d3d4d6347148cd08bb23aa749e7ec0e9d3e418ed5666561fb142389a577a82dc23359d572dce708f8ee93bb923bd5221f2ac7893dd727b87b9605817a6a86b3ec4e09ee6f88dc61e1f78d15a3a443b0bb5389a0c131125bd803098cf24a8192944c8a9e0701813b7d78f2ecc0dbbe4220d086cafe430ef47c2852f58bd279e769dc2e2468c476b8f9a4dc7c957dbdf6d4e42ae288a1c3ac20e851b2aa3f607c01529e16cf309e42bf5f2d5985b1050104333fc485be0c2505e3eb433a9f4b244526930b99d11e436f11499100a90b236d876c55e162d66e4788bef8aeb4e8f7d6c058ba0cf1cc714defef493a3522ad101c3822e6f1d95b0573141cc34fc8f1a75fbee1dcb61f5a86588abe0bdad07aa3893d24f495c489195cbba016838298e1953b9903093343187ae6c32317bbffe01bd1db142d5dce7443b4eacf95bec84988881ca885a76bc1135fa5ba33ab82a801d85fb8f0f323211aabf7435c7b18c2e71139167be58f8bc263af4b90d5814264d24de992db2208d95b8106a11a37e7b4aa37005204c6fbdb05b19398eac9f02d9eb435cc120f09fa74518c6dfa98d1feccaf3cfe4dcbafbc7c90949c6022c8394f679f8b70f39eec6f7719cc5e0b5b435e4daf715f6daef8be05391934c18d1d624bd939a020e5a0698492cb417ba8f9459d6e09b78a611162e23fe3a94cb09f88d81cbfbf473735f5aa0bdc1cb255e2bf07dad43b906fa6ffb336bda2186f263f3778144579b6aa2bdc588ba93baa1f344fedcf61b657191bb64d4c964bd944730825424f0e2e28af280cebd22ac554d3eb3ac212d368ecc6bbe2a6eeae0ec95da952d5afa292b35b07668d674601a8c470e64e7b8ceed7923616692df5aed6ce8fb7c122f4a50874b94f6380b8cc69804ccb0600cb1e460bf24d29a5f7d99b0e258ceee0967a47700ba54da38fdb9a5f5c378f16555d5496aeb1b70f7adbc5ae754eee10e71d1bba55fd24d48c0597f769ba6becf599aab05f1cb5deeb9ce0120b1a9498a832114892c7c23a58703cdae6996821a616011c8d9b198ee09483b6ccb0177e1d545ccb53d0648716faa2d9ad44f77d46325dc538702b60fc00da8acbafb8032ba34afbff36ad0974a36053164446d143e955f199404fbd9526df39734fcca37bf91b517e8777187d3eacc7c0a974a8ce934888fd571c1c84ed1b1bddfd88dc6f4d007c11125c0a0411aeb53e5a003dd5a275965bf723d4aaa0d51042d61bd8315b41190b8a8e61e597eedd68812c3b7c8e82ccf16c494b34fe8758ae63da81e6c6a0e9e3b9bbd13379a19887dd3f9cfdeb051da8da372e46f7cc23fd66791d61b13225eec6e82111ff8385d97d4d3e9bbc1c81f0f4a75db125e39c71e1adc4dfbbe373c2f8924173e0496ab29531af44290967da6b2218ded01b74bd7c90e953059b8db839cead6241e91ce779ef6d136947ce92ee6bd65c8e0e64a16820dbcc51265ade6f6f4647eeef72ee0a46b96902b862bf2ba167cecdb189f4c96932e682403b366ee21eea98dc3830d030062d1fba22c8dc5d56f80f50958b4f12de55c11e99316a6f720e90070a5bfd4e0958c27808b836abb947a4aae5fe106252ab680ef7f71f5bd5a1808dfba0b94cfc2c824a9012f304ec9c056761a9932dcb3f81598b416f65c2d9238d61c2657e1e385ea349f024bfe3993d034bcd72750b727956d9a7173ada1d1efe57bbb386d67f73ec2cc7101d4954cca69f4ea2aa59ff7b8e265c4d1c1f713f574963b3c51c698a6aef7033fdae6bffb71ed7e0d174480f8365049c5ae7ecfc987cbda147f5085c6d5429246197bf3cfe914edcada0669bb16c289bfd7f00c66b1793593a96ae23d9c11021057c30a521b64d8368d76c66bd9b705b158b3797bc27a57ba50cfda4b7886bc53f15193067c6adb83de104694f1be9b1d90cf40c07796ac30fdc24ae80bd8510f161b65ce63c43506e8008a62ffd69a9c168dd257b15d837d4f0bba1b485944b481a73b548e6bf3b28d754aef7a00e7cb509b9391e17598089d095ba8e71fcbbd0c290862df41b9f1461fcf1dd72825ce1abced31fb71a48c1</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-surge">      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="Enter Password.">Enter Password.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>220602</title>
      <link href="/2022/06/02%E9%9A%8F%E7%AC%94/220602/e4cdea13/"/>
      <url>/2022/06/02%E9%9A%8F%E7%AC%94/220602/e4cdea13/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, this password doesn't look right. Please try again." data-whm="Sorry, this article cannot be verified, but you can still see the decrypted content.">  <script id="hbeData" type="hbeData" data-hmacdigest="4d98359085cae2b786c5551c41c8801ebb852d0ffceda080fb2c3582ca711992">176af5f71c6ac5419ca35683f9a93d1d15482447c231904984f7b7cdaee5d8818ef3a857a2296be3c94c792260d5bedf106ee8461c642337801973a08ee926a7455aa3e85944b979b8cc4fb3880df2312209f1ce2962804b9570112515e19ed93af4fe28f748bd78a83d0ee79e57d34dbf3c52bb9bd799f011ab6ec25c29bfacbf7cb9d53250d6a1ac86b9193e007dd45a35990cc0908a986f3ea6012fbeb1bb</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-surge">      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="Enter Password.">Enter Password.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
          <category> Diary </category>
          
          <category> 小黄 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>220601</title>
      <link href="/2022/06/01%E9%9A%8F%E7%AC%94/220601/436fef40/"/>
      <url>/2022/06/01%E9%9A%8F%E7%AC%94/220601/436fef40/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, this password doesn't look right. Please try again." data-whm="Sorry, this article cannot be verified, but you can still see the decrypted content.">  <script id="hbeData" type="hbeData" data-hmacdigest="6244e1ba29543bd3eceb43d77d42c34021c8268a1febb0f293dca4bcd6dd265e"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-surge">      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="Enter Password.">Enter Password.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
          <category> Diary </category>
          
          <category> 小黄 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>220529</title>
      <link href="/2022/05/28%E9%9A%8F%E7%AC%94/220529/436fef40/"/>
      <url>/2022/05/28%E9%9A%8F%E7%AC%94/220529/436fef40/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, this password doesn't look right. Please try again." data-whm="Sorry, this article cannot be verified, but you can still see the decrypted content.">  <script id="hbeData" type="hbeData" data-hmacdigest="d1da195f71276587a5d19ada55bea7621b37ef079aee08cb99e4e9964f7cd0ab"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-surge">      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="Enter Password.">Enter Password.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
          <category> Diary </category>
          
          <category> 小黄 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uToos 为生产力而生</title>
      <link href="/2022/05/21%E5%B7%A5%E5%85%B7/%E5%B7%A5%E5%85%B7_Software_uToos/450a1492/"/>
      <url>/2022/05/21%E5%B7%A5%E5%85%B7/%E5%B7%A5%E5%85%B7_Software_uToos/450a1492/</url>
      
        <content type="html"><![CDATA[<blockquote><p>utools 这种插件化的管理方式，为用户带来了很大的自由度，能够帮助你打造出更趁手的私人专属工具库。个人觉得这是一款非常好用的软件 <strong>工作效率直接+100%</strong>，免费版本功能也完全够用，希望越来越多的人能支持这种国产优秀软件。</p></blockquote><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>utools 官网：<a href="https://u.tools/">https://u.tools/</a> 选择对应系统版本安装包安装。</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220521231645.png" alt="安装包"></p><p>一台电脑个人觉得免费版本足够使用了，如果需要多端数据同步，也可以开通 uTools会员，更多会员权益自行查看。</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220521231722.png" alt="会员"></p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>绑定好账号之后就可以使用了，直接在插件应用市场选择想要的插件安装即可。</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220521233707.png" alt="20220521233707"></p><h2 id="软件快捷键"><a href="#软件快捷键" class="headerlink" title="软件快捷键"></a>软件快捷键</h2><blockquote><p>以下快捷键均可在偏好设置中自定义。</p></blockquote><ol><li><code>Alt + Space</code> 显示/隐藏搜索面板，<strong>可快速启动已安装的应用</strong>等</li><li><code>Ctrl + D</code> 分离窗口快捷键</li><li><code>长按鼠标中键</code> 呼出超级面板</li></ol><h2 id="自定义插件快捷键"><a href="#自定义插件快捷键" class="headerlink" title="自定义插件快捷键"></a>自定义插件快捷键</h2><p>给常用的插件自定义快捷键可快速呼出插件，<strong>注意快捷键冲突问题</strong>。</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220521233631.png" alt="20220521233631"></p><h2 id="插件推荐"><a href="#插件推荐" class="headerlink" title="插件推荐"></a>插件推荐</h2><p>这里推荐几个实用的插件</p><h3 id="讯飞-ocr"><a href="#讯飞-ocr" class="headerlink" title="讯飞 ocr"></a>讯飞 ocr</h3><p>讯飞 ocr 是一款截图识字的插件，一般来说这种识图api接口都是收费的，目前插件内有很多共享的接口供使用。个人使用了一段时间感觉挺不错的，这款插件搭配另一款<code>聚合翻译</code>插件可在截完图之后直接翻译识取内容。</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220521233423.png" alt="讯飞 ocr"></p><h3 id="PDF-转换器"><a href="#PDF-转换器" class="headerlink" title="PDF 转换器"></a>PDF 转换器</h3><p>将 PDF 转换为多种格式</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220521234056.png" alt="20220521234056"></p><h3 id="批量重命名"><a href="#批量重命名" class="headerlink" title="批量重命名"></a>批量重命名</h3><p>导入想要重命名的图片，自定义命名规则。</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220521234249.png" alt="20220521234249"></p><h3 id="图片批量处理"><a href="#图片批量处理" class="headerlink" title="图片批量处理"></a>图片批量处理</h3><p>相见恨晚！</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220521234443.png" alt="20220521234443"></p><h2 id="我的插件"><a href="#我的插件" class="headerlink" title="我的插件"></a>我的插件</h2><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220522140514.png" alt="20220522140514"></p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220522140533.png" alt="20220522140533"></p><h1 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h1><p>无意间发现的这款插件，还不错，支持大部分图床仓库</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220521234804.png" alt="20220521234804"></p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>首先在插件应用市场安装<code>图床</code>插件。(没错，插件名就叫“图床”)<br><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220521235251.png" alt="20220521235251"></p><p>安装完成后可自行配置图床仓库。</p><h2 id="创建仓库-Gitee"><a href="#创建仓库-Gitee" class="headerlink" title="创建仓库(Gitee)"></a>创建仓库(Gitee)</h2><div class="tip error"><p>大型打脸现场，刚夸了夸Gitee，这就图片加了防盗链，不能直接访问了，换别的图床吧，想白嫖果然不容易。</p></div><p>注册 gitee 账号，创建仓库，仓库名称随意，建议：<code>utools-filebed</code> 创建记得初始化仓库，并开源 (图床的仓库一定要开源)。</p><h2 id="申请私人令牌"><a href="#申请私人令牌" class="headerlink" title="申请私人令牌"></a>申请私人令牌</h2><ol><li>地址： <a href="https://gitee.com/profile/personal_access_tokens">https://gitee.com/profile/personal_access_tokens</a></li><li>点击”生成新令牌”，令牌描述随意取，推荐<code>utools-filebed</code>，权限请勾选”projects”</li><li>提交后务必保管好生成的令牌，此令牌只显示一次。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220521235821.png" alt="20220521235821"></p><h2 id="配置插件"><a href="#配置插件" class="headerlink" title="配置插件"></a>配置插件</h2><p>进入图床插件：</p><ol><li>将刚刚申请到的 token 填 access_token</li><li>用户名是gitee的用户名</li><li>repo 填仓库名称 (不带用户名)</li><li>path 就是图片上传完成之后的命名格式，建议填写：<code>&#123;Y&#125;-&#123;M&#125;-&#123;D&#125;&#123;H&#125;:&#123;m&#125;:&#123;s&#125;-</code> 输出为：2021-9-1718:06:09-xxx.png</li></ol><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220522000222.png" alt="20220522000222"></p><h2 id="切换"><a href="#切换" class="headerlink" title="切换"></a>切换</h2><p>填写完成后在图床插件这里选择 gitee 即可</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220522000535.png" alt="20220522000535"></p><h2 id="可选"><a href="#可选" class="headerlink" title="[可选]"></a>[可选]</h2><p>如果想搭配 Typora 进行上传的话需要安装 <code>utools图床插件命令工具</code> </p><blockquote><p>使用Typora上传或使用命令行工具期间<strong>保证图床插件的运行</strong>, 不能完全退出图床插件,不能在「utools」主输入窗口输入「clear 」命令。此外需要环境版本 node &gt;= 12</p></blockquote><ol><li>安装命令工具 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// npm</span><br><span class="line">npm install -g utools-picturebed-command</span><br><span class="line"></span><br><span class="line">// yarn</span><br><span class="line">yarn global add utools-picturebed-command</span><br></pre></td></tr></table></figure></li><li>Typora配置</li></ol><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220522001928.png" alt="20220522001928"></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> Software </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>VSCode 自定义 Snippet 代码片段</title>
      <link href="/2022/05/19%E5%B7%A5%E5%85%B7/%E5%B7%A5%E5%85%B7_VSCode_vscode%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89snippet%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5/a1d7e33a/"/>
      <url>/2022/05/19%E5%B7%A5%E5%85%B7/%E5%B7%A5%E5%85%B7_VSCode_vscode%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89snippet%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5/a1d7e33a/</url>
      
        <content type="html"><![CDATA[<blockquote><p>为了跟系统默认的系统区分，建议使用一些特殊的符号开头。如：<code>my_xxx</code></p></blockquote><h1 id="运作原理"><a href="#运作原理" class="headerlink" title="运作原理"></a>运作原理</h1><p>官网：<a href="https://code.visualstudio.com/docs/editor/userdefinedsnippets">https://code.visualstudio.com/docs/editor/userdefinedsnippets</a></p><p>代码片由四部分组成</p><ol><li>prefix：前缀。代码片从 IntelliSense 中呼出的「关键字」<ul><li>支持 N:1，数组中的每一项都能作为本条代码片的前缀。</li></ul></li><li>scope: 域。代码片适用的「语言模式」<ul><li>可选，但只有「全局代码片」才能使用。不填代表适用于所有语言模式。</li></ul></li><li>body：主体。代码片的「布局与控制」<ul><li>每个字符串表示一行。</li></ul></li><li>description：描述。代码片在 IntelliSense 中的「介绍」<ul><li>可选。未定义的情况下直接显示对象名。</li></ul></li></ol><h1 id="Markdown-Snippet"><a href="#Markdown-Snippet" class="headerlink" title="Markdown Snippet"></a>Markdown Snippet</h1><ol><li>进入代码片设置文件：通过快捷键<strong>Ctrl + Shift + P</strong>打开命令窗口（All Command Window），输入<strong>snippet</strong>，点选<strong>首选项</strong>：配置用户代码片片段，选择对应的语言</li><li>在设置文件里补全代码片，以 markdown 为例，选中后你将打开一个<strong>json</strong>文件，自定义对应的快捷方式。</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="comment">// Place your snippets for markdown here. Each snippet is defined under a snippet name and has a prefix, body and </span></span><br><span class="line"><span class="comment">// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:</span></span><br><span class="line"><span class="comment">// $1, $2 for tab stops, $0 for the final cursor position, and $&#123;1:label&#125;, $&#123;2:another&#125; for placeholders. Placeholders with the </span></span><br><span class="line"><span class="comment">// same ids are connected.</span></span><br><span class="line"><span class="comment">// Example:</span></span><br><span class="line"><span class="comment">// &quot;Print to console&quot;: &#123;</span></span><br><span class="line"><span class="comment">// &quot;prefix&quot;: &quot;log&quot;,</span></span><br><span class="line"><span class="comment">// &quot;body&quot;: [</span></span><br><span class="line"><span class="comment">// &quot;console.log(&#x27;$1&#x27;);&quot;,</span></span><br><span class="line"><span class="comment">// &quot;$2&quot;</span></span><br><span class="line"><span class="comment">// ],</span></span><br><span class="line"><span class="comment">// &quot;description&quot;: &quot;Log output to console&quot;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">&quot;Print to ```javascript&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;```js&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line"><span class="string">&quot;```javascript&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;$1&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;$2&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;```&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;js代码片段&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;Print to ```css&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;```css&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line"><span class="string">&quot;```css&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;$1&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;$2&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;```&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;css代码片段&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;Print to ```html&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;```html&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line"><span class="string">&quot;```html&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;$1&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;$2&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;```&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;html代码片段&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;Print to |||table&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;|||table&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line"><span class="string">&quot;| Syntax      | Description |&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;| ----------- | ----------- |&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;| Header      | Title       |&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;| Paragraph   | Text        |&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;table代码片段&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><ol><li>自定义完成之后还需要在vscode的 settings.json 中配置下：</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;[markdown]&quot;</span><span class="punctuation">:</span>  <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;editor.quickSuggestions&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><h1 id="Vue-Snippet"><a href="#Vue-Snippet" class="headerlink" title="Vue Snippet"></a>Vue Snippet</h1><h2 id="HTML5-Vue"><a href="#HTML5-Vue" class="headerlink" title="HTML5 Vue"></a>HTML5 Vue</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="comment">// Place your snippets for html here. Each snippet is defined under a snippet name and has a prefix, body and </span></span><br><span class="line"><span class="comment">// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:</span></span><br><span class="line"><span class="comment">// $1, $2 for tab stops, $0 for the final cursor position, and $&#123;1:label&#125;, $&#123;2:another&#125; for placeholders. Placeholders with the </span></span><br><span class="line"><span class="comment">// same ids are connected.</span></span><br><span class="line"><span class="comment">// Example:</span></span><br><span class="line"><span class="comment">// &quot;Print to console&quot;: &#123;</span></span><br><span class="line"><span class="comment">// &quot;prefix&quot;: &quot;log&quot;,</span></span><br><span class="line"><span class="comment">// &quot;body&quot;: [</span></span><br><span class="line"><span class="comment">// &quot;console.log(&#x27;$1&#x27;);&quot;,</span></span><br><span class="line"><span class="comment">// &quot;$2&quot;</span></span><br><span class="line"><span class="comment">// ],</span></span><br><span class="line"><span class="comment">// &quot;description&quot;: &quot;Log output to console&quot;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="attr">&quot;Html5-Vue&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;my_h5vue&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line"><span class="string">&quot;&lt;!DOCTYPE html&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;&lt;html lang=\&quot;en\&quot;&gt;\n&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;&lt;head&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;\t&lt;meta charset=\&quot;UTF-8\&quot;&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;\t&lt;meta name=\&quot;viewport\&quot; content=\&quot;width=device-width, initial-scale=1.0\&quot;&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;\t&lt;meta http-equiv=\&quot;X-UA-Compatible\&quot; content=\&quot;IE=edge\&quot;&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;\t&lt;title&gt;Document&lt;/title&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;\t&lt;script src=\&quot;./vue.js\&quot;&gt;&lt;/script&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;&lt;/head&gt;\n&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;&lt;body&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;\t&lt;div id=\&quot;app\&quot;&gt;$1&lt;/div&gt;\n&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;\t&lt;script&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;\t\tlet vm = new Vue(&#123;&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;\t\t\tel: &#x27;#app&#x27;,&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;\t\t\tdata: &#123;&#125;,&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;\t\t\tmethods: &#123;&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;\t\t&#125;);&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;\t&lt;/script&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;&lt;/body&gt;\n&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;&lt;/html&gt;&quot;</span></span><br><span class="line"><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;html5vue模板&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="comment">// Place your snippets for vue here. Each snippet is defined under a snippet name and has a prefix, body and </span></span><br><span class="line"><span class="comment">// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:</span></span><br><span class="line"><span class="comment">// $1, $2 for tab stops, $0 for the final cursor position, and $&#123;1:label&#125;, $&#123;2:another&#125; for placeholders. Placeholders with the </span></span><br><span class="line"><span class="comment">// same ids are connected.</span></span><br><span class="line"><span class="comment">// Example:</span></span><br><span class="line"><span class="comment">// &quot;Print to console&quot;: &#123;</span></span><br><span class="line"><span class="comment">// &quot;prefix&quot;: &quot;log&quot;,</span></span><br><span class="line"><span class="comment">// &quot;body&quot;: [</span></span><br><span class="line"><span class="comment">// &quot;console.log(&#x27;$1&#x27;);&quot;,</span></span><br><span class="line"><span class="comment">// &quot;$2&quot;</span></span><br><span class="line"><span class="comment">// ],</span></span><br><span class="line"><span class="comment">// &quot;description&quot;: &quot;Log output to console&quot;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="attr">&quot;Print to console&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;my_vue&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;&lt;template&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&lt;/template&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&lt;script&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;export default &#123;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;  name:&#x27;&#x27;,&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;  data()&#123;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;   return &#123;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;   &#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;  &#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&lt;/script&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&lt;style scoped&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&lt;/style&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;$2&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Vue模板&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> VSCode </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>博客架构及编写规范</title>
      <link href="/2022/05/19%E5%B7%A5%E5%85%B7/%E5%B7%A5%E5%85%B7_%E6%89%8B%E5%86%8C_%E5%8D%9A%E5%AE%A2%E6%9E%B6%E6%9E%84%E5%8F%8A%E7%BC%96%E5%86%99%E8%A7%84%E8%8C%83/5f35053a/"/>
      <url>/2022/05/19%E5%B7%A5%E5%85%B7/%E5%B7%A5%E5%85%B7_%E6%89%8B%E5%86%8C_%E5%8D%9A%E5%AE%A2%E6%9E%B6%E6%9E%84%E5%8F%8A%E7%BC%96%E5%86%99%E8%A7%84%E8%8C%83/5f35053a/</url>
      
        <content type="html"><![CDATA[<h1 id="编写规范"><a href="#编写规范" class="headerlink" title="编写规范"></a>编写规范</h1><ol><li>gif 动图使用折叠框包含。</li><li>不懂或没有理解的知识，可以在对应标题后面加上 <code>[REJECTED]</code> 标记</li><li>博客末尾可以加上 Todo 标题记录临时灵感<ul><li>Todo：<code>&#123;% checkbox green checked, %&#125;</code></li></ul></li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- Front-Matter 子分类语法 --&gt;</span><br><span class="line"><span class="bullet">-</span> [父分类, 子分类]</span><br><span class="line"></span><br><span class="line">&lt;!-- Front-Matter 并列分类语法 --&gt;</span><br><span class="line"><span class="bullet">-</span> [分类1]</span><br><span class="line"><span class="bullet">-</span> [分类2]</span><br><span class="line"></span><br><span class="line">&lt;!-- Front-Matter 并列分类 + 子分类语法 --&gt;</span><br><span class="line"><span class="bullet">-</span> [父分类1, 子分类1]</span><br><span class="line"><span class="bullet">-</span> [父分类2, 子分类2]</span><br></pre></td></tr></table></figure><h1 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h1><ul><li><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/1.png" alt="frontend"></li><li><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/202207021559053.png" alt="frontend"></li><li><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/202207021606013.jpg" alt="frontend"></li><li><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/202207021606012.png" alt="frontend"></li><li><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><ul><li><img src="https://tva2.sinaimg.cn/large/008cLf6Oly1h2e0rq0wutj30xc0hgjtj.jpg" alt="html5"></li></ul></li><li><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><ul><li><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/202207021606014.png" alt="css"></li><li><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/flex.png" alt="flex"></li><li><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/mobile.png" alt="mobile"></li></ul></li><li><h2 id="Sass"><a href="#Sass" class="headerlink" title="Sass"></a>Sass</h2><ul><li><img src="https://tvax3.sinaimg.cn/large/008cLf6Oly1h2e0ts4nstj30iz09ita7.jpg" alt="sass"></li></ul></li><li><h2 id="Less"><a href="#Less" class="headerlink" title="Less"></a>Less</h2></li><li><h2 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h2><ul><li><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/js2.png" alt="js"></li><li><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/js.png" alt="js"></li></ul></li><li><h2 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h2><ul><li><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/jquery.png" alt="jquery"></li></ul></li><li><h2 id="Echarts"><a href="#Echarts" class="headerlink" title="Echarts"></a>Echarts</h2><ul><li><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/echarts.jpg" alt="echarts"></li></ul></li><li><h2 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h2><ul><li><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/ajax.png" alt="ajax"></li></ul></li><li><h2 id="Axios"><a href="#Axios" class="headerlink" title="Axios"></a>Axios</h2><ul><li><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/Axios.png" alt="axios"></li></ul></li><li><h2 id="WebPack"><a href="#WebPack" class="headerlink" title="WebPack"></a>WebPack</h2><ul><li><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/WebPack.jpg" alt="webpack"></li></ul></li><li><h2 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h2><ul><li><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/node.jpeg" alt="node"></li></ul></li><li><h2 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h2><ul><li><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/202207021611796.png" alt="vue"></li><li><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/202207021611795.jpg" alt="vue"></li><li><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/202207021611794.png" alt="vue"></li></ul></li><li><h2 id="React"><a href="#React" class="headerlink" title="React"></a>React</h2><ul><li><img src="https://tva4.sinaimg.cn/large/008cLf6Oly1h2e0niaosbj31e00goab0.jpg" alt="react"></li></ul></li><li><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2></li></ul><h1 id="发展"><a href="#发展" class="headerlink" title="发展"></a>发展</h1><ul><li><h2 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h2><ul><li><h3 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h3><ul><li><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/zc.jpg" alt="zc"></li></ul></li><li><h3 id="效率"><a href="#效率" class="headerlink" title="效率"></a>效率</h3>- </li><li><h3 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h3><ul><li><img src="https://tva4.sinaimg.cn/large/008cLf6Oly1h2e0x6xnuzj30m80cigng.jpg" alt="eng"></li></ul></li></ul></li><li><h2 id="规划"><a href="#规划" class="headerlink" title="规划"></a>规划</h2><ul><li><h3 id="自考"><a href="#自考" class="headerlink" title="自考"></a>自考</h3><ul><li><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/职业发展.png" alt="zk"></li></ul></li></ul></li></ul><h1 id="随笔"><a href="#随笔" class="headerlink" title="随笔"></a>随笔</h1><ul><li><h2 id="Diary"><a href="#Diary" class="headerlink" title="Diary"></a>Diary</h2><ul><li><img src="https://raw.githubusercontent.com/HaloBoys/PicGoMyDevice/main/img/diary.png" alt="diary"></li></ul></li><li><h2 id="小黄"><a href="#小黄" class="headerlink" title="小黄"></a>小黄</h2></li><li><h2 id="Todo"><a href="#Todo" class="headerlink" title="Todo"></a>Todo</h2><ul><li><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/1200x600wa.png" alt="todo"></li></ul></li></ul><h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><ul><li><h2 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h2><ul><li><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/github.png" alt="github"></li><li><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/github2.png" alt="github"></li></ul></li><li><h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><ul><li><img src="https://tvax2.sinaimg.cn/large/008cLf6Oly1h2e0yqa8gzj308304twek.jpg" alt="hexo"></li></ul></li><li><h2 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h2><ul><li><img src="https://tvax1.sinaimg.cn/large/008cLf6Oly1h2e10du7i8j30xc0h2aas.jpg" alt="markdown"></li></ul></li><li><h2 id="Software"><a href="#Software" class="headerlink" title="Software"></a>Software</h2><ul><li><img src="https://files.catbox.moe/vys4fk.png" alt="utools"></li><li><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/Atom.png" alt="atom"></li></ul></li><li><h2 id="VSCode"><a href="#VSCode" class="headerlink" title="VSCode"></a>VSCode</h2><ul><li><img src="https://tva4.sinaimg.cn/large/008cLf6Oly1h2e05al23qj30xc0hgabi.jpg" alt="vscode"></li><li><img src="https://tva3.sinaimg.cn/large/008cLf6Oly1h2e0fjoxaij30rs0ku42j.jpg" alt="vscode"></li></ul></li><li><h2 id="手册"><a href="#手册" class="headerlink" title="手册"></a>手册</h2><ul><li><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/shortcut.png" alt="手册"></li><li><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/bug2.png" alt="bug"></li></ul></li><li><h2 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h2><ul><li><img src="https://tva1.sinaimg.cn/large/008cLf6Oly1h2e0z8ujnhj30si0af75i.jpg" alt="picgo"></li></ul></li></ul><h1 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h1><ul><li>http</li><li>html(5)</li><li>css(3)</li><li>tools</li><li>js</li><li>nodejs</li><li>vue</li><li>可视化</li><li>响应式</li><li>Life</li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> 手册 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>TodoList 2022</title>
      <link href="/2022/05/19%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%94_Todo_TodoList%202022/84093bb3/"/>
      <url>/2022/05/19%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%94_Todo_TodoList%202022/84093bb3/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, this password doesn't look right. Please try again." data-whm="Sorry, this article cannot be verified, but you can still see the decrypted content.">  <script id="hbeData" type="hbeData" data-hmacdigest="fdad27eb78336379ac2ecc229a492a98ecdd15cca543474b421ac03f3845e18e"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-surge">      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="Enter Password.">Enter Password.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
          <category> Todo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tag Plugins Plus 外挂标签插件</title>
      <link href="/2022/05/18%E5%B7%A5%E5%85%B7/%E5%B7%A5%E5%85%B7_Hexo_Tag%20Plugins%20Plus%20%E5%A4%96%E6%8C%82%E6%A0%87%E7%AD%BE%E6%8F%92%E4%BB%B6/301b2839/"/>
      <url>/2022/05/18%E5%B7%A5%E5%85%B7/%E5%B7%A5%E5%85%B7_Hexo_Tag%20Plugins%20Plus%20%E5%A4%96%E6%8C%82%E6%A0%87%E7%AD%BE%E6%8F%92%E4%BB%B6/301b2839/</url>
      
        <content type="html"><![CDATA[<div class="tip "><p>官方开源文档：<a href="https://github.com/Akilarlxh/hexo-butterfly-tag-plugins-plus">https://github.com/Akilarlxh/hexo-butterfly-tag-plugins-plus</a></p></div><p>npm插件安装</p><ol><li><p>安装插件，在博客根目录 [Blogroot] 下打开终端，运行以下指令：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-tag-plugins-plus --save</span><br></pre></td></tr></table></figure><blockquote><p> markdown 渲染插件 hexo-renderer-marked 与外挂标签语法的兼容性较差，建议您将其替换成 hexo-renderer-kramed</p></blockquote> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span><br><span class="line">npm install hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure></li><li><p>添加配置信息，以下为写法示例<br>在站点配置文件 _config.yml 或者主题配置文件 _config.butterfly.yml 中添加</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tag-plugins-plus</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/615e2dec/</span></span><br><span class="line"><span class="attr">tag_plugins:</span></span><br><span class="line"><span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开关</span></span><br><span class="line"><span class="attr">priority:</span> <span class="number">5</span> <span class="comment">#过滤器优先权</span></span><br><span class="line"><span class="attr">issues:</span> <span class="literal">false</span> <span class="comment">#issues标签依赖注入开关</span></span><br><span class="line"><span class="attr">link:</span></span><br><span class="line">    <span class="attr">placeholder:</span> <span class="string">/img/link.png</span> <span class="comment">#link_card标签默认的图标图片</span></span><br><span class="line"><span class="attr">CDN:</span></span><br><span class="line">    <span class="attr">anima:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/assets/font-awesome-animation.min.css</span> <span class="comment">#动画标签anima的依赖</span></span><br><span class="line">    <span class="attr">jquery:</span> <span class="string">https://npm.elemecdn.com/jquery@latest/dist/jquery.min.js</span> <span class="comment">#issues标签依赖</span></span><br><span class="line">    <span class="attr">issues:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/assets/issues.js</span> <span class="comment">#issues标签依赖</span></span><br><span class="line">    <span class="attr">iconfont:</span> <span class="string">//at.alicdn.com/t/font_2032782_8d5kxvn09md.js</span> <span class="comment">#参看https://akilar.top/posts/d2ebecef/</span></span><br><span class="line">    <span class="attr">carousel:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/assets/carousel-touch.js</span></span><br><span class="line">    <span class="attr">tag_plugins_css:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/tag_plugins.css</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="行内文本样式-text"><a href="#行内文本样式-text" class="headerlink" title="行内文本样式 text"></a>行内文本样式 text</h1><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li><li>密码样式的文本：<psw>这里没有验证码</psw></li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% u 文本内容 %&#125;</span><br><span class="line">&#123;% emp 文本内容 %&#125;</span><br><span class="line">&#123;% wavy 文本内容 %&#125;</span><br><span class="line">&#123;% del 文本内容 %&#125;</span><br><span class="line">&#123;% kbd 文本内容 %&#125;</span><br><span class="line">&#123;% psw 文本内容 %&#125;</span><br></pre></td></tr></table></figure><h1 id="行内文本-span"><a href="#行内文本-span" class="headerlink" title="行内文本 span"></a>行内文本 span</h1><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<span class='p center logo large'>Volantis</span><span class='p center small'>A Wonderful Theme for Hexo</span></li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% span 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><p>配置参数</p><ol><li>字体: logo, code</li><li>颜色: red,yellow,green,cyan,blue,gray</li><li>大小: small, h4, h3, h2, h1, large, huge, ultra</li><li>对齐方向: left, center, right</li></ol><h1 id="段落文本-p"><a href="#段落文本-p" class="headerlink" title="段落文本 p"></a>段落文本 p</h1><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签：<p class='p red'>红色</p>、<p class='p yellow'>黄色</p>、<p class='p green'>绿色</p>、<p class='p cyan'>青色</p>、<p class='p blue'>蓝色</p>、<p class='p gray'>灰色</p>。</li><li>超大号文字<p class='p center logo large'>Volantis</p><p class='p center small'>A Wonderful Theme for Hexo</p></li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% p 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><p>配置参数</p><ol><li>字体: logo, code</li><li>颜色: red,yellow,green,cyan,blue,gray</li><li>大小: small, h4, h3, h2, h1, large, huge, ultra</li><li>对齐方向: left, center, right</li></ol><h1 id="上标标签-tip"><a href="#上标标签-tip" class="headerlink" title="上标标签 tip"></a>上标标签 tip</h1><div class="tip "><p>default</p></div><div class="tip info"><p>info</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义font awesome图标</p></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>配置参数</p><ol><li>样式: success,error,warning,bolt,ban,home,sync,cogs,key,bell</li><li>自定义图标：支持 fontawesome。</li></ol><h1 id="动态标签-anima"><a href="#动态标签-anima" class="headerlink" title="动态标签 anima"></a>动态标签 anima</h1><ul><li>On DOM load（当页面加载时显示动画）</li></ul><div class="tip warning faa-horizontal animated"><p>warning</p></div><div class="tip ban faa-flash animated"><p>ban</p></div><ul><li>调整动画速度</li></ul><div class="tip warning faa-horizontal animated faa-fast"><p>warning</p></div><div class="tip ban faa-flash animated faa-slow"><p>ban</p></div><ul><li>On hover（当鼠标悬停时显示动画）</li></ul><div class="tip warning faa-horizontal animated-hover"><p>warning</p></div><div class="tip ban faa-flash animated-hover"><p>ban</p></div><ul><li>On parent hover（当鼠标悬停在父级元素时显示动画）</li></ul><div class="tip warning faa-parent animated-hover"><p class="faa-horizontal">warning</p></div><div class="tip ban faa-parent animated-hover"><p class="faa-flash">ban</p></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>配置参数</p><div class="table-container"><table><thead><tr><th>On DOM load 当页面加载时</th><th>On hover 当鼠标悬停时</th><th>On parent hover 当鼠标悬停在父级元素时</th></tr></thead><tbody><tr><td>faa-wrench animated</td><td>faa-wrench animated-hover</td><td>faa-wrench</td></tr><tr><td>faa-ring animated</td><td>faa-ring animated-hover</td><td>faa-ring</td></tr><tr><td>faa-horizontal animated</td><td>faa-horizontal animated-hover</td><td>faa-horizontal</td></tr><tr><td>faa-vertical animated</td><td>faa-vertical animated-hover</td><td>faa-vertical</td></tr><tr><td>faa-flash animated</td><td>faa-flash animated-hover</td><td>faa-flash</td></tr><tr><td>faa-bounce animated</td><td>faa-bounce animated-hover</td><td>faa-bounce</td></tr><tr><td>faa-spin animated</td><td>faa-spin animated-hover</td><td>faa-spin</td></tr><tr><td>faa-tada animated</td><td>faa-tada animated-hover</td><td>faa-tada</td></tr><tr><td>faa-pulse animated</td><td>faa-pulse animated-hover</td><td>faa-pulse</td></tr><tr><td>faa-shake animated</td><td>faa-shake animated-hover</td><td>faa-shake</td></tr><tr><td>faa-tada animated</td><td>faa-tada animated-hover</td><td>faa-tada</td></tr><tr><td>faa-passing animated</td><td>faa-passing animated-hover</td><td>faa-passing</td></tr><tr><td>faa-passing-reverse animated</td><td>faa-passing-reverse animated-hover</td><td>faa-passing-reverse</td></tr><tr><td>faa-burst animated</td><td>faa-burst animated-hover</td><td>faa-burst</td></tr><tr><td>faa-falling animated</td><td>faa-falling animated-hover</td><td>faa-falling</td></tr><tr><td>faa-rising animated</td><td>faa-rising animated-hover</td><td>faa-rising</td></tr></tbody></table></div><h1 id="复选列表-checkbox"><a href="#复选列表-checkbox" class="headerlink" title="复选列表 checkbox"></a>复选列表 checkbox</h1><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><p>配置参数</p><ol><li>样式: plus, minus, times</li><li>颜色: red,yellow,green,cyan,blue,gray</li><li>选中状态: checked</li></ol><h1 id="单选列表-radio"><a href="#单选列表-radio" class="headerlink" title="单选列表 radio"></a>单选列表 radio</h1><div class='checkbox'><input type="radio" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="radio" />            <p>支持自定义颜色</p>            </div><div class='checkbox green'><input type="radio" />            <p>绿色</p>            </div><div class='checkbox yellow'><input type="radio" />            <p>黄色</p>            </div><div class='checkbox cyan'><input type="radio" />            <p>青色</p>            </div><div class='checkbox blue'><input type="radio" />            <p>蓝色</p>            </div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><p>配置参数</p><ol><li>颜色: red,yellow,green,cyan,blue,gray</li><li>选中状态: checked</li></ol><h1 id="链接卡片-link"><a href="#链接卡片-link" class="headerlink" title="链接卡片 link"></a>链接卡片 link</h1><div class="tag link"><a class="link-card" title="universe" href="http://universe2086.top/"><div class="left"><img src="https://npm.elemecdn.com/akilar-candyassets/image/siteicon/favicon.ico"/></div><div class="right"><p class="text">universe</p><p class="url">http://universe2086.top/</p></div></a></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 标题, 链接, 图片链接（可选） %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% link universe, http://universe2086.top/, https://npm.elemecdn.com/akilar-candyassets/image/siteicon/favicon.ico %&#125;</span><br></pre></td></tr></table></figure><h1 id="github-卡片-ghcard"><a href="#github-卡片-ghcard" class="headerlink" title="github 卡片 ghcard"></a>github 卡片 ghcard</h1><blockquote><p>ghcard 使用了 github-readme-stats 的 API，支持直接使用 markdown 语法来写。</p></blockquote><ul><li>用户信息卡片</li></ul><div class="table-container"><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/xaoxuu"><img src="https://github-readme-stats.vercel.app/api/?username=xaoxuu&theme=calm&show_owner=true"/></a></td></tr></tbody></table></div><ul><li>仓库信息卡片</li></ul><div class="table-container"><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=calm&show_owner=true"/></a></td></tr></tbody></table></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% ghcard 用户名, 其它参数（可选） %&#125;</span><br><span class="line">&#123;% ghcard 用户名/仓库, 其它参数（可选） %&#125;</span><br></pre></td></tr></table></figure><p>参数配置</p><blockquote><p>使用 , 分割各个参数。写法为：参数名=参数值</p></blockquote><div class="table-container"><table><thead><tr><th>参数名</th><th>取值</th><th>释义</th></tr></thead><tbody><tr><td>hide</td><td>stars,commits,prs,issues,contribs</td><td>隐藏指定统计</td></tr><tr><td>count_private</td><td>true</td><td>将私人项目贡献添加到总提交计数中</td></tr><tr><td>show_icons</td><td>true</td><td>显示图标</td></tr><tr><td>theme</td><td>请查阅 Available Themes</td><td>主题</td></tr></tbody></table></div><h1 id="github-徽标-ghbdage"><a href="#github-徽标-ghbdage" class="headerlink" title="github 徽标 ghbdage"></a>github 徽标 ghbdage</h1><ul><li>基本参数，定义徽标左右文字和图标 <br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Butterfly-Theme-orange?logo=&color=orange&link=&"></object><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Hexo-Frame-orange?logo=hexo&color=orange&link=&"></object></li><li>信息参数，定义徽标右侧内容背景色，指向链接 <br><object class="ghbdage" style="margin-inline:5px" title="本站使用JsDelivr为静态资源提供CDN加速" standby="loading..." data="https://img.shields.io/badge/JsDelivr-CDN-orange?logo=jsDelivr&color=abcdef&link=https://metroui.org.ua/index.html&"></object><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/GitHub-Source-orange?logo=GitHub&color=orange&link=https://github.com/&"></object></li><li>拓展参数，支持 shields 的 API 的全部参数内容 <br><object class="ghbdage" style="margin-inline:5px" title="本站采用双线部署，默认线路托管于Vercel" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=brightgreen&link=https://vercel.com/&style=social&logoWidth=20"></object><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=orange&link=&style=social&logoWidth=20&logoColor=violet"></object></li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage [right],[left],[logo]||[color],[link],[title]||[option] %&#125;</span><br></pre></td></tr></table></figure><p>配置参数</p><ol><li>left：徽标左边的信息，必选参数。</li><li>right: 徽标右边的信息，必选参数，</li><li>logo：徽标图标，图标名称详见 simpleicons，可选参数。</li><li>color：徽标右边的颜色，可选参数。</li><li>link：指向的链接，可选参数。</li><li>title：徽标的额外信息，可选参数。主要用于优化 SEO，但 object 标签不会像 a 标签一样在鼠标悬停显示 title 信息。</li><li>option：自定义参数，支持 shields.io 的全部 API 参数支持，具体参数可以参看上文中的拓展写法示例。形式为 name1=value2&amp;name2=value2。</li></ol><h1 id="网站卡片-sites"><a href="#网站卡片-sites" class="headerlink" title="网站卡片 sites"></a>网站卡片 sites</h1><div class="site-card-group"><a class="site-card" href="https://xaoxuu.com"><div class="img"><img src="https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png"/><span class="title">xaoxuu</span><span class="desc">简约风格</span></div></a><a class="site-card" href="https://inkss.cn"><div class="img"><img src="https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg"/><span class="title">inkss</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://colsrch.top"><div class="img"><img src="https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg"/><span class="title">Colsrch</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://linhk1606.github.io"><div class="img"><img src="https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png"/></div><div class="info"><img src="https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png"/><span class="title">Linhk1606</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><h1 id="音频-audio"><a href="#音频-audio" class="headerlink" title="音频 audio"></a>音频 audio</h1><div class="audio"><audio controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio 音频链接 %&#125;</span><br></pre></td></tr></table></figure><h1 id="视频-video"><a href="#视频-video" class="headerlink" title="视频 video"></a>视频 video</h1><ul><li>100% 宽度<div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></li><li>50% 宽度<div class="videos" col='2'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div></li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video 视频链接 %&#125;</span><br></pre></td></tr></table></figure><p>参数配置</p><ol><li>对其方向：left, center, right</li><li>列数：逗号后面直接写列数，支持 1 ～ 4 列。</li></ol><h1 id="折叠框-folding"><a href="#折叠框-folding" class="headerlink" title="折叠框 folding"></a>折叠框 folding</h1><blockquote><p>Butterfly 虽然也有内置折叠框 hideToggle 标签，但是 Volantis 的 folding 折叠框更好看一些。</p></blockquote><details class="folding-tag" blue open><summary> 查看图片测试 </summary>              <div class='content'>              <p><img src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg" alt=""></p>              </div>            </details><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 参数（可选）, 标题 %&#125;</span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><p>配置参数</p><ol><li>颜色：blue, cyan, green, yellow, red</li><li>状态：状态填写 open 代表默认打开。</li></ol><h1 id="诗词标签-poem"><a href="#诗词标签-poem" class="headerlink" title="诗词标签 poem"></a>诗词标签 poem</h1><div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。<br>明月几时有？把酒问青天。<br>不知天上宫阙，今夕是何年？<br>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。<br>起舞弄清影，何似在人间？</p><p>转朱阁，低绮户，照无眠。<br>不应有恨，何事长向别时圆？<br>人有悲欢离合，月有阴晴圆缺，此事古难全。<br>但愿人长久，千里共婵娟。</p></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% poem [title],[author] %&#125;</span><br><span class="line">诗词内容</span><br><span class="line">&#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure><p>参数配置</p><ol><li>title：诗词标题</li><li>author：作者，可以不写</li></ol><h1 id="阿里图标-icon"><a href="#阿里图标-icon" class="headerlink" title="阿里图标 icon"></a>阿里图标 icon</h1><div class="table-container"><table><thead><tr><th></th></tr></thead><tbody><tr><td><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rat_zi"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rat"></use></svg></td></tr><tr><td><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rabbit_mao"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rabbit"></use></svg></td></tr><tr><td><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-horse_wu"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-horse"></use></svg></td></tr><tr><td><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rooster_you"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rooster"></use></svg></td></tr></tbody></table></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon [icon-xxxx],[font-size] %&#125;</span><br></pre></td></tr></table></figure><p>参数配置</p><ol><li>icon-xxxx：表示图标 font-class, 可以在自己的阿里矢量图标库项目的 font-class 引用方案内查询并复制。</li><li>font-size：表示图标大小，直接填写数字即可，单位为 em。图标大小默认值为 1em。</li></ol><h1 id="进度条-progress"><a href="#进度条-progress" class="headerlink" title="进度条 progress"></a>进度条 progress</h1><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-red"  style="width: 10%" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-yellow"  style="width: 30%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-green"  style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-cyan"  style="width: 70%" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-blue"  style="width: 90%" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-gray"  style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress [width] [color] [text] %&#125;</span><br></pre></td></tr></table></figure><p>参数配置</p><ol><li>width: 0 到 100 的阿拉伯数字</li><li>color: 颜色，取值有 red,yellow,green,cyan,blue,gray</li><li>text: 进度条上的文字内容</li></ol><h1 id="注释-notation"><a href="#注释-notation" class="headerlink" title="注释 notation"></a>注释 notation</h1><span class='nota' data-nota='可以看到注解内容出现在顶栏'>把鼠标移动到我上面试试</span><p><br><br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota [label] , [text] %&#125;</span><br></pre></td></tr></table></figure><br>参数配置</p><ol><li>label: 注释词汇</li><li>text: 悬停显示的注解内容</li></ol>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>GithubAction 实现博客全自动部署</title>
      <link href="/2022/05/17%E5%B7%A5%E5%85%B7/%E5%B7%A5%E5%85%B7_Github_githubAction%20%E5%AE%9E%E7%8E%B0%E5%8D%9A%E5%AE%A2%E5%85%A8%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/d71988fb/"/>
      <url>/2022/05/17%E5%B7%A5%E5%85%B7/%E5%B7%A5%E5%85%B7_Github_githubAction%20%E5%AE%9E%E7%8E%B0%E5%8D%9A%E5%AE%A2%E5%85%A8%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/d71988fb/</url>
      
        <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>每次部署 Hexo 都需要运行指令三件套，随着文章越来越多，编译的时间也随之越来越长，通过 Github Action，我们只需要在每次完成博客的编写或修改以后，将改动直接 通过 git push 到远程仓库，之后的编译部署的工作统统交给 CI 来完成即可。</p><blockquote><p>CI\CD 其实说的是三件事情：「持续集成（Continuous Integration）」、「持续交付（Continuous Delivery）」、「持续部署（Continuous Deployment）」。</p></blockquote><p>无意间发现了github Action 这个功能，浅尝了一下发现挺有意思，每次提交代码之后它都会检测 .github/workflows 下的自定义脚本执行</p><p>第一次搭建 run 了 22 次才跑起来！真是个小laji。再见了 gitee 你只好用来当备胎了，我要投入github 的怀抱了。</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/202205180258211.png" alt="22 次!"></p><p>github Action 介绍</p><p>通过 GitHub Actions 让日常开发流程很多事情可以自动化起来. 对于自动化, 开发者一定非常熟悉, 从日常离不开的 CI/CD (自动集成测试和持续部署), 到被无数人膜拜和吐槽的 jenkins. 通过各种各样的自动化工具来节省人力和确保代码质量。</p><p>特点：</p><ul><li>通过 Docker 隔离</li><li>GitHub 提供慷慨的计算资源(每个 workflow 会独享 1 核虚拟 CPU, 3.75GB 内存, 网络权限和 100GB 的磁盘空间, 真大气！)</li><li>代码上下文(可以获取触发 Actions 的代码上下文环境, 比如当前分支)</li><li>workflow 有一定限制<ul><li>每个 workflow, 包括排队和执行时间, 最多 58 分钟; 每个 workflow 最多可以包含 100 个 Action; 每个仓库同一时刻只能运行两个 workflow (足够慷慨了, 这相当于你同时占据了 GitHub 近 8G 的内存资源).</li></ul></li><li>提供一种新的配置语言和一个体验非常现代化的 workflow 编辑器</li><li>支持在代码仓库的 Settings 中增加不超过 100 个密钥(比如 Slack, S3 等), 供 workflow 使用; 也可以直接使用可视化编辑器增加</li><li>Workflow 的 Action 支持设置 Icon 和 Icon 背景色</li></ul><h1 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a>配置步骤</h1><blockquote><p>参考文章：<a href="https://akilar.top/posts/f752c86d/#%E9%85%8D%E7%BD%AEGithub-Action">https://akilar.top/posts/f752c86d/#%E9%85%8D%E7%BD%AEGithub-Action</a></p></blockquote><h2 id="获取-Token"><a href="#获取-Token" class="headerlink" title="获取 Token"></a>获取 Token</h2><p>为了确保交由 Github Action 来持续部署时，Github Action 具备足够的权限来进行 hexo deploy 操作，需要先获取 Token。</p><h3 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h3><p>访问 Github-&gt; 头像（右上角）-&gt;Settings-&gt;Developer Settings-&gt;Personal access tokens-&gt;<strong>generate new token</strong><br><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220518124355.png" alt="20220518124355"><br>创建的 Token <strong>名称随意</strong>，但必须勾选 repo 项<br><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220518124513.png" alt="20220518124513"><br>填写完成后点击 generate 生成 token token 只会显示这一次，之后将无法查看，所以务必保证你已经记录下了 Token。之后如果忘记了就只能重新生成重新配置了。</p><h3 id="Gitee"><a href="#Gitee" class="headerlink" title="Gitee"></a>Gitee</h3><p>访问 Gitee-&gt; 头像（右上角）-&gt; 设置 -&gt; 私人令牌 -&gt; 生成新令牌<br><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220518124631.png" alt="20220518124631"><br>Token 只会显示这一次，之后将无法查看，所以务必保证你已经记录下了 Token。之后如果忘记了就只能重新生成重新配置了。</p><h2 id="Github创建存放源码的私有仓库"><a href="#Github创建存放源码的私有仓库" class="headerlink" title="Github创建存放源码的私有仓库"></a>Github创建存放源码的私有仓库</h2><blockquote><p>之所以是私有仓库，是因为在接下来的配置中会用到 Token，如果 Token 被盗用，别人可以肆意操作你的 github 仓库内容，为了避免这一风险，才选择的博客源码闭源。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/202205171524756.png" alt="创建存放源码的私有仓库"></p><p>创建完成后，后续需要把博客的源码 push 到这里。<br>首先获取远程仓库地址，此处虽然 SSH 和 HTTPS 均可。SSH 在绑定过 ssh key 的设备上无需再输入密码，HTTPS 则需要输入密码，但是 SSH 偶尔会遇到端口占用的情况。请自主选择。</p><h2 id="配置-deploy"><a href="#配置-deploy" class="headerlink" title="配置 deploy"></a>配置 deploy</h2><p>打开站点配置文件 [Blogroot]/_config.yml, 找到 deploy 配置项，使用之前生成的 [SiteToken] 和各个站点仓库 URL 来组装地址。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line">    <span class="attr">gitHub:</span> <span class="string">https://[GithubUsername]:[GithubToken]@github.com/[GithubUsername]/[GithubBlogRepo].git[,branch]</span></span><br><span class="line">    <span class="attr">gitee:</span> <span class="string">https://[GiteeUsername]:[GiteeToken]@gitee.com/[GiteeUsername]/[GiteeBlogRepo].git[,branch]</span></span><br><span class="line">    <span class="attr">coding:</span> <span class="string">https://[TokenUser]:[CodingToken]@e.coding.net/[CodingUsername]/[CodingBlogRepo].git[,branch]</span></span><br><span class="line">  <span class="comment"># [,branch]为可选项，表示部署的分支</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 参照写法：</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> </span><br><span class="line">    <span class="attr">gitHub:</span> <span class="string">https://HaloBoys:ghp_7L9LKoVXwHzlxxxxxxxxMeW71xj8zQ@github.com/HaloBoys/HaloBoys.github.io.git,main</span></span><br><span class="line">    <span class="attr">gitee:</span> <span class="string">https://Haloboys:e112dxxxxxxxxx1c2b3c01a6b6ff@gitee.com/Haloboys/blog.git,main</span></span><br></pre></td></tr></table></figure><h2 id="Github-Action-配置"><a href="#Github-Action-配置" class="headerlink" title="Github Action 配置"></a>Github Action 配置</h2><h3 id="Github-page-自动化"><a href="#Github-page-自动化" class="headerlink" title="Github page 自动化"></a>Github page 自动化</h3><p>在 [Blogroot] 新建.github 文件夹，注意开头是有个. 的。然后在.github 内新建 workflows 文件夹，再在 workflows 文件夹内新建 autodeploy.yml, 在 [Blogroot]/.github/workflows/autodeploy.yml 里面输入</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当有改动推送到 master 分支时，启动Action</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">BLOG自动部署</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span> <span class="comment">#2020年10月后github新建仓库默认分支改为main，注意更改</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">release:</span></span><br><span class="line">    <span class="attr">types:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">published</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">检查分支</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">ref:</span> <span class="string">master</span> <span class="comment">#2020年10月后github新建仓库默认分支改为main，注意更改</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装</span> <span class="string">Node</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">node-version:</span> <span class="string">&quot;12.x&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装</span> <span class="string">Hexo</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        export TZ=&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"><span class="string">        npm install hexo-cli -g</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">缓存</span> <span class="string">Hexo</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/cache@v1</span></span><br><span class="line">      <span class="attr">id:</span> <span class="string">cache</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">node_modules</span></span><br><span class="line">        <span class="attr">key:</span> <span class="string">$&#123;&#123;runner.OS&#125;&#125;-$&#123;&#123;hashFiles(&#x27;**/package-lock.json&#x27;)&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装依赖</span></span><br><span class="line">      <span class="attr">if:</span> <span class="string">steps.cache.outputs.cache-hit</span> <span class="type">!=</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        npm install --save</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">生成静态文件</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        hexo clean</span></span><br><span class="line"><span class="string">        hexo generate</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">部署</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        git config --global user.name &quot;[GithubUsername]&quot;</span></span><br><span class="line"><span class="string">        git config --global user.email &quot;[GithubEmail]&quot;</span></span><br><span class="line"><span class="string">        git clone https://github.com/[GithubUsername]/[GithubBlogRepo].git .deploy_git</span></span><br><span class="line"><span class="string">        # 此处务必用HTTPS链接。SSH链接可能有权限报错的隐患</span></span><br><span class="line"><span class="string">        # =====注意.deploy_git前面有个空格=====</span></span><br><span class="line"><span class="string">        # 这行指令的目的是clone博客静态文件仓库，防止Hexo推送时覆盖整个静态文件仓库，而是只推送有更改的文件</span></span><br><span class="line"><span class="string">        hexo deploy</span></span><br></pre></td></tr></table></figure><h3 id="Github-page-GiteePage-自动化"><a href="#Github-page-GiteePage-自动化" class="headerlink" title="Github page + GiteePage 自动化"></a>Github page + GiteePage 自动化</h3><blockquote><p>Gitee的自动部署，即使不开通 Gitee pages pro，也可以完成自动更新。</p></blockquote><p>[Blogroot]/.github/workflows/autodeploy.yml 添加输入:<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">自动部署</span></span><br><span class="line"><span class="comment"># 当有改动推送到master分支时，启动Action</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line">      <span class="comment">#2020年10月后github新建仓库默认分支改为main，注意更改</span></span><br><span class="line">  <span class="attr">release:</span></span><br><span class="line">    <span class="attr">types:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">published</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">检查分支</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">ref:</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装</span> <span class="string">Node</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">node-version:</span> <span class="string">&quot;12.x&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装</span> <span class="string">Hexo</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        export TZ=&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"><span class="string">        npm install hexo-cli -g</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">缓存</span> <span class="string">Hexo</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/cache@v1</span></span><br><span class="line">      <span class="attr">id:</span> <span class="string">cache</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">node_modules</span></span><br><span class="line">        <span class="attr">key:</span> <span class="string">$&#123;&#123;runner.OS&#125;&#125;-$&#123;&#123;hashFiles(&#x27;**/package-lock.json&#x27;)&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装依赖</span></span><br><span class="line">      <span class="attr">if:</span> <span class="string">steps.cache.outputs.cache-hit</span> <span class="type">!=</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        npm install gulp-cli -g #全局安装gulp</span></span><br><span class="line"><span class="string">        npm install --save</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">生成静态文件</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        hexo clean</span></span><br><span class="line"><span class="string">        hexo bangumi -u #bilibili番剧更新</span></span><br><span class="line"><span class="string">        hexo generate</span></span><br><span class="line"><span class="string">        gulp</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">部署</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        git config --global user.name &quot;[GithubUsername]&quot;</span></span><br><span class="line"><span class="string">        git config --global user.email &quot;[GithubEmail]&quot;</span></span><br><span class="line"><span class="string">        git clone https://github.com/[GithubUsername]/[GithubBlogRepo].git .deploy_git</span></span><br><span class="line"><span class="string">        # 此处务必用HTTPS链接。SSH链接可能有权限报错的隐患</span></span><br><span class="line"><span class="string">        # =====注意.deploy_git前面有个空格=====</span></span><br><span class="line"><span class="string">        # 这行指令的目的是clone博客静态文件仓库，防止Hexo推送时覆盖整个静态文件仓库，而是只推送有更改的文件</span></span><br><span class="line"><span class="string">        hexo deploy</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">同步到</span> <span class="string">Gitee</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">wearerequired/git-mirror-action@master</span></span><br><span class="line">      <span class="attr">env:</span></span><br><span class="line">          <span class="comment"># 注意在github私有仓库的Settings-&gt;Secrets 配置 GITEE_RSA_PRIVATE_KEY</span></span><br><span class="line">          <span class="attr">SSH_PRIVATE_KEY:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITEE_RSA_PRIVATE_KEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">          <span class="comment"># 注意替换为你的 GitHub 源仓库地址</span></span><br><span class="line">          <span class="attr">source-repo:</span> <span class="string">&quot;git@github.com:[GithubUsername]/[GithubBlogRepo].git&quot;</span></span><br><span class="line">          <span class="comment"># 注意替换为你的 Gitee 目标仓库地址</span></span><br><span class="line">          <span class="attr">destination-repo:</span> <span class="string">&quot;git@gitee.com:[GiteeUsername]/[GiteeBlogRepo].git&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">构建</span> <span class="string">Gitee</span> <span class="string">Pages</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">yanglbme/gitee-pages-action@master</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">          <span class="comment"># 注意替换为你的 Gitee 用户名</span></span><br><span class="line">          <span class="attr">gitee-username:</span> [<span class="string">GiteeUsername</span>]</span><br><span class="line">          <span class="comment"># 注意在在github私有仓库的Settings-&gt;Secrets 配置 GITEE_PASSWORD</span></span><br><span class="line">          <span class="attr">gitee-password:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITEE_PASSWORD</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="comment"># 注意替换为你的 Gitee 仓库</span></span><br><span class="line">          <span class="attr">gitee-repo:</span> [<span class="string">GiteeUsername</span>]<span class="string">/[GiteeBlogRepo]</span></span><br></pre></td></tr></table></figure></p><p>打开Github私有仓库 点击 Settings —&gt; Secrets —&gt; Actions 新建两个变量：</p><ol><li><strong>GITEE_RSA_PRIVATE_KEY</strong>：在配置 SSH-KEY 时，我们用来与 Github 绑定的是公钥，而私钥存放在（以 win10 为例）C:\Users\userneme.ssh\id_rsa 文件内</li><li><strong>GITEE_PASSWORD</strong>：gitee 账户的登录密码</li></ol><blockquote><p>gitee-pages-action 插件需要用账号密码模拟登录</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220518033109.png" alt="20220518033109"></p><ol><li><strong>微信搜索 Gitee 公众号关注并绑定账号密码。</strong></li></ol><blockquote><p>用 github action 来远程更新 gitee 的站点部署时，会收到异地登陆的短信，提示需要验证码。</p></blockquote><p>解决方案：在微信上搜索 Gitee 微信公众号，在微信公众号内绑定自己的 Gitee 账号，这样虽然还是会有异地登录提示，但是发过来的消息不再需要填写验证码。</p><blockquote><p>存放博客静态页面的Gitee<strong>仓库名称和用户名必须保持一致</strong> ，不然会出现部署失败的情况，别问我怎么知道的，说多了都是泪。还有第一次部署要先登录 Gitee 手动部署。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220518222318.png" alt="20220518222318"></p><h2 id="设置远程仓库"><a href="#设置远程仓库" class="headerlink" title="设置远程仓库"></a>设置远程仓库</h2><blockquote><p>将前面创建的Github 私有仓库进行配置</p></blockquote><ol><li>删除或者先把 [Blogroot]/themes/butterfly/.git 移动到非博客文件夹目录下，原因是主题文件夹下的.git 文件夹的存在会导致其<strong>被识别成子项目</strong>，从而无法被上传到源码仓库。</li><li>在博客根目录 [Blogroot] 路径下运行：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git init <span class="comment">#初始化 (如果已经连接了其他仓库可以跳过此步骤，使用 git remote rm origin 命令删除原有仓库链接)</span></span><br><span class="line">git remote add origin git@github.com:[GithubUsername]/[SourceRepo].git <span class="comment">#[SourceRepo]为存放源码的github**私有仓库**</span></span><br><span class="line">git checkout -b main </span><br></pre></td></tr></table></figure></li><li>添加屏蔽项</li></ol><blockquote><p>因为能够使用指令进行安装的内容不包括在需要提交的源码内，所有我们需要将这些内容添加到屏蔽项，表示不上传到 github 上。这样可以显著减少需要提交的文件量和加快提交速度。</p></blockquote><p>打开/新建 [Blogroot]/.gitignore, 输入以下内容：<br><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br><span class="line">.deploy_git*/</span><br><span class="line">.idea</span><br><span class="line">themes/butterfly/.git</span><br><span class="line"></span><br><span class="line">// 如果不是 butterfly 主题，记得替换最后一行内容为你自己当前使用的主题。</span><br></pre></td></tr></table></figure></p><ol><li>运行 git 提交指令，将博客源码提交到 github 上</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;github action update&quot;</span></span><br><span class="line">git push origin main</span><br></pre></td></tr></table></figure><ol><li>此时你的主题文件夹若已经被正常上传，并且你也添加了主题文件夹下的.git 文件夹的屏蔽项。那你可以考虑把第一步移走或删除的.git 放回原处。</li></ol><h2 id="部署查看"><a href="#部署查看" class="headerlink" title="部署查看"></a>部署查看</h2><p>打开 GIthub 存放源码的私有仓库，找到 action。</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220518032125.png" alt="20220518032125"></p><p>根据 Commit 记录找到相应的任务</p><p>点击 Deploy 查看部署情况<br><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220518032247.png" alt="20220518032247"></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> Github </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>英语写作</title>
      <link href="/2022/05/17%E5%8F%91%E5%B1%95/%E5%8F%91%E5%B1%95_%E9%98%85%E8%AF%BB_%E8%8B%B1%E8%AF%AD%E5%86%99%E4%BD%9C/6a199313/"/>
      <url>/2022/05/17%E5%8F%91%E5%B1%95/%E5%8F%91%E5%B1%95_%E9%98%85%E8%AF%BB_%E8%8B%B1%E8%AF%AD%E5%86%99%E4%BD%9C/6a199313/</url>
      
        <content type="html"><![CDATA[<h1 id="How-to-Relieve-My-Pressure"><a href="#How-to-Relieve-My-Pressure" class="headerlink" title="How to Relieve My Pressure"></a>How to Relieve My Pressure</h1><p>​    Nowadays, college students are faced with various kinds of pressure, such as study pressure, financial pressure and employment pressure. Though pressure encourages motivation, too much pressure can seriously affect people’s physical and mental health, so it is necessary to handle it properly.</p><p>​    When it comes to relieving pressure , people may vary in their ways . In my life , I have pressure from family members , friends , study , future employment , etc . Among them the most troublesome is employment pressure . In order to reduce my anxiety, I turn to my parents and teachers for help. They help me analyze my advantages and disadvantages. Besides, my relatives and friends give me much useful advice and many helpful resources. These all help relieve my pressure.</p><p>​    All in all , it is important to recognize the pressure and deal with it rather than escape from it . <strong>Only</strong> in this way <strong>can we</strong> really enjoy the beauty of life .</p><p>​    当前，大学生面临着学习压力、经济压力、就业压力等多种压力。虽然压力鼓励动力，但压力太大会严重影响人的身心健康，所以有必要妥善处理。</p><p>​    当谈到缓解压力时，人们可能有不同的方式。在我的生活中，我有来自家庭的压力。会员、朋友、学习、未来就业等。其中最麻烦的是就业压力。为了减轻焦虑，我向父母和老师寻求帮助。它们帮助我分析自己的优势和劣势。此外，我的亲戚和朋友给了我很多有用的建议和很多有用的资源。这些都有助于减轻我的压力。</p><p>​    总而言之，重要的是要认识到压力并处理它，而不是逃避它。只有这样，我们才能真正享受生活的美好。</p><h1 id="Part-time-Jobs"><a href="#Part-time-Jobs" class="headerlink" title="Part-time Jobs"></a>Part-time Jobs</h1><p>​    In contemporary society, college students’ taking part-time jobs has become a hot topic. It has a great influence on<br>their life.<br>​    I believe there are both benefits and drawbacks. Clearly, in addition to getting an income, college students taking part-time jobs may enjoy a more exciting lifestyle as they can meet people from all walks of life and develop a sense of responsibility which can’t be learned in the classroom. On the other hand, the negative effects of part-time jobs are also<br>obvious. Students who take part-time jobs may spend less time focusing on study, and if they seek to excel in both the part-time job and study, the busy life they lead may put their health at risk. Besides, the society is much more<br>complicated than they have expected, and they sometimes may be exposed to danger.<br>​    In my opinion, College students ought to keep a balance between academic study and part-time jobs, and always<br>ear in mind that a students priority is to acquire knowledge at school .</p><p>​    在当代社会，大学生兼职已经成为一个热门话题。这对他们的生活有很大的影响。</p><p>​    我相信有利有弊。显然，除了获得收入，大学生兼职工作可以享受更令人兴奋的生活方式，因为他们可以遇到来自各行各业的人，并培养了责任感，这是在课堂上学不到的。另一方面，兼职工作的负面影响也很明显。从事兼职工作的学生可能会花较少的时间集中在学习上，如果他们想在兼职工作和学习中都出类拔萃，繁忙的生活可能会危及他们的健康。此外，社会比他们预想的复杂得多，他们有时可能会暴露在危险之中。</p><p>​    在我看来，大学生应该在学术学习和兼职工作之间保持平衡，并始终牢记学生的首要任务是在学校获得知识。</p><h1 id="Should-College-Students-Take-Part-time-Jobs"><a href="#Should-College-Students-Take-Part-time-Jobs" class="headerlink" title="Should College Students Take Part-time Jobs"></a>Should College Students Take Part-time Jobs</h1><p>​    Should College Students Take Part-time Jobs? Nowadays, many college students are taking part-time jobs in their spare time. </p><p>​    On this phenomenon, different people have different views. Opponents, especially parents of those students, think that the major task for college students is to study. Taking part-time jobs will cut into their time for study. Book knowledge is the most important. The so called social experience can be acquired after they graduate and enter society. Supporters see many advantages in college students taking part-time jobs. Firstly, it provides the students a chance to realize that money is always earned in a hard way so that they’ll learn to be economical. Secondly, from a practical point of view, students can earn some money to relieve the financial burden on their parents. Thirdly, part-time jobs may lead the students out of the ivory tower to see the real world.</p><p>​    Although opinions vary as to whether students should take part time jobs or not, it is up to the students themselves to make the decision after sizing up their own special case. If they can handle their study very well, taking a part-time job might be fun.</p><p>​    大学生是否应该兼职？目前很多大学生都在他们空闲时间做兼职。</p><p>​    在这一现象上，不同的人有不同的看法。反对者，尤其是那些学生父母，他们认为大学生的主要任务是学习。做兼职会减少他们的学习时间。书本上的知识是最重要的。所谓的社会经验可以在他们毕业后踏入社会时获得。支持者认为大学生兼职工作有很多优点。首先，它为学生提供一个机会来意识到钱总是难的，他们才会学会节俭。其次，从实际的角度来看，学生可以赚一些钱来减轻父母的经济负担。第三，兼职可以引导学生走出象牙塔，看到真实的世界。</p><p>​    尽管对于学生是否应该参加兼职工作众说纷纭，是由学生自己视自己的特殊情况而作出的决定。如果他们能够处理好学习兼职工作也许会很有趣。</p><h1 id="Life-long-Learning"><a href="#Life-long-Learning" class="headerlink" title="Life-long Learning"></a>Life-long Learning</h1><p>​Chairman Mao once said one is never too old to learn, his words have inspired so many people to study all the time. Life-long learning is very necessary today, many teachers have kept studying for they need to refresh their knowledge. For me, I also like to keep life-long learning, the reasons are in the following.</p><p><strong>On the one hand</strong>, the society develops so fast, I don’t want to be kicked out, so I need to keep studying and make myself keep pace with the time. Like the old people, they don’t know how to use computer, some of them learn the computer and some refuse to learn. The result is that the one who doesn’t use computer can’t keep pace with the time.  <strong>On the other hand</strong>, life-long learning helps me have the passion on life. I am always curious about the new things, so I will want to know them more. If I stop learning, I will stop thinking and feel myself like waiting to die, how terrible it is. </p><p>​Life-long learning is necessary for everyone, it is the only way to make us keep pace with the time. </p><p>毛主席曾经说过活到老，学到老，他的这些话鼓励了很多人坚持学习。终身学习在今天是很必要的，很多教师就坚持学习，因为他们需要更新知识。对于我来说，我也喜欢保持终身学习，理由如下。</p><p><strong>一方面</strong>，社会发展很快，我不想要被淘汰，因此我需要保持学习，让自己与时俱进。比如老人家，他们不知道如何使用电脑，一些老人家学会了电脑，一些拒绝去学。结果就是不用电脑的人无法与时俱进。<strong>另一方面</strong>，终身学习能让我对生活有激情。我总是对新事物充满好奇，所以我想要了解更多。如果我停止学习，就会停下来思考，感觉自己就像在等死，多么可怕啊。</p><p>终身学习对每个人来说都是必须得，这也是让我们保持与时俱进的唯一方法。</p><h1 id="Frustration"><a href="#Frustration" class="headerlink" title="Frustration"></a>Frustration</h1><p>If there is any single factor that makes for success in living, it is the ability to profit by defeat. Every success I know has been achieved because the person was able to analyze defeat and actually profit by it in his next undertaking. Confuse defeat with failure, and you are doomed indeed to failure. For it isn’t defeat that makes you fail: it is your own refusal to see in defeat the guide and encouragement to success.</p><p>Defeats are nothing to be ashamed of. They are routine incidents in the life of every man who achieves success. But defeat is a dead loss unless you do face it without humiliation, analyze it and learn why you failed. Defeat, in other words, can help to cure its own cause. Not only does defeat prepare us for success, but nothing can arouse within us such a compelling desire to succeed. If you let a baby grasp a rod and try to pull it away, he will cling more and more tightly until his whole weight is suspended. It is this same reaction which should give you new and greater strength every time you are defeated.</p><p>If you exploit the power which defeat gives, you can accomplish with it far more than you are capable of.</p><p>生活中如果有任何一个因素可以促进成功，那就是从挫折中受益的能力。我所了解的每一次达到的成功都是因为那个人能够对挫折进行分析，在下一次工作中真正得益。如果混淆挫折和失败，你就注定会真正失败。 因为不是挫折使你失败，而是你自己拒绝从挫折中看到成功的方向和勇气。</p><p>挫折并不可耻。在每个取得成功的人的生活中，挫折是家常便饭。但你一定要能够面对挫折而不感到羞耻，能够分析它并了解失败的原因，否则挫折就是绝对的损失。换言之，挫折可以帮助解决它自身的起因。挫折不但可以为我们成功做好准备，而且没有任何东西可以在我们的内心激发起如此强烈的想要成功的欲望。如果你让一个婴儿抓住一根竿子，然后试着把竿子抽出来，孩子就会越抓越紧，直到他们整个重量都依附于此。每次你被击败的时候，正是这同样的反应会赋予你崭新的更为巨大的力量。</p><p>如果你能够利用挫折带来的这种力量，你就能够用它来完成远远超乎你能力的目标。</p><h1 id="My-View-on-Studying-Abroad"><a href="#My-View-on-Studying-Abroad" class="headerlink" title="My View on Studying Abroad"></a>My View on Studying Abroad</h1><p>Nowadays, many middle school students prefer studying abroad because English plays an important role in<br>their daily life. Generally speaking, the advantages of doing so are as follows. First, it gives them a good<br>environment for language study. Second, they can learn foreign advanced science and technology. Besides, they<br>can also spread our national culture to foreign countries.</p><p>But every coin has two sides. The negative aspects are also apparent. One of the important disadvantages is<br>that middle school students are too young to take care of themselves and that they lack life experience. What’s<br>more,the cost for life and study is too high.</p><p>Through the above analysis, I believe that the positive aspects overweigh the negative ones. As for me, I<br>would like to go abroad for my future education.</p><p>现在，许多中学生更喜欢出国留学，因为英语在英语学习中起着重要的作用。他们的日常生活。总的来说，这样做的好处如下。首先，它给了<br>他们一个很好的。语言学习的环境。第二，他们可以学习国外先进的科学技术。此外，他们。也可以把我们的民族文化传播到国外。</p><p>但每一枚硬币都有两面。负面因素也是显而易见的。其中一个重要的缺点是。中学生太小，生活不能自理，缺乏生活经验。什么。此外，生活<br>和学习的成本太高了。</p><p>通过以上分析，我认为积极的方面大于消极的方面。至于我，我想出国留学。</p><h1 id="Career-or-Family-Which-Is-More-Important"><a href="#Career-or-Family-Which-Is-More-Important" class="headerlink" title="Career or Family: Which Is More Important?"></a>Career or Family: Which Is More Important?</h1><p>When asked about their opinion of career and family, people always respond differently. Some people deem it more<br>important to pursue their career, while there are other people who argue that family should be the number one in one’s life.</p><p>It goes without any question that career plays a key in the first place, career can give us an<br>aim to live on. Without career, much of our living time will be certainly meaningless. What’s more, career can<br>provide us with a means to live on. Most people earn their income from a job. On the other hand, family is also an<br>indispensable part of life, as many people will admit. Family is always regarded as a place where we can escape<br>from troubles in life. In addition, we can obtain a sense of belonging from family. Without it, we may feel lonely<br>and desperate.</p><p>In my opinion, career and family are not in opposition to each other, they can enhance each other so<br>that our life can become better and better. Therefore, we can’t say which is more important, but we can say<br>keeping a balance between them is important.</p><p>当被问及他们对事业和家庭的看法时，人们的回答总是不同的。一些人认为追求事业更重要，而另一些人则认为家庭应该是生命中的第一位。</p><p>毫无疑问，事业首先起着关键作用，事业可以给我们带来。目标是活下去。没有事业，我们生活的大部分时间肯定是没有意义的。更重要<br>是，事业可以。为我们提供一种生存的手段。大多数人从工作中赚取收入。另一方面，家庭也是一种。许多人都会承认，这是生活中不可或<br>的一部分。家庭总是被认为是我们可以逃避的地方。远离生活中的麻烦。此外，我们还可以从家庭中获得归属感。如果没有它，我们可能会<br>到孤独。也很绝望。</p><p>在我看来，事业和家庭并不是对立的，他们可以相互促进。我们的生活会变得越来越好。因此，我们不能说哪个更重要，但我们可以说。在它<br>们之间保持平衡是很重要的。</p><h1 id="How-to-Keep-Psychologically-Healthy"><a href="#How-to-Keep-Psychologically-Healthy" class="headerlink" title="How to Keep Psychologically Healthy?"></a>How to Keep Psychologically Healthy?</h1><p>One in four people will experience some kind of mental problem in the course of a year. When you fail to<br>manage these problems, they are likely to cause various mental illnesses.</p><p>The cause of mental health problems often vary a lot from one case to another. In today’s society, a good number<br>of people are suffering from heavy pressure. Others lack communication skills. In addition, a lot of people are ignorant of psychological knowledge about how to keep mentally fit.</p><p>There are a lot of ways to curb mental health problems and keep psychologically healthy. Firstly, find the real<br>cause of your mental health problem and see whether you can do something about it. Secondly, learn to relax<br>yourself and take exercises to release the pressure. Lastly, you may find it helpful to talk to your partner or<br>friend about your problem, or seek support and advice form a psychological consultant. </p><p>每四个人中就有一个会在一年内经历某种精神问题。当你没能做到。处理好这些问题，很可能会导致各种精神疾病。</p><p>心理健康问题的起因往往因人而异。在当今社会，相当多的人承受着沉重的压力。其他人缺乏沟通能力。此外，很多人对如何保持精神健康的<br>心理学知识一无所知。</p><p>有很多方法可以抑制心理健康问题，保持心理健康。首先，找出你心理健康问题的真正原因，看看你是否能做些什么。其次，学会放松自己，<br>通过锻炼来释放压力。最后，你可能会发现和你的伴侣或朋友谈谈你的问题，或者向心理咨询师寻求支持和建议是有帮助的。</p><h1 id="Do-Libraries-Become-Useless-at-the-Age-of-Information"><a href="#Do-Libraries-Become-Useless-at-the-Age-of-Information" class="headerlink" title="Do Libraries Become Useless at the Age of Information?"></a>Do Libraries Become Useless at the Age of Information?</h1><p>There has been a heated discussion about libraries at the age of information among. Some people,<br>especially the younger generation, challenge the value of conventional libraries. When they need any information in<br>their studies or work, they can turn to their computers for help. For this reason, they do not need to go to a library for borrowing or returning one or two books.</p><p>While others, including most old people as well as scholars, value libraries. They love libraries because they<br>can enjoy peace and quietness in an isolated spiritual world. And they also have access to rare academic works<br>needed for their studies in the libraries.</p><p>In my view, conventional libraries are still available though there is still much room for improving. At the age<br>of information, as long as knowledge is respected and cherished, libraries won’t extinct from our lives. On the<br>other hand, libraries should not refuse the latest information technology, which will enable them to regain those<br>young readers.</p><p>信息时代的图书馆引发了一场激烈的讨论。一些人，尤其是年轻一代，对传统图书馆的价值提出了挑战。当他们在学习或工作中需要任何信息<br>时，他们可以向他们的计算机寻求帮助。因此，他们不需要去图书馆借还一两本书。</p><p>而其他人，包括大多数老年人和学者，则重视图书馆。他们热爱图书馆，因为他们可以在与世隔绝的精神世界中享受和平与宁静。他们还可以<br>在图书馆获得学习所需的稀有学术著作。</p><p>在我看来，传统的图书馆仍然是可用的，尽管仍有很大的改进空间。在信息时代，只要尊重和珍惜知识，图书馆就不会从我们的生活中消失。<br>另一方面，图书馆不应该拒绝最新的信息技术，因为这将使他们重新获得年轻读者。</p><h1 id="How-Will-Our-Life-Go-on-Without-the-Internet"><a href="#How-Will-Our-Life-Go-on-Without-the-Internet" class="headerlink" title="How Will Our Life Go on Without the Internet?"></a>How Will Our Life Go on Without the Internet?</h1><p>If asked whether the Internet is the greatest discovery of the 20th century, my answer would be “yes”. The<br>Internet has drawn the world closer together, helped realize countless incredible dreams, and provided modern<br>people with many conveniences and a brilliant life.</p><p>Today, many people simply feel they cannot live without the Internet. Governments publish their latest policies<br>and decisions online for worldwide recognition. Political campaigns are often done online to gain wider public<br>support. Companies and enterprises resort to the Internet for more business opportunities and potential customers at<br>home and abroad . Universities and researchers turn to the Internet if they’d seek international cooperation or<br>funding. Common folks like us also rely on the cyber world in various ways, for communication, entertainment,<br>banking and shopping.</p><p>The power of the Internet is all pervasive and its many negative effects are already visible. For example,<br>Internet addicts tend to withdraw to their own fantasy world rather than communicate with a real person. Children<br>are exposed to online pornography and violence. Internet frauds are an everyday occurrence. In view of all this,<br>you are advised to use the Internet with wisdom. Keep it at a safe distance and never lose yourself.</p><p>如果被问及互联网是否是20世纪最伟大的发现，我的回答是肯定的。互联网拉近了世界的距离，帮助实现了无数不可思议的梦想，为现代人提<br>供了许多便利和辉煌的生活。</p><p>今天，许多人只是觉得他们离不开互联网。各国政府在网上公布他们的最新政策和决定，以获得全世界的认可。政治竞选活动通常在网上进<br>行，以获得更广泛的公众支持。公司和企业借助互联网在国内外寻找更多的商机和潜在的客户。如果大学和研究人员寻求国际合作或资金，他们就会求助于互联网。像我们这样的普通人也以各种方式依赖网络世界进行交流、娱乐、银行和购物。</p><p>互联网的力量无处不在，它的许多负面影响已经显现出来。例如，网瘾患者倾向于退缩到自己的幻想世界，而不是与真人交流。儿童暴露在网络色情和暴力中。网络诈骗司空见惯。有鉴于此，建议您明智地使用互联网。保持安全距离，永远不要迷失自我。</p>]]></content>
      
      
      <categories>
          
          <category> 发展 </category>
          
          <category> 阅读 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>VSCode+PicGo+Github 图床</title>
      <link href="/2022/05/06%E5%B7%A5%E5%85%B7/%E5%B7%A5%E5%85%B7_Github_VSCode+PicGo+Github%E7%BA%B5%E4%BA%AB%E4%B8%9D%E6%BB%91/3a6c965c/"/>
      <url>/2022/05/06%E5%B7%A5%E5%85%B7/%E5%B7%A5%E5%85%B7_Github_VSCode+PicGo+Github%E7%BA%B5%E4%BA%AB%E4%B8%9D%E6%BB%91/3a6c965c/</url>
      
        <content type="html"><![CDATA[<h1 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h1><h2 id="创建Github-仓库"><a href="#创建Github-仓库" class="headerlink" title="创建Github 仓库"></a>创建Github 仓库</h2><ul><li>登录 Github：新建仓库 ——&gt; 设置仓库名 ——&gt; 设置为公开 ——&gt; 创建初始化文件</li></ul><h2 id="生成令牌"><a href="#生成令牌" class="headerlink" title="生成令牌"></a>生成令牌</h2><ul><li>Settings   ——&gt; Developer settings  ——&gt; Personal access tokens ——&gt; Generate new token</li></ul><p><img src="https://raw.githubusercontent.com/HaloBoys/PicGoMyDevice/main/img/202205061224910.png" alt="image-20220506122409737"></p><ul><li>勾选配置 ——&gt; Generate ——&gt; <strong>复制生成的 Token</strong></li></ul><p><img src="https://raw.githubusercontent.com/HaloBoys/PicGoMyDevice/main/img/202205061234488.png" alt="image-20220506123409251"></p><h1 id="PicGo"><a href="#PicGo" class="headerlink" title="PicGo"></a>PicGo</h1><h2 id="PicGo-软件"><a href="#PicGo-软件" class="headerlink" title="PicGo 软件"></a>PicGo 软件</h2><h3 id="开源地址"><a href="#开源地址" class="headerlink" title="开源地址"></a>开源地址</h3><ul><li>Github地址：<a href="https://github.com/Molunerfinn/PicGo">https://github.com/Molunerfinn/PicGo</a></li></ul><h3 id="PicGo-软件配置"><a href="#PicGo-软件配置" class="headerlink" title="PicGo 软件配置"></a>PicGo 软件配置</h3><p><img src="https://raw.githubusercontent.com/HaloBoys/PicGoMyDevice/main/img/202205061241840.png" alt="image-20220506124107693"></p><blockquote><p>Github图床Cdn加速： <a href="https://www.jsdelivr.com/">jsdelivr</a> ( A free CDN for Open Source fast, reliable, and automated. )</p></blockquote><p>Picgo软件设置自定义域名处填写：<code>https://cdn.jsdelivr.net/gh/[github 用户名]/[github 仓库名]</code></p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220511203216.png" alt="20220511203216"></p><h2 id="PicGo-插件"><a href="#PicGo-插件" class="headerlink" title="PicGo 插件"></a>PicGo 插件</h2><blockquote><p>在 VSCode 里使用 picgo，实现快速上传图片到远端图床并直接将 URL 写进 Markdown 文件里，极大提升 Markdown 贴图效率与体验。支持 <a href="https://github.com/Molunerfinn/PicGo">PicGo</a> 原生自带的 8 种图床。</p></blockquote><h3 id="PicGo-插件-ShortCut"><a href="#PicGo-插件-ShortCut" class="headerlink" title="PicGo 插件 ShortCut"></a>PicGo 插件 ShortCut</h3><p>You can change all the keymaps below as you wish.</p><p>Uploading an image from clipboard<br>Windows/Unix: <strong>Ctrl + Alt + u</strong><br>OsX: <strong>Cmd + Opt + u</strong></p><p>Uploading images from explorer<br>Windows/Unix: <strong>Ctrl + Alt + e</strong><br>OsX: <strong>Cmd + Opt + e</strong></p><p>Uploading an image from input box<br>Windows/Unix: <strong>Ctrl + Alt + o</strong><br>OsX: <strong>Cmd + Opt + 0</strong></p><hr><h3 id="PicGo-插件-安装配置"><a href="#PicGo-插件-安装配置" class="headerlink" title="PicGo 插件 安装配置"></a>PicGo 插件 安装配置</h3><ul><li>VsCode 插件市场搜索 PicGo</li></ul><p><img src="https://raw.githubusercontent.com/HaloBoys/PicGoMyDevice/main/img/202205061211747.png" alt="image-20220506121112513"></p><ul><li>安装完成后点击设置，填写插件配置</li></ul><p><img src="https://raw.githubusercontent.com/HaloBoys/PicGoMyDevice/main/img/202205061243580.png" alt="image-20220506124333349"></p><h1 id="Markdown-All-in-One-插件"><a href="#Markdown-All-in-One-插件" class="headerlink" title="Markdown All in One 插件"></a>Markdown All in One 插件</h1><blockquote><p>Markdown All in One 是 VsCode 的插件，给编写Markdown 文档带来很多便捷方式。</p></blockquote><p><img src="https://raw.githubusercontent.com/HaloBoys/PicGoMyDevice/main/img/202205061302075.png" alt="image-20220506130234869"></p><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ol><li>提供了常用操作便利的快捷键</li><li>创建目录<ul><li>打开命令面板输入: ctoc (creat table of contents) 即可创建文章目录</li></ul></li><li>一边书写一边预览(Ctrl + Shift + V or Ctrl + K V)</li><li>可轻松转换为HTML文件和PDF文件</li><li>优化了List editing的编辑</li><li>可格式化table (Alt + Shift + F) 以及Task list (use Alt + C to check/uncheck a list item)</li><li>支持特殊数学符号渲染</li></ol><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + B    粗体</span><br><span class="line">Ctrl + I    斜体</span><br><span class="line">Alt + S    删除线</span><br><span class="line">Ctrl + Shift + ]    标题(uplevel)</span><br><span class="line">Ctrl + Shift + [    标题(downlevel)</span><br><span class="line">Ctrl + M    Toggle math environment</span><br><span class="line">Alt + C    Check/Uncheck task list item</span><br></pre></td></tr></table></figure><h1 id="jsDelivr-【补充】"><a href="#jsDelivr-【补充】" class="headerlink" title="jsDelivr 【补充】"></a>jsDelivr 【补充】</h1><p>jsDelivr 有两种引用方式：</p><h2 id="直接引用"><a href="#直接引用" class="headerlink" title="直接引用"></a>直接引用</h2><p>格式：</p><p><code>https://cdn.jsdelivr.net/gh/&lt;用户名&gt;/&lt;仓库名&gt;/&lt;文件及路径&gt;</code></p><h2 id="创建版本号后再引用"><a href="#创建版本号后再引用" class="headerlink" title="创建版本号后再引用"></a>创建版本号后再引用</h2><p>因为程序包超过50M jsdelivr就无法访问</p><p>格式：</p><p><code>https://cdn.jsdelivr.net/gh/&lt;用户名&gt;/&lt;仓库名&gt;@[版本号]/&lt;文件及路径&gt;</code></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> Github </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>HTML 源</title>
      <link href="/2022/05/04%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF_HTML_HTML%E6%BA%90%E7%A0%81/a4dfc4c2/"/>
      <url>/2022/05/04%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF_HTML_HTML%E6%BA%90%E7%A0%81/a4dfc4c2/</url>
      
        <content type="html"><![CDATA[<h1 id="八卦时钟"><a href="#八卦时钟" class="headerlink" title="八卦时钟"></a>八卦时钟</h1><p><img src="https://raw.githubusercontent.com/HaloBoys/PicGoMyDevice/main/img/20220509020646.png" alt="效果图"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>八卦时钟<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,user-scalable=0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">*&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">html</span>,<span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>:<span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>:<span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-id">#clock</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background</span>: black;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.label</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">top</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">left</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>:inline-block;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>:<span class="number">#4d4d4d</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>:<span class="number">0</span></span></span><br><span class="line"><span class="language-css">    font-size:<span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">transition</span>:all <span class="number">1s</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>,-<span class="number">50%</span>);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">transform-origin</span>: <span class="number">0%</span> <span class="number">0%</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.now</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>:<span class="number">880px</span>) &#123;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.label</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">left</span>: <span class="number">35%</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>:<span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">&#125; </span></span><br><span class="line"><span class="language-css"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>:<span class="number">680px</span>) &#123;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.label</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">left</span>: <span class="number">15%</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>:<span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">&#125; </span></span><br><span class="line"><span class="language-css"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>:<span class="number">480px</span>) &#123;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.label</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">left</span>: -<span class="number">5%</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>:<span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>:<span class="number">0</span> ;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>:<span class="number">400px</span>) &#123;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.label</span>&#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">left</span>: -<span class="number">15%</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>:<span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;clock&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 利用时间对象获得 当前 时间</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// var now = new Date();</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> yearText = [<span class="string">&#x27;&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> monthText = [<span class="string">&quot;一月&quot;</span>, <span class="string">&quot;二月&quot;</span>, <span class="string">&quot;三月&quot;</span>, <span class="string">&quot;四月&quot;</span>, <span class="string">&quot;五月&quot;</span>, <span class="string">&quot;六月&quot;</span>, <span class="string">&quot;七月&quot;</span>, <span class="string">&quot;八月&quot;</span>, <span class="string">&quot;九月&quot;</span>, <span class="string">&quot;十月&quot;</span>, <span class="string">&quot;十一月&quot;</span>, <span class="string">&quot;十二月&quot;</span>];</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> dayText = [<span class="string">&quot;一号&quot;</span>, <span class="string">&quot;二号&quot;</span>, <span class="string">&quot;三号&quot;</span>, <span class="string">&quot;四号&quot;</span>, <span class="string">&quot;五号&quot;</span>, <span class="string">&quot;六号&quot;</span>, <span class="string">&quot;七号&quot;</span>, <span class="string">&quot;八号&quot;</span>, <span class="string">&quot;九号&quot;</span>, <span class="string">&quot;十号&quot;</span>, <span class="string">&quot;十一号&quot;</span>, <span class="string">&quot;十二号&quot;</span>, <span class="string">&quot;十三号&quot;</span>, <span class="string">&quot;十四号&quot;</span>, <span class="string">&quot;十五号&quot;</span>, <span class="string">&quot;十六号&quot;</span>, <span class="string">&quot;十七号&quot;</span>, <span class="string">&quot;十八号&quot;</span>, <span class="string">&quot;十九号&quot;</span>, <span class="string">&quot;二十号&quot;</span>, <span class="string">&quot;二十一号&quot;</span>, <span class="string">&quot;二十二号&quot;</span>, <span class="string">&quot;二十三号&quot;</span>, <span class="string">&quot;二十四号&quot;</span>, <span class="string">&quot;二十五号&quot;</span>, <span class="string">&quot;二十六号&quot;</span>, <span class="string">&quot;二十七号&quot;</span>, <span class="string">&quot;二十八号&quot;</span>, <span class="string">&quot;二十九号&quot;</span>, <span class="string">&quot;三十号&quot;</span>, <span class="string">&quot;三十一号&quot;</span>];</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> weekText = [<span class="string">&quot;星期一&quot;</span>, <span class="string">&quot;星期二&quot;</span>, <span class="string">&quot;星期三&quot;</span>, <span class="string">&quot;星期四&quot;</span>, <span class="string">&quot;星期五&quot;</span>, <span class="string">&quot;星期六&quot;</span>, <span class="string">&quot;星期日&quot;</span>];</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> hourText = [<span class="string">&quot;零点&quot;</span>, <span class="string">&quot;一点&quot;</span>, <span class="string">&quot;两点&quot;</span>, <span class="string">&quot;三点&quot;</span>, <span class="string">&quot;四点&quot;</span>, <span class="string">&quot;五点&quot;</span>, <span class="string">&quot;六点&quot;</span>, <span class="string">&quot;七点&quot;</span>, <span class="string">&quot;八点&quot;</span>, <span class="string">&quot;九点&quot;</span>, <span class="string">&quot;十点&quot;</span>, <span class="string">&quot;十一点&quot;</span>, <span class="string">&quot;十二点&quot;</span>, <span class="string">&quot;十三点&quot;</span>, <span class="string">&quot;十四点&quot;</span>, <span class="string">&quot;十五点&quot;</span>, <span class="string">&quot;十六点&quot;</span>, <span class="string">&quot;十七点&quot;</span>, <span class="string">&quot;十八点&quot;</span>, <span class="string">&quot;十九点&quot;</span>, <span class="string">&quot;二十点&quot;</span>, <span class="string">&quot;二十一点&quot;</span>, <span class="string">&quot;二十二点&quot;</span>, <span class="string">&quot;二十三点&quot;</span>];</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> minuteText = [<span class="string">&quot;零分&quot;</span>, <span class="string">&quot;一分&quot;</span>, <span class="string">&quot;二分&quot;</span>, <span class="string">&quot;三分&quot;</span>, <span class="string">&quot;四分&quot;</span>, <span class="string">&quot;五分&quot;</span>, <span class="string">&quot;六分&quot;</span>, <span class="string">&quot;七分&quot;</span>, <span class="string">&quot;八分&quot;</span>, <span class="string">&quot;九分&quot;</span>, <span class="string">&quot;十分&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&quot;十一分&quot;</span>, <span class="string">&quot;十二分&quot;</span>, <span class="string">&quot;十三分&quot;</span>, <span class="string">&quot;十四分&quot;</span>, <span class="string">&quot;十五分&quot;</span>, <span class="string">&quot;十六分&quot;</span>, <span class="string">&quot;十七分&quot;</span>, <span class="string">&quot;十八分&quot;</span>, <span class="string">&quot;十九分&quot;</span>, <span class="string">&quot;二十分&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&quot;二十一分&quot;</span>, <span class="string">&quot;二十二分&quot;</span>, <span class="string">&quot;二十三分&quot;</span>, <span class="string">&quot;二十四分&quot;</span>, <span class="string">&quot;二十五分&quot;</span>, <span class="string">&quot;二十六分&quot;</span>, <span class="string">&quot;二十七分&quot;</span>, <span class="string">&quot;二十八分&quot;</span>, <span class="string">&quot;二十九分&quot;</span>, <span class="string">&quot;三十分&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&quot;三十一分&quot;</span>, <span class="string">&quot;三十二分&quot;</span>, <span class="string">&quot;三十三分&quot;</span>, <span class="string">&quot;三十四分&quot;</span>, <span class="string">&quot;三十五分&quot;</span>, <span class="string">&quot;三十六分&quot;</span>, <span class="string">&quot;三十七分&quot;</span>, <span class="string">&quot;三十八分&quot;</span>, <span class="string">&quot;三十九分&quot;</span>, <span class="string">&quot;四十分&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&quot;四十一分&quot;</span>, <span class="string">&quot;四十二分&quot;</span>, <span class="string">&quot;四十三分&quot;</span>, <span class="string">&quot;四十四分&quot;</span>, <span class="string">&quot;四十五分&quot;</span>, <span class="string">&quot;四十六分&quot;</span>, <span class="string">&quot;四十七分&quot;</span>, <span class="string">&quot;四十八分&quot;</span>, <span class="string">&quot;四十九分&quot;</span>, <span class="string">&quot;五十分&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&quot;五十一分&quot;</span>, <span class="string">&quot;五十二分&quot;</span>, <span class="string">&quot;五十三分&quot;</span>, <span class="string">&quot;五十四分&quot;</span>, <span class="string">&quot;五十五分&quot;</span>, <span class="string">&quot;五十六分&quot;</span>, <span class="string">&quot;五十七分&quot;</span>, <span class="string">&quot;五十八分&quot;</span>, <span class="string">&quot;五十九分&quot;</span>];</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> secondsText = [<span class="string">&quot;一秒&quot;</span>, <span class="string">&quot;二秒&quot;</span>, <span class="string">&quot;三秒&quot;</span>, <span class="string">&quot;四秒&quot;</span>, <span class="string">&quot;五秒&quot;</span>, <span class="string">&quot;六秒&quot;</span>, <span class="string">&quot;七秒&quot;</span>, <span class="string">&quot;八秒&quot;</span>, <span class="string">&quot;九秒&quot;</span>, <span class="string">&quot;十秒&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&quot;十一秒&quot;</span>, <span class="string">&quot;十二秒&quot;</span>, <span class="string">&quot;十三秒&quot;</span>, <span class="string">&quot;十四秒&quot;</span>, <span class="string">&quot;十五秒&quot;</span>, <span class="string">&quot;十六秒&quot;</span>, <span class="string">&quot;十七秒&quot;</span>, <span class="string">&quot;十八秒&quot;</span>, <span class="string">&quot;十九秒&quot;</span>, <span class="string">&quot;二十秒&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&quot;二十一秒&quot;</span>, <span class="string">&quot;二十二秒&quot;</span>, <span class="string">&quot;二十三秒&quot;</span>, <span class="string">&quot;二十四秒&quot;</span>, <span class="string">&quot;二十五秒&quot;</span>, <span class="string">&quot;二十六秒&quot;</span>, <span class="string">&quot;二十七秒&quot;</span>, <span class="string">&quot;二十八秒&quot;</span>, <span class="string">&quot;二十九秒&quot;</span>, <span class="string">&quot;三十秒&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&quot;三十一秒&quot;</span>, <span class="string">&quot;三十二秒&quot;</span>, <span class="string">&quot;三十三秒&quot;</span>, <span class="string">&quot;三十四秒&quot;</span>, <span class="string">&quot;三十五秒&quot;</span>, <span class="string">&quot;三十六秒&quot;</span>, <span class="string">&quot;三十七秒&quot;</span>, <span class="string">&quot;三十八秒&quot;</span>, <span class="string">&quot;三十九秒&quot;</span>, <span class="string">&quot;四十秒&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&quot;四十一秒&quot;</span>, <span class="string">&quot;四十二秒&quot;</span>, <span class="string">&quot;四十三秒&quot;</span>, <span class="string">&quot;四十四秒&quot;</span>, <span class="string">&quot;四十五秒&quot;</span>, <span class="string">&quot;四十六秒&quot;</span>, <span class="string">&quot;四十七秒&quot;</span>, <span class="string">&quot;四十八秒&quot;</span>, <span class="string">&quot;四十九秒&quot;</span>, <span class="string">&quot;五十秒&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&quot;五十一秒&quot;</span>, <span class="string">&quot;五十二秒&quot;</span>, <span class="string">&quot;五十三秒&quot;</span>, <span class="string">&quot;五十四秒&quot;</span>, <span class="string">&quot;五十五秒&quot;</span>, <span class="string">&quot;五十六秒&quot;</span>, <span class="string">&quot;五十七秒&quot;</span>, <span class="string">&quot;五十八秒&quot;</span>, <span class="string">&quot;五十九秒&quot;</span>, <span class="string">&quot;六十秒&quot;</span>];</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> clock;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> yearList = [];</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> monthList = [];</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> dayList = [];</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> weekList = [];</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> hourList = [];</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> minuteList = [];</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> secondsList = [];</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/**</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"> * 分析，完成效果:</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"> * 1. 实现时钟排列</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"> * </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"> * 步骤</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"> * 1. 初始化，渲染dom</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"> * 2. 实现随着时间高亮</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"> * 3. 添加动画，使之移动</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"> */</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> textList = [</span></span><br><span class="line"><span class="language-javascript">    [yearText, yearList],</span></span><br><span class="line"><span class="language-javascript">    [monthText, monthList],</span></span><br><span class="line"><span class="language-javascript">    [dayText, dayList],</span></span><br><span class="line"><span class="language-javascript">    [weekText, weekList],</span></span><br><span class="line"><span class="language-javascript">    [hourText, hourList],</span></span><br><span class="line"><span class="language-javascript">    [minuteText, minuteList],</span></span><br><span class="line"><span class="language-javascript">    [secondsText, secondsList],</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">]</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">init</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">initTransition</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> timeArr = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">rotateTransition</span>(timeArr)</span></span><br><span class="line"><span class="language-javascript">        <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">runtime</span>()</span></span><br><span class="line"><span class="language-javascript">        &#125;, <span class="number">1000</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">1000</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// setInterval(function () &#123;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//     runtime()</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// &#125;, 100)</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 初始化函数</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// function init() &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//     clock = document.getElementById(&#x27;clock&#x27;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//     // 生成标签 存放文字展示</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//     for (var i = 0; i &lt; textList.length; i++) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//         for (var j = 0; j &lt; textList[i][0].length; j++) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//             var temp = createLabel(textList[i][0][j]);</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//             clock.appendChild(temp);</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//             // 将生成的标签存放在数组list中</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//             textList[i][1].push(temp);</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//         &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">init</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    clock = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#clock&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> textList) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span> (<span class="keyword">var</span> j <span class="keyword">in</span> textList[i][<span class="number">0</span>]) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> temp = <span class="title function_">createLabel</span>(textList[i][<span class="number">0</span>][j]);</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 将生成的标签存放在数组list中</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            clock.<span class="title function_">appendChild</span>(temp);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            textList[i][<span class="number">1</span>].<span class="title function_">push</span>(temp);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(textList);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 创建标签并将文字填充标签 接收参数为文字内容</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">createLabel</span>(<span class="params">text</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    div.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;label&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    div.<span class="property">innerText</span> = text;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> div;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 获得时间</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">runtime</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 获得时间 日期 小时 分钟 秒钟</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> month = now.<span class="title function_">getMonth</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> day = now.<span class="title function_">getDate</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> week = now.<span class="title function_">getDay</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> hour = now.<span class="title function_">getHours</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> minute = now.<span class="title function_">getMinutes</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> seconds = now.<span class="title function_">getSeconds</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> timeArr = [<span class="number">0</span>, month, day-<span class="number">1</span>, week, hour, minute, seconds]</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(timeArr)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">clearColor</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">rotateTransition</span>(timeArr);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">addColor</span>(timeArr);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">addColor</span>(<span class="params">timeArr</span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// var label = document.querySelectorAll(&#x27;.label&#x27;)</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// for (var i in timeArr) &#123;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//     var len = i &gt; 1 ? textList[i - 1][0].length : 0;</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//     var num = timeArr[i];</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//     var index = len + num;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//     label[index].classList.add(&#x27;now&#x27;)</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//     // console.log(label[index])</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; timeArr.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> index = timeArr[i];</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// for (var j = 0; j &lt; timeArr.length; j++) &#123;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//     var temp = textList[i][1][j];</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//     // var deg = 360 / textList[i][0].length * j;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//     var deg = 360 / textList[i][0].length * (j - timeArr[i]);</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//     temp.style.transform = temp.style.transform.replace(/-?\d+deg/, deg + &#x27;deg&#x27;);</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//     // console.log(temp)</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        textList[i][<span class="number">1</span>][index].<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;now&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 清除现在时间颜色</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">clearColor</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> now = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.now&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    now.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">item</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        item.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;now&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 初始展开</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">initTransition</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> textList) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span> (<span class="keyword">var</span> item <span class="keyword">of</span> textList[i][<span class="number">1</span>]) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            item.<span class="property">style</span>.<span class="property">transform</span> = <span class="string">&#x27;translate(&#x27;</span> + i * <span class="number">60</span> + <span class="string">&#x27;px,-50%)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">            item.<span class="property">style</span>.<span class="property">transformOrigin</span> = -(i * <span class="number">60</span>) + <span class="string">&#x27;px 50%&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 扇形展开</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">rotateTransition</span>(<span class="params">timeArr</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> textList) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span> (<span class="keyword">var</span> j <span class="keyword">in</span> textList[i][<span class="number">1</span>]) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> temp = textList[i][<span class="number">1</span>][j];</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> deg = <span class="number">360</span> / textList[i][<span class="number">0</span>].<span class="property">length</span> * (j - timeArr[i]);</span></span><br><span class="line"><span class="language-javascript">            temp.<span class="property">style</span>.<span class="property">transform</span> = <span class="string">&#x27;translate(&#x27;</span> + i * <span class="number">60</span> + <span class="string">&#x27;px,-50%)&#x27;</span> + <span class="string">&#x27; rotate(&#x27;</span> + deg + <span class="string">&#x27;deg)&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="日夜切换"><a href="#日夜切换" class="headerlink" title="日夜切换"></a>日夜切换</h1><p><img src="https://raw.githubusercontent.com/HaloBoys/PicGoMyDevice/main/img/20220509020509.png" alt="效果图"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>日夜切换<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">body</span>,</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">html</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">svg &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">position</span>: fixed;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.scrollElement</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">6000px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">z-index</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.btn</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">position</span>: fixed;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">bottom</span>: <span class="number">5%</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">right</span>: <span class="number">0px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">50%</span>);</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>: <span class="number">0.9rem</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">0.5rem</span> <span class="number">0.7em</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: transparent;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-family</span>: Verdana, Geneva, Tahoma, sans-serif;</span></span><br><span class="line"><span class="language-css">  -webkit-<span class="attribute">font-smoothing</span>: antialiased;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">transition</span>: all <span class="number">0.3s</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">z-index</span>: <span class="number">11</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.btn_works</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">left</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">right</span>: unset;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background</span>: <span class="number">#ffffff</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: <span class="number">#1b1734</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/gsap/3.3.4/gsap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/gsap/3.3.4/ScrollTrigger.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">&quot;https://www.w3.org/2000/svg&quot;</span> <span class="attr">xmlns:xlink</span>=<span class="string">https:///www.w3.org/1999/xlink</span>&quot; <span class="attr">viewBox</span>=<span class="string">&quot;0 0 750 500&quot;</span> <span class="attr">preserveAspectRatio</span>=<span class="string">&quot;xMidYMax slice&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">defs</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Scene 1 Gradient --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linearGradient</span> <span class="attr">id</span>=<span class="string">&quot;grad1&quot;</span> <span class="attr">x1</span>=<span class="string">&quot;-154.32&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;263.27&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;-154.32&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;374.3&quot;</span> <span class="attr">gradientTransform</span>=<span class="string">&quot;matrix(-1, 0, 0, 1.36, 231.36, -100.14)&quot;</span> <span class="attr">gradientUnits</span>=<span class="string">&quot;userSpaceOnUse&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.07&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#9c536b&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.98&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#d98981&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">linearGradient</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">radialGradient</span> <span class="attr">id</span>=<span class="string">&quot;bg_grad&quot;</span> <span class="attr">cx</span>=<span class="string">&quot;375&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;-35&quot;</span> <span class="attr">r</span>=<span class="string">&quot;318.69&quot;</span> <span class="attr">gradientUnits</span>=<span class="string">&quot;userSpaceOnUse&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.1&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#F5C54E&quot;</span> <span class="attr">id</span>=<span class="string">&quot;sun&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.1&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#FFDBA6&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.0&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#F7BB93&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.0&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#F2995E&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.0&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#f07560&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.8&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#FFAB93&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">radialGradient</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linearGradient</span> <span class="attr">id</span>=<span class="string">&quot;grad2&quot;</span> <span class="attr">x1</span>=<span class="string">&quot;242.5&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;356.25&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;750&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;356.25&quot;</span> <span class="attr">gradientUnits</span>=<span class="string">&quot;userSpaceOnUse&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#fbbd93&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.98&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#c46976&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">linearGradient</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linearGradient</span> <span class="attr">id</span>=<span class="string">&quot;grad3&quot;</span> <span class="attr">x1</span>=<span class="string">&quot;467.26&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;500&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;467.26&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;225.47&quot;</span> <span class="attr">gradientUnits</span>=<span class="string">&quot;userSpaceOnUse&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.01&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#ffb8bd&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;1&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#914d64&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">linearGradient</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linearGradient</span> <span class="attr">id</span>=<span class="string">&quot;grad4&quot;</span> <span class="attr">x1</span>=<span class="string">&quot;216.56&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;227.64&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;191.14&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;600.82&quot;</span> <span class="attr">gradientUnits</span>=<span class="string">&quot;userSpaceOnUse&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#70375a&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.96&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#8a6e95&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">linearGradient</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linearGradient</span> <span class="attr">id</span>=<span class="string">&quot;grad5&quot;</span> <span class="attr">x1</span>=<span class="string">&quot;1&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;413.12&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;340.58&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;413.12&quot;</span> <span class="attr">gradientUnits</span>=<span class="string">&quot;userSpaceOnUse&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#433d6c&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;1&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#392e54&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">linearGradient</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linearGradient</span> <span class="attr">id</span>=<span class="string">&quot;grad6&quot;</span> <span class="attr">x1</span>=<span class="string">&quot;454.13&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;295.96&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;454.13&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;498.93&quot;</span> <span class="attr">gradientUnits</span>=<span class="string">&quot;userSpaceOnUse&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#2b2850&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.99&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#563a6a&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">linearGradient</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linearGradient</span> <span class="attr">id</span>=<span class="string">&quot;grad7&quot;</span> <span class="attr">x1</span>=<span class="string">&quot;434.38&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;391.96&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;474.27&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;516.33&quot;</span> <span class="attr">gradientUnits</span>=<span class="string">&quot;userSpaceOnUse&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.3&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#1c1b38&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.38&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#201e3e&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.9&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#383263&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">linearGradient</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linearGradient</span> <span class="attr">id</span>=<span class="string">&quot;grad8&quot;</span> <span class="attr">x1</span>=<span class="string">&quot;259.18&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;335.54&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;213.65&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;500.39&quot;</span> <span class="attr">gradientUnits</span>=<span class="string">&quot;userSpaceOnUse&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#0e0a1a&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.3&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#100d1f&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.64&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#17142c&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.95&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#201f3f&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">linearGradient</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linearGradient</span> <span class="attr">id</span>=<span class="string">&quot;grad9&quot;</span> <span class="attr">x1</span>=<span class="string">&quot;508.16&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;321.39&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;726.97&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;623.69&quot;</span> <span class="attr">gradientUnits</span>=<span class="string">&quot;userSpaceOnUse&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.01&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#120e22&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;1&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#221d42&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">linearGradient</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Scene2 Gradient --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linearGradient</span> <span class="attr">id</span>=<span class="string">&quot;lg4&quot;</span> <span class="attr">x1</span>=<span class="string">&quot;641.98&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;274.9&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;638.02&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;334.36&quot;</span> <span class="attr">gradientUnits</span>=<span class="string">&quot;userSpaceOnUse&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#2c2c50&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;1&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#434375&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">linearGradient</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linearGradient</span> <span class="attr">id</span>=<span class="string">&quot;lg5&quot;</span> <span class="attr">x1</span>=<span class="string">&quot;172.37&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;286.02&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;171.33&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;343.08&quot;</span> <span class="attr">xlink:href</span>=<span class="string">&quot;#lg4&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linearGradient</span> <span class="attr">id</span>=<span class="string">&quot;lg6&quot;</span> <span class="attr">x1</span>=<span class="string">&quot;505.71&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;261.55&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;504.61&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;322.08&quot;</span> <span class="attr">xlink:href</span>=<span class="string">&quot;#lg4&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linearGradient</span> <span class="attr">id</span>=<span class="string">&quot;lg7&quot;</span> <span class="attr">x1</span>=<span class="string">&quot;301.32&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;260.99&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;295.66&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;345.9&quot;</span> <span class="attr">xlink:href</span>=<span class="string">&quot;#lg4&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linearGradient</span> <span class="attr">id</span>=<span class="string">&quot;lg8&quot;</span> <span class="attr">x1</span>=<span class="string">&quot;375.59&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;381.01&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;373.3&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;507.08&quot;</span> <span class="attr">xlink:href</span>=<span class="string">&quot;#lg4&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Scene3 Gradient --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">radialGradient</span> <span class="attr">id</span>=<span class="string">&quot;bg2-grad&quot;</span> <span class="attr">cx</span>=<span class="string">&quot;365.22&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;500&quot;</span> <span class="attr">r</span>=<span class="string">&quot;631.74&quot;</span> <span class="attr">gradientTransform</span>=<span class="string">&quot;translate(750 552.6) rotate(180) scale(1 1.11)&quot;</span> <span class="attr">gradientUnits</span>=<span class="string">&quot;userSpaceOnUse&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;hsla(349, 94%, 75%, 1)&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.12&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;hsla(342, 49%, 62%, 1)&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.18&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;hsla(328, 37%, 56%, 1)&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.33&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;hsla(281, 33%, 48%, 1)&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.41&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;hsla(268, 38%, 48%, 1)&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.45&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;hsla(266, 38%, 43%, 1)&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.55&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;hsla(261, 37%, 32%, 1)&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.64&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;hsla(253, 36%, 24%, 1)&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.72&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;hsla(244, 33%, 19%, 1)&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.78&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;hsla(240, 33%, 17%, 1)&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">radialGradient</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">radialGradient</span> <span class="attr">id</span>=<span class="string">&quot;fstar-grad&quot;</span> <span class="attr">cx</span>=<span class="string">&quot;1362.39&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;-53.7&quot;</span> <span class="attr">r</span>=<span class="string">&quot;39.39&quot;</span> <span class="attr">gradientTransform</span>=<span class="string">&quot;matrix(0.89, -0.45, -0.45, -0.89, -473.7, 640.57)&quot;</span> <span class="attr">gradientUnits</span>=<span class="string">&quot;userSpaceOnUse&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#fff&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.06&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#fff&quot;</span> <span class="attr">stop-opacity</span>=<span class="string">&quot;0.8&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.12&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#fff&quot;</span> <span class="attr">stop-opacity</span>=<span class="string">&quot;0.62&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.19&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#fff&quot;</span> <span class="attr">stop-opacity</span>=<span class="string">&quot;0.45&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.26&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#fff&quot;</span> <span class="attr">stop-opacity</span>=<span class="string">&quot;0.31&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.33&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#fff&quot;</span> <span class="attr">stop-opacity</span>=<span class="string">&quot;0.2&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.41&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#fff&quot;</span> <span class="attr">stop-opacity</span>=<span class="string">&quot;0.11&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.49&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#fff&quot;</span> <span class="attr">stop-opacity</span>=<span class="string">&quot;0.05&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.59&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#fff&quot;</span> <span class="attr">stop-opacity</span>=<span class="string">&quot;0.01&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0.72&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#fff&quot;</span> <span class="attr">stop-opacity</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">radialGradient</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linearGradient</span> <span class="attr">id</span>=<span class="string">&quot;linear-gradient&quot;</span> <span class="attr">x1</span>=<span class="string">&quot;472&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;461.56&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;872.58&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;461.56&quot;</span> <span class="attr">gradientUnits</span>=<span class="string">&quot;userSpaceOnUse&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#fd75a8&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;1&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#5a2d81&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">linearGradient</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linearGradient</span> <span class="attr">id</span>=<span class="string">&quot;linear-gradient-2&quot;</span> <span class="attr">x1</span>=<span class="string">&quot;214.61&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;508.49&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;166.09&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;361.12&quot;</span> <span class="attr">xlink:href</span>=<span class="string">&quot;#linear-gradient&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linearGradient</span> <span class="attr">id</span>=<span class="string">&quot;linear-gradient-3&quot;</span> <span class="attr">x1</span>=<span class="string">&quot;57.65&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;508.01&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;448.08&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;508.01&quot;</span> <span class="attr">xlink:href</span>=<span class="string">&quot;#linear-gradient&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linearGradient</span> <span class="attr">id</span>=<span class="string">&quot;linear-gradient-4&quot;</span> <span class="attr">x1</span>=<span class="string">&quot;193.48&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;508.3&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;761.05&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;508.3&quot;</span> <span class="attr">xlink:href</span>=<span class="string">&quot;#linear-gradient&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">defs</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">rect</span> <span class="attr">id</span>=<span class="string">&quot;bg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;750&quot;</span> <span class="attr">height</span>=<span class="string">&quot;500&quot;</span> <span class="attr">opacity</span>=<span class="string">&quot;0.8&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;url(#bg_grad)&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">g</span> <span class="attr">id</span>=<span class="string">&quot;clouds&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#fefefe&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">&quot;cloud4&quot;</span> <span class="attr">transform</span>=<span class="string">&#x27;translate(600 0)&#x27;</span> <span class="attr">d</span>=<span class="string">&quot;M402.34,341.68c9.9-10.24,23.76-7.43,36.05-5.48C448,332,458.88,329,468.9,334c-.95-7.91,8.65-14.92,15.9-11.61-3.34-11.77,13-13.9,20.53-8.34A13.53,13.53,0,0,1,522,310.16c2.64-18.11,27.85-24.13,38.38-9.17,3.54-5.51,12.12-6.88,17.2-2.74,6.59-43.22,70.78-27.93,65.83,12.62,14.7-4.43,32,6.72,34.08,21.93,5.76-2.23,29.28,1,21.76,9.26&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">&quot;cloud3&quot;</span> <span class="attr">transform</span>=<span class="string">&#x27;translate(600 0)&#x27;</span> <span class="attr">d</span>=<span class="string">&quot;M382.94,363.16c-7-10.5-18.72-9.06-28.19-4.53-12.19-6.71-26.73-11.74-39.62-3.13,1-15.45-18-25.51-28-12.41-14.59-29.67-56.68-34.41-72-3.09-1.41,4-4.73,6.07-8.1,2.88-23.13-25.66-57.12-30.25-67.73,8.21-13.05-1.88-33.42-9.15-37.47,10.07a38.08,38.08,0,0,0-36.36,2.11&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">&quot;cloud2&quot;</span> <span class="attr">transform</span>=<span class="string">&#x27;translate(-600 0)&#x27;</span> <span class="attr">d</span>=<span class="string">&quot;M506.86,233.56c9.62-3.21,23.27-4,33.88-2.17,0-5.7,10.4-6.68,14-3.58,10.32-12.45,29.93-5.12,40.08,0,10.06-6.52,27.67-9.72,33.93,2.42,5.53-.13,15.88-3.23,18.8,2.94a31.53,31.53,0,0,1,18.21.64&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">&quot;cloud1&quot;</span> <span class="attr">transform</span>=<span class="string">&#x27;translate(-600 0)&#x27;</span> <span class="attr">d</span>=<span class="string">&quot;M402.18,271.3c-7.57-7.46-18.46-7.52-28.05-5.3-6.75-8.79-20.54-13.18-27.24-1.45-10.4-11.06-30.66-24.2-37.74-2.24a13.1,13.1,0,0,0-17.76,1.47c-11.23-25.69-58.46-41.29-64.24-4.06-9-8.26-20.15-2.62-27.47,4.4-11-2.87-22.18-7.58-31.72,2.7-8.44-.75-18.1-2.8-24.71,4.57&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- SCENE 2 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">g</span> <span class="attr">id</span>=<span class="string">&quot;scene2&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">g</span> <span class="attr">id</span>=<span class="string">&quot;bats&quot;</span> <span class="attr">style</span>=<span class="string">&quot;opacity: 0;&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M486.65,187a9.22,9.22,0,0,1-4.29,6.38l-.06-.06c-.05-1.13-.06-2.62-.94-3.52a3.34,3.34,0,0,1,.15,1.63,1.9,1.9,0,0,0-1.66-.09,3.31,3.31,0,0,1,.33-1.61c-1,.81-1.05,2.22-1.37,3.38-3.9-5.13-5.67-10.29-13.64-9.74,5.67,3.29,5.9,10.62,12.85,11.87.09,6.46,4.06,6.69,4.88.28l-.2.1.18-.35c0,.08,0,.16,0,.25,7-.48,8.08-7.73,14.09-10.38A22.64,22.64,0,0,0,486.65,187Z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#112129&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M390.93,226.87c2.22,2.08,2,4.89.48,7.24,1.83-1.75,8.12,2.24,7,4.89,2.51-4.08,4.36.31,5.85,2.31,1.26-2.7,3.68-6,5.7-2.13-.93-2.73,5.66-6.2,7.34-4.32-3.67-5.08,3.49-10.18,7.21-7.31-.39-.7-4.61-4.33-12.39-3.17,3.63,5.77-3.22,9.07-5.56,9.51a2.88,2.88,0,0,0-.64-2.28c-.36.36-.32,1.06-.52,1.48a7.6,7.6,0,0,0-2.13-.14c0-.42-.15-1.09-.5-1.32a4,4,0,0,0-.68,2.32c-2.39-.72-8.67-4.51-4.66-9.87-7.67-1.78-12.17,1.51-12.61,2.17C385.25,225.74,389.24,225.21,390.93,226.87Z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#112129&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M430.89,152.88c-4.51,1.05,1.45-4.11-8.29-4.45-.47-4.18-5.81-4.39-8.89-5.1,2.82-2.94,8.14-3.47,12.12-3.3,2.3.49,6.16.37,7.5,2.31-1,3,4.29,12,5.26,5.94,2.05,3.21,5,.12,4.19,2-.45.53-1,2.54.08,2.34,4.46-.88,5.75-6.35,8.69-8.63,4.73-.13,12,1,13.29,6.25-5.84-2.77-7.67-2.4-10.21,2.8-2.93-.77-5.74.92-7.26,3.33-3.3-2.2-7.59.35-11,2.2.05-1.76-.79-4.15-2.71-4.6C433.18,152.94,431.88,152.9,430.89,152.88Z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#112129&quot;</span> <span class="attr">fill-rule</span>=<span class="string">&quot;evenodd&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M538.33,214.5s-2.52,6.57,2.07,7.47c-1.53.45-4.23,3.88-2.25,6.85-2.2-1.83-10.48,6.4-8.65,8.74-1.4-2.25-4.54-1.85-4.77,1-1.07-3.42-2.36-1.61-2.34.63-1.16-3.75-4.22-1.39-4.6.9-.4-5.23-9.49-5.18-11.89-3.51,1.45-2.79-2-6.28-4.59-5.95,0,0,1.62-5.85-3.43-7.48,6.16-3.41,16.13,10,22.07,8.92a8.47,8.47,0,0,1-.9-4.23l1.53,1.71,1.27-.09,1-2.7C525.28,238.88,530.76,216.88,538.33,214.5Z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#112129&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M458.17,279.73c3.54.59,5.51,4.7,2.22,7.27,2.87-.72,4,4.71,2.47,5.94,4.88-1.34,9.07,5.6,8.25,9.17,3-1.07,4.18,4.15,3.52,5.52.89-1.82,3.82-5.49,5.73-1.71,2.43-5,7.84-6,12.35-3.64-1.94-4.42,4-5.2,6.22-3.91-1.29-3.74,1.35-5.73,4.78-4.66-7.88-8.5-15.53-.91-22.4,2.76a30.2,30.2,0,0,0,1-3.23l-4.33,3-1.56-5-.89,2.8C471.29,286,471.52,277,458.17,279.73Z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#112129&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">g</span> <span class="attr">id</span>=<span class="string">&quot;hills2&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">&quot;h2-6&quot;</span> <span class="attr">d</span>=<span class="string">&quot;M524.28,418.82c6.36,0,80.19-14.81,103.12-36.53S655.28,345.8,679,359.64s33.69,18.54,46.63,18.82a158.62,158.62,0,0,1,23.88,2.4V447L632,458.92Z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;url(#lg4)&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">&quot;h2-5&quot;</span> <span class="attr">d</span>=<span class="string">&quot;M294.06,498.2l49.09-66.93s-64-6.48-93.59-31.29-63.47-49.78-87.15-41.46-81.7,4.44-98.73,15S.1,387.08.1,387.08l.37,60.18L209.75,498.2Z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;url(#lg5)&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">&quot;h2-4&quot;</span> <span class="attr">d</span>=<span class="string">&quot;M264.94,449.2s61-16.39,94.07-37.28,61.37-37.2,73.53-36.12,69.9-40,80.18-42.62,13.55-.37,29,1.85,22-5.27,34.52,6.39,43.29,34.86,75.51,48.52c25.88,11,91.48,28.88,91.48,28.88l-31.58,67.73-326.93,9.27Z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;url(#lg6)&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">&quot;h2-3&quot;</span> <span class="attr">d</span>=<span class="string">&quot;M.47,469.58V420s113.73-2.74,171.72-26.68,101.69-72.29,134.53-52,31.37-18.48,61.9,13.28S446.68,393.48,478,406.86s113.08,26.06,113.08,26.06l-59.28,53.4L272.55,485Z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;url(#lg7)&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">&quot;h2-2&quot;</span> <span class="attr">d</span>=<span class="string">&quot;M749.55,500V398.27l-38.48-6.67s-29.86,12.13-63,11.53-39.61-7.26-70.33-13.41-72.58,21.4-105.61,21.4-75.5-17.78-110.64-17.78c-24.85,0-90.08,20.12-110.82,18.48s-51.11-20.42-82-6.26S.47,409.26.47,409.26V500Z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;url(#lg8)&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">&quot;h2-1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;opacity: 0;&quot;</span> <span class="attr">d</span>=<span class="string">&quot;M746.51,371.43c-.18-1,1.74,1.28,2.2.27s2,1.37,2.14.37c.81-3.64.32-8.56-3.75-10.12-2.88-2.18,1.15-.54,2.06-.18,1.1,1.1-.4-4.74,1.86-1.95,2.17-10.09-3.87-8.35-11-11.08-6.32-4.83-1.32-3.94,1.19-.09,1.46,1.73,1.64-.55.82-1.91s1.92-.46,3.1,1.09c2,1.29,2.67-3.2,5.88,1.26-.68-1.81,1.09-6-.76-7,1.21-2.4.59-2.67-3.16-1.1-7.28.94-11.31-9.61-1.41-3-3.86-9,7.46,5.89,5.33-7.74-2.64,1.73-1.42.9-.67-1.37-1.62-.72-15,7.23-12.15-1.46.64-1.28,1,0,2,.73,1.69-5.55,4.78,5.68,3.45-2.56,12-4-1.25-3,7.36-5.61-1.11-2.6-3.43-2.45-.21-5.78-2.64.43-9.82,5.81-12.61,7.75.24-1.15.51-4,3-4.1.6-7.23.24-7-3.46-.64-.74-4.79,3.91-8.88,8.68-7.83-5.28-1.79-2.56-2.09-1-7-6.52,6.54-3.66-4.45-6.7,7,.48-3.06-1.28-4,1.22-7.47,4.44-10.76-3.3,8.72-3.29-7.83-1,.43-.73,6.12-.79,7.07-3-.8-1.7-.34-.69,1.7-1.43,1.17-.74,1.27.8,2.49.74,4.27-2,1.08-3.36-.88-4.35-6.05-.4,2.13-2.72.12-1.24-1.36-4-3.95-3.43-2.14,4.91,4.75.6,3.52,1.19,5.61,1.41.16,4.51-1.36,3.39-.25-5.76,6.22,2.05.63,2.89,1-1,.93-3.28,5.39-.37,3.54.29-1.15,1.37-2.35,1.57-1.48-.46,2,1.69,9.06-1,9.72-2.54,0-4.86-7.06-5.24-6.39-.38,1.49-.5,1.86-1.08.5-3.67-7.21-1.74-.94-3.68-1.65-4-4.19-2-.84-1.32,1.24-4.84,2.49,3.28,2.51,2.44,4.45-.7,1.28-2.07,1.25-.58,1.92,4.58-.37,2,1.39,4.34,2.28,2.88-1,5.26,2.39,2.44,1.69-5-.1-20.52-11-10,.87,7,.12,1,2.11,3.88,3.21,15-1,2.77,4.82-3.33.35,3-1.17-3.57-1.56-7.58-3.23s-.38-1.28,1-3.45-2.05-.77-8.71-.51-5.38-.89-9-2.3,0,0,.51-2.56-1.66.13-3.84.13c-4.52-3.06-1.16-3.32,3.2-3.57,3.67-1.95,5.09,10.6,5.38-.39.77-2.3,1.16,1.92,1.54,4.35,3.76,3-1.2-6.05,12.94-2.81,4.1-1.28-.26-2.31-4-2.69s-1.16-1.28-3.85-3.83c-3.6-1.38-12.91-3.64-4-1.92,4.58-.21-1.85-6.68,7.95-7.92,5.38-3.37-13.42-1.72-14.35-1.15-2.29.56-6.18-3.69-9.28-5.31,12.7,1.23,2.82-11.86,12.22-5.3,5.73-.12-5.55-6.49,8.08-9.45,2.43-2.94-5.26-.26-8.33.26s-.26-1.28-.77-3.58-6.66,3.32-11.66,3.58c-7.8.37-12.63-12.92-4.1-6.27,2.44.64,1.28-.89,3.59-2,3-1.51,3.21,5.49,5.51-.64,2.22-3.05,12.37,2.1,12.68-5.62.56-3.26-3.79,2.9-6.66-2.43-2.36-.88-6.61,4.89-7.3.51-1.42-2.62-4.59,5.33-5.77,1.15-.51-1.53-1.92-.51-3.84.51s-6.52-3.82-3-5c.9-1.15,1.8.64,3.72.89s-.39-.89-.77-2c2.12-1.35,3,.56,5.38,2.94,8.31,2.12-4.64-9.3,4.35-4,4.35,3.21,6-.42.26-2.81-2.82-1.92.38-.77,4-.64s.9-.9,4.1-2.17,3.2-.13,3.33-2c-.26-3.55-8.61,1.51-10.25-.64-2.23-1.5-8.21,6.86-4-1.79.64-2.68-4.48,1.92-7.3,4.09s-1.15-1.15-3.07-2.17-2.31-.89-2.57-2.68c.68-5.19,16.82-.84,8.33-7.54-1.54-2,2.18.64,4.36.13,1.76-4.07-7.91.1,2.94-8,1.54-5.58-8.57,8.13-5.89-.64,1.43-3.27-10.84,9.6-6.28.13-1.56-3-.72-3.44,1.54-6.14-.33-3.42,1.84-3.19,2.43-7.15.9-2-2.17,1.15-3.45,1.66s.25-2.17-1.29-1.28c-8.07,7.69-3.42-7.39-1-10.35-.13-1.4-4.67,4.62-4.67,4.62,2.71-16.44-2.82-12.66-2.37-1.3-5.21-3.92,0,.7-1.54,2.43-1.16,1.15-1.28,1.53-.39,2.68,3.76,9.29-1.34-1-2.3-.64-.9,1.54-.39,2.31-1.93,1.28s-6.14-4.6-5.76-2.42,4.74,4.72,3.2,5.11c-7.75,1.68.41.75-.51,2.81-6.8,6.31,7-2,5.25,1.79-.64,2.42-.89,2.3.39,3.19,2,0,3.62,6.06.89,5-3.91-1.77.54,4.68-.38,4.86-5.08-.23-3.77-10.37-8.44-7.67a17.55,17.55,0,0,0-3-1.15c-5-1.66,1,1.66-1.41,2.94s-1.28,2.56-1.28,2.56c11,.75-1.35,7.24,8.45,4.85-2.31,5.75,7-.71,5.77,2.83-.51,2.16-.77,2.54-.26,3.82,4.57,6.78-6.42-2.12-6.15.38.33,4.58-5,2.33-7,4.73-2,2.68-.39,3.7-4,4.09s-11.53.51-7.95,1.66c6.79-.42,7.22,1,9.48,4.34,1.53-8.78,4.34,3.66,6.66-.64,1.67-1.91,2.44-4.6,3.85-3.19,5.06,1.8,5.87,1.91,2.43,5.49,0,0-3.59-1.79-4.61.39-2.32,5.72-6-1.9-9.1,1.15-.14,7.69-9.9-.58-13.45,2.3a2,2,0,0,1-1.86,1.66c-11.3,1.06,4.16,4.2,4.68,3.45-.21,9.86,5.69-1.41,6.28,2.17-4.69,5.84,5-1.95,5.12.89.64,2,0,3.71,2.31,2.43s6.66-5.62,6.79-2.68c.15,10-13.55,3.34-19.73,8.94-1.68,1-14.07-3.87-11.79-1.15,15.19,1.27.05,9.69,6.34,8.82,12.38-9.88,1.29,6.2,6.6,4,10.7-13.37,3.6,2.41,8.71-.38a21.44,21.44,0,0,1,5.38-4.22c4.24-3.57,6.29,2.58-.38,5.18-6.85.83-10.49,0-14,4.41-8.91-3.26-4.54-1-10.38,1.78-10.63-1.78-5.86,8.17.26,7,12.35-5,2.74,2.09,6.78,3.45,3-1.11,12.28-12.68,7.69-4.73-.89,2.43,2.31.64,1.67,2.43s-3.2,4.21-.13,4c14.75-10.35,12,2.11-.77,4.34-18-4.52-.64.26-15,1.92-12.49,1.49-10.3.29-2.81,5.24-1,2.3-4.1,4.47-1.29,4.34s12.17-4.47,10.51-2.68-5.78,4.9-2.89,3.54c13.76-8.22-5.12,6.11,1.61,4.76,3.71-.76,9.6-6.51,8.84-4s-1.93,4.09.12,2.43c10.51-5.31-2.75,7.93-17.55,5.62-.25,1.92-2.94-1.4-3.2.77-3.67,8.11,13.8,2.67,2.95,8.18-2.44,1.53-11.53-.77-10,.76s2.81,4.25.89,3.92-8.84-.21-3.46,1.45,8.72-1.4,10.51.64-.9,3.07,4,1.79,3.07,1.15-.64,3.45-11.4-.51-11.4,1.53c2.8,5.41-11.91-.08-9.23,2.68,13.63,5.15,5.29,3.48,10,8.18,3.7-3.51,6.77-2,9.62-2.42,12.12-5.68-4.93,5.69-9.48,6.38-11.06-.06-7.31-3.3-10.38,2.94-2.69.77-10.38.51-8.07,2.56,23.95,5.71-5.06,10.66,22.29,4.47-4,5.67,2.68,3.1,4.48,5.11,1,.89-.38,1.22,4.74-.86,8.23-5.29,7,5.71.13,5.46-7.69-1.82-8.17,4.2-14.6.25,0,0,3.45,3.46-.13,3.33s-2.95-1.92-5.13.51-10.76,2.68-8.19,3.32,8.32-1.66,5.89,1.41c-10.92,12.28,7.16-.53,5.38,2.68-11,13.43,6.5-3.12,5.12.77-1.4,9.85,5.22-.89,7,2.68-2.68,5.93,4.6-2.48,6.15.51,11.35-3.6-.37,6.6-7.18,7-8.76-.16-11.08,3.09-17.9.66,2.51-1.82-7.27.12-8.33-2.36-1.27-1.72,6.91.36,4.32-3.91-2.53-1.74-12,1.16-15.24-4.31-2.77-3.36,5.15,3.59,2.1-1.3-.49-1.63,3.27,2,5.63,2.52,4.3.91-7.75-8.32,1-3,1.84.87-.78-1.11-1.84-2.25s4.89,1.63,6.69,1.71c1.87-2.07-4.21-2.56,3.1-5-.13-2.39-10.71.53-9.55-3.18-1.73-.24-11.36,1.59-12.89-3.59.79-2.63,2.84-.17,6.69,1.64,2,.16.33-1.39-.08-2.53s1.63,0,1.06-1.54c-2.89-5.12,3,2.33,4.9,3,1.87.24.57-1.14-.17-2.61.11-2.25,8.1,3.45,8.65-2.6,1.23-2.2-1.63-.73-4-1.47-3.23-1.81-2.29-3-6.61-1.13-1.21-3.51-12.17-1.06-11.58-6.35,3-3,6.93,8.24,7.5.24.65-3.21,7,9.82,4.25-.81.24-2.36.73,0,3.88,1.22,3.73.49-5.31-5,4-5.62,1.48-1.81-6.45,1.5-7.5.73-2.6-3.1-12.48.58-12.57-5.69.08-1.88,2.85.89,4.32,1.7s1.06-.24,1.47-1.54c0-1.82,6.26,3.15,3.27-.57-.49-1.14,1.55.16,2.77,1.14s1.22-2.53,1.22-2.53,3.84,0,5.39-1c1.06-2-3.38-.17-3.59-2.28-2.66-1.31-4.46,1.33-7.67.4-1.63-1.82-1.48-3.37-5.06-1.13-2-2.75-4.95-.91-6-3.75,4.67-4.68,4.9,4,7.92-.49,2.48-1.44,1.21,4.38,2.94-.57,2.42-1.28,9.57-.76-.25-1.79-2.28-.24-1.22-.89-2.53-2.6-1.29-1.54-4.71-.13-4.49-3-3.26-.94-4.67,5.3-4.08-2.68-.77-2.26,5.15,1.83,3.68-1.8,5.9,1.56-1.24-2.76,5.38-3.09,0,0,.74-.82-.81-1.63s2.28-2.93-.9-1.87a13.13,13.13,0,0,0-1.88.72c-2.65-1.81-2.5,4.94-5.39,4.89-.58-.13,2.25-4.21-.24-3.09-1.74.7-.71-3.2.57-3.17,1.13-2.22-.69-3.6,4.08-1.71,1.88.4.08-.65-.49-1.47-.58-1.31,4.61-.72-.32-1.79-1-.24,1.79-1.87,2-3.25-.19-2.2-4.55,4-4.9.73-.68-.25-3.86,6.49-1.47.4.57-.73.49-1-.24-1.7-1-1.11,2.33-4-1-1.55.29-7.14-3.24-9.77-1.52.83-7.68-10.56,4.83,10.75-3.62,3.65-1-.57,0,1.14-.82.81s-2.78-2.36-2.2-1.06c.38,2.53,1.75,2.39,1.55,4.56,1.37,1.54,1.92,2.21,1,3.91,2.91,6-4.9-2.13-4-.08,1.7,5.58-4.73-3.15-3.76.4,6.52,4.89,1.11,2.55,1.88,5.13,1.39.33,3.75-1.38,2.77-.08-5.41,4.26,4.87,1.49,5.31,4.8-3.17,7.07-6.43-1.25-8.24.49,2.7,5.51-1.11.18-2.53,1.14-1,1.36-6.37-1.85-6.53.41.16.9,3.47,2.27,4.73,2.68,2.29-.08,4.33-.81,2.53.41-3.67,1.52-2.61,3.83.16,1.79,4.52-2.26.92.36.82,1.55,1.21,4,3.87-2.8,5.39-.9-2.52,3,1.33-.17,1.87.73,2.29.75-.6,3.8-1.87,3.18s-2.12-1.3-2.45-.33c-.75,2.66-2.77-2.4-3.67-.73-.45,2.79-3.15-.9-4.66-.33-1.39,3.15-4.28-.26-4.24,1.55.21,4.91,6.65,1.63,8.08,3.58,2.1,4.12.89-1.82,5.79,1.71,5.44-4.25,2.37,4.24-2.61,4-6.92-1.41-6.24-4.79-7.91,0-2-.33-6.86-2-5.31-.16,8.07,1.54,1.89,5.64,5.14,6,5.74-4.17-.18,5.47,9.58,3.09-8,5.44-20,1.79-16.84,4.4,8.61,2.38-.65,4.82,7.26,5-3.32-.15-4.95,2.09-7.18,3.67-2.36.24-5.14.89-2.53,1.71,8-2,5.95,3.07,8.25,1.79,1.36-8.7.35,2.66,1.87-.25.48-4,8.74-2.22,4.57,0-6.47-2.35,3.48,2.76-7.83,3-10-1.17-2.53.55-4.9,2.53-2.53,1.06-6.61,1.3-4.89,2,6-1.26,1.33,5.1,5.22,4.11,2.28-1,4.32-3.94,3.67-1.75-2.7,6.6,2.65-.56,3.51.9,1.38,3,5.62-2.59,5.39-.33-3,2.11-3.27,2.63-6.21,4.15-1.87,1.31,2.29,1.55-.08,2.12-4.32.18-13.63,1.24-15.59,2.12,3.82-.78.8,7.22,3.68,4.56,5.61-6.52.25,2.37,3.26,1,2.29-1.71,2.9.93,5.46.9,6.27,4.73-6.4,2.08-6,3.33.49,1.55,1.63,2.28-.57,2.12s-8.32-2.85-6.94-1.06c5.91,2.37-.24,4.09,2.78,5,7-3,.4,1.75,3.92,2.12,27.56-1.09-23,6-35.81,11,0-.24-.41-.76.59-1.33.61-.25-6.88-.2-4.53-.81-.16-1,3.74.85,1.11-1.6-.15-.2,3.58.9,2.64-.76,2.28-1.51-.68-.27-.87-1.24.06-.42-2.81,1.09-1.48-.57-.12-.61-2.45.88-2.8-.14-.94.05-1.33-.6-1.9-1.27-.07-.57,1.25,1.36,1.15.24.31-.36,1.67.85,1.25-.59,1.08.52,1.83.36.75-.73,0-.29,2.15,2.24,1.34.23,1.95,0,.53-.87,2.16-.87,0-.88-2.77-.29-1.95-1.56.08-.51-4.34,1.28-2.24-.25.14.1-6.33-1.3-3.48-1.25,1.83.88,1.78-.93,3-.17.55-.42,2-.05.38-1.34.12-.4,1.57,1.57,1.25.15a2.17,2.17,0,0,0,1.84.11c1-.41-2.57-.66-.92-1.54a20,20,0,0,0-3.55.25c.29-.92.26-.92-1.38-.45-1.33.12-1.34-2.06-.19-.79.52-1.31,2.44,1.39,2-.86.09-.85,1.78,1.57,1.45-.13,1,0,.73-.77,2.31-1,.43-.74-1.65.18-1.4-.78-.56-.46-1.18.81-1.72.32-1.12-1.07-1.65-.47-3.74-.32-.44-.11-.12-.27.16-.59-.58,0-1.64-2.13-.39-.69.8.27.8-2.56,1.78,0,0,1.11,4.52-3.06.65-1.82.85-2.16-3.37,1.39-3.69-.9.31-.18,3.33.71,2.36-.65,0-.53,1.66,0,1.48-.95,3.28-3-4.26,1.48-3.8-.08,1.16-.08,1.27-.79,2.47-.91.17-.61-.58-1,1-1.44-.48-.55.53-2.66-.84-1-1.07-1.34-1.24,1.32-3.25,2.45-.74.11-.47-4.68.21-2.67,1.69.32-1.78-2.35,1.35-.49.71-.48-1.94-1.51.57-.92.07-.47-.9-.76.39-1.82.17-1-2,2.17-1.27.12-.08-.77-1.34,1.7-1.84,1.58.66-1.63-.3-7.28-.53-2.11-3-2.43.53,1.22-.35,2.67-.34-2.18-.84-1.15-2.18-2.28.56,1.47,1.12,1.82-.32,2.27a2.34,2.34,0,0,1,2.82,2.55c-2.08-3.51-1,.25-.15,1.54-.9-.63-3.24-2.38-4.1-2.52,1.3,1.16-.17,1.23-.09,1.87,1.46.68,1.12,0,.69,1.15,1.3.44,1.7.42,1.73,1.69,1.75-2,3.07,2.15-.55.59-1.8-.86-1.65-.67-1.36.21-1.67-1.54-1.51-.42-2.85.3,2.85.06-1.68,2.16,2.21.88.48,1.52,3-1.22,1.89,1,.35.08,2.31-1.66,2-.28-2.12,2.11-4.36,1.12-6.56,2.09,1.69-.3.4,1.25,1.24,1.33,2-.95,1.21.1,1.75.35.89-1.38,1.16.22,1.75-.29.39-.51,1.28-.8,1-.36s-.2,1.19.27.62c2.78-2.63.4.92-1.91.71-2.91.14-4.12-.15-6.07.89,4.56.06.28,4.29,4.33,1.69-1.61,3.29.61-.45.89.24-.47,1.72,1.83-.34.85.8-2.34,2.34-4.91.93-5.87,2.81.38,1.13,1.94.35,2.38.62-.15.29-.86,1.27-.27.8,3.07-2.28-.33.91,2.54-1,3-.76.22,1.18-2,1.54-2.23-.2-2.1-.86-3.24-.3-.59,1.08,2.8,1.26,2.4,1.57-2.1,1.84.94.15.75.36-1,2.18,1.38-1,1.51-.27.06.42.06.89.55.36,1.57-1.52.38.44,1.32,0-.85,2.15-13.05,1.62-6,4,.68,1.17.83.13,1.73.36-.71,2.35,1.06-.42,1.36,0-.16,1.66,1.27-.9,1.54-.21.07.58,2.31-.31-.14,1.2-2.63.82-5,2.27-7.78,2.06.27.7,1.43.45,1.1,1.45,2,0,.37.45.8,1,2.11-.42.86-.1,1.33.65,1.77-.79,1,.12,1.61.35,1.81-.93.16.74,2.25-.12-.63,2-9.9-.19-6.5,1.66-.33,1.29-.08,1,1,1.09-26.75,9.23-51.68,18.58-72.86,19.51.85-1.1-4.3.92-3.1-.69-1.23.7-4.12-1.24-1.79-.57.76-.79.53-.35,1.87.15.72-.24-.58-2.09,1.19-.62.53.35.36-.07.38-.52,0-.6,1.33.7.87-.58-.11-.4,1.05-.1,1.44-.45.43-.75-1.65.18-1.4-.79-3,1.1-2.06-1.1-3.27-.38-1.83.9-2.71,0-2.94-1.43.82.48.47,1.05,1.49-.46.26-.93,1.26,3.22,1.7.58.17-.63.07-.36.7-.37,2.93-2.58-3.79-.09-4.63-1.9.32-.16,3.33.68,2.36-.66.47.1,3.76-2.7,1.61-1.81-1.68.43-6.25,2.13-2.52.07,1.9-.09.11-1.06,2.06-1.63.07-.58-.76-.71.06-1.61-.21-.7-1.36,1.83-1.18,0-1.27.94-4,5.55-3.26-.13.84.65,1.43.73.39-.67,0-.34,1,.68,1.47.67.71-.49-1.94-1.52.57-.93.45,0-.07-.28-.42-.57.06-.52,1.8-2.48-.31-.55-.4.44-.28-.12-.15-.58-.08-.76-1.34,1.7-1.84,1.58.66-1.62-.3-7.29-.53-2.11-3-2.43.53,1.23-.35,2.67-.34-2.18-.84-1.15-2.18-2.28.56,1.47,1.12,1.83-.32,2.28a2.33,2.33,0,0,1,2.82,2.54c-2.08-3.5-1,.25-.15,1.54-1.18-.54-5.09-4.23-3.53-1.33-1.8.71.28.93.56,1.1-1.72,1.13,1,.8,1.2,1.42-.38,1.39,0,.89.73.29,1.84.43,1.31,2.38-1.28,1.31-1.8-.89-1.65-.67-1.36.21-.42-.07-1.43-1.34-1.66-1s.38.59.06.74c-3.44,1.38,1.81-.47-.89,2,1.44-.7,2.7-.08,4.15-.45-.85,1.38-.22.89.92.24,2.71,1.41-5.26,2.1-5.9,2.49,1,.21,1,.61,1.05.9-21-.93-58.84,14-95.62-4.81,3.41-.31,1.6.27.36-1.45-.23-.3-2.74,1.18-.7-.61-1.37,1.26-10.43-1.86-6.45-1.87.39-.74,2.19,1.35,1.53-.12,3.2.88.45-2.09,3.56.41,1.4.05-2.74-2.68,1.33-.6.73.16.06-.57-.54-1.33.1-.67,1-.48,1.21-.41-.16-.05-.66-.25-1.78-.77-.2-.72-2.67.57-1.3-.95-.56.37-6.08.22-4.8-1.58-.13-.55,5,1.53,3.49-.89,4.6,1.24,1,.42,5.53-1.11.57-.5-1.33-.44-2-.63-.53-1.18-.36-.88-2.57-.73-1.59-.82-6.06-2.58-1.4-1.65,2.22,1.23,1.37-.69,3.91-1.36-1.34-.18-2.7-.58-5.12-1-2.4-1.79.87,0,.83-1.3.44-.51,1.27.25,2.6-.16,1.76-.86-2.54.36-.64-1.33-.22,0-6-.71-2.31-1.05,1,.07.63-.63.57-1.17-1-.69-4.67.46-5.93-1.68-1.08-1.31,2,1.4.82-.51-.19-.63,1.27.8,2.19,1,1.67.33-3-3.23.4-1.19.71.34-.31-.43-.72-.87-.38-.67,4.48,2.1,2.29-.42,5.63-2.41-9.27-.66-6.67-4,1.82,1.05,2.67,2.12,2.16-1.07.19-.22,3.54,3.7,2.13.83,0-.9,3.15,1.36,3.36-1,.59-.45-3.79-1.61-4.13-1,0-.49-7.51-2.41-3.56-2.38.65,0,1.88,2.57,2,0,.25-1.28,2.72,3.86,1.66-.31.09-.92.28,0,1.51.47,1.15.14-1.54-2.2,1.57-2.18-.89-.41-7.61.92-7.82-1.94,0-.73,1.11.35,1.69.67.89.09.29-1.4,1.93-.31.55,0-.86-1.39,1-.07.83-.85.58-1,2.57-1.36-.62-1.21-2.81-.79-4.38-.73-.48-.53-.93-1.32-2-.45-.63-.89-1.94-.42-2.32-1.45,1.13-1.64,2,1.25,3.08-.19,1-.58.48,1.71,1.14-.23.95-.46,3.73-.32-.09-.69-.77-.87-2.3-1.2-2.73-2.19-1.22-.06-1.81,1.48-1.59-1-.3-.9,2,.72,1.43-.7,1.95.68-.1-1.23,2.1-1.2,0,0,.28-.32-.32-.64s.89-1.14-.35-.73a4.1,4.1,0,0,0-.73.29c-1-.71-1,1.92-2.1,1.9.84-1.22-1.38-1.44.13-2.44.44-.86-.27-1.4,1.59-.67.73.16,0-.25-.19-.57-.23-.51,1.79-.28-.13-.69.21-.64,1.68-2.3-.64-.67-1-.66-1.73,1.92-1.05-.16.08-1.34-1.77-7.08-1.06-.94-2.25-2.83.21.82-.33,2-.58.27-1.06-1.16-1.4-.26-2.24-1.56.93,2.12.13,2.89,1.13,2.34-1.91-.83-1.56,0,.67,2.17-1.84-1.23-1.46.15,2,1.45.66,1.17.73,2,.54.13,1.46-.54,1.08,0-2.11,1.66,1.89.58,2.06,1.87-.67,2.39-2.69-.26-3.2.19,1.6,2.31-2.88-.74-3.53.6-.09,1,3.74.84,2.83,1.2-1.43.6-1,1.5.06.7,1.76-.88.36.14.32.6.47,1.55,1.5-1.08,2.1-.35-1,1.18.51-.06.73.29,1.14,1.91-2.57.94-3.12.82-.17,1.09-1.22-.34-1.81-.12-.31.93-1.64.09-1.65.6.08,1.91,2.59.63,3.15,1.39.62,1.25,1-.44,2.25.67,2.11-1.66.93,1.65-1,1.55-2.59-.63-2.53-1.63-3.08,0-.76-.13-2.67-.79-2.06-.06,2.44.27,1.11,2.16,2,2.34,1.8-1.38.71,2.21,3.73,1.21-1.46,1.46-7.18,1-6.56,1.71,2.1.14,1,1.88,2,2,2.67-.71-1.63.72-1.94,1.43-3.76.9,1.51.35,1.49.69.13.7.64,1.27.74.67.54-3.46.13,1,.73-.1.2-1.53,3.39-.88,1.78,0-2.39-.89.24.61-.83.61-.31.95-4.95.07-4.38.69,2.33,1.14-2.71,1.16-1.65,1.65,3.26.22-.63,3,3.46.92-1.08,2.54,1.05-.2,1.36.35.56,1.2,2.18-1,2.1-.13-2.1,1.1-2.33,3-4.38,2.57,0-.27-4.82.8-4.13.69,1.47-.31.32,2.83,1.43,1.78.44-.7,1.27-1.27,1.11-.6-1.63,1.86,5,.4,2.22,2.52-2.83-.17-1.54,0-2.47.93-4.29-1.12-1.85-.53-1.63,1.55,2.69-1.23.19.72,1.53.83,2.24-1.16.66.77,1.75.47,1-.62,1.85-.51,2-.06-5,4-42.22-16.12-30.53-10.29,2.07.75-.14-1.38-1.17-2.75-1-1.56,8.79,5.06,2.89-1.45-1.3-1.65,1.8-.41,3.17-.75.57.27-5.69-2.87-7.16-2.07-1.93.07-.07-1.78-.07-1.78-1.36-.17-2,2-4.89-.07-1.68-.74-5.92.58-6.2-2.54,1.6-1-.85-2.32,3.3-.46s1.23-.57,4.69,0c1.38.2,1-1.24.28-2.27-1.68-1.76,10.34,4.45,6.13.07-.49-1.1,4.61-1.38,5.85-2.48,1.64-1.83-7,0-4.68-3-3,.19-10-1.14-13-4.2-1-.95,2.68.76,2.68.76,1.56.19,3.17-.56,5.17,1.31,1.7-2.42.45-2.65,5.38-4.4.82-1.24-2.14.28-4-.14-2.17-2.53-2.23-1-7.1-2.13-5.19-3.87,1.86-.09,1.79-2.81.3-.13,11.48-.73,3.79-1.13.93-5.55-2.8.14-7-3.62-1.12-1.56,5.88.39,3.66-3.29-2.16-1.51-10.11,1-12.87-3.65-2.34-2.85,4.35,3,1.77-1.09-.41-1.38,2.76,1.71,4.76,2.13,3.58.7-6.52-7,.86-2.57,1.56.74-.66-.94-1.55-1.9s4.13,1.37,5.65,1.44c1.57-1.76-3.55-2.15,2.62-4.19-.09-2-9.07.42-8.06-2.68-1.38-.06-9.65,1.25-10.89-3,.69-2.19,2.38-.17,5.65,1.38,1.65.14.28-1.17-.07-2.13s1.38,0,.9-1.3c-2.47-4.31,2.54,2,4.13,2.54,1.58.2.48-1-.14-2.2,0-2,6.87,3,7.3-2.2,1-1.86-1.37-.62-3.37-1.24-2.45-1.49-2.53-2.44-5.58-1-1-3-10.28-.89-9.78-5.36,2.53-2.5,5.85,7,6.33.21.47-2.84,5.93,8.38,3.59-.69.2-2,.62,0,3.27,1,2.78.18-4-4.39,3.41-4.74,1.19-1.62-5.41,1.33-6.34.62-3.08-1.33-3.1-2.18-7.92-1.51-4.7-1.52-2.82-5.9,1-1.86,1.24.69.9-.2,1.24-1.3,0-1.57,5.29,2.68,2.76-.49,6.58,2-.75-.72,7.92-2,.9-1.64-2.85-.14-3-1.92-2.24-1.09-3.77,1.11-6.48.34-1.11-1.21-1.66-2.94-4.27-1-1.32-1.95-4.28-1-5-3.16.92-1.14,3.46-2.19,4.55.48.9,1,.9.27,2.14-.89,2.06-1.28,1,3.73,2.48-.49,2.12-.95,8-.73-.21-1.51-1.93-.2-1-.75-2.14-2.2s-3.94,0-3.78-2.54c-2.76-.61-3.95,4.19-3.45-2.26-.68-2,4.37,1.59,3.1-1.52,4.67,1.37-.69-2.47,4.55-2.61,0,0,.62-.69-.69-1.37s1.93-2.48-.76-1.58a10.66,10.66,0,0,0-1.59.61c-2.23-1.53-2.11,4.17-4.54,4.13,2.16-6.84-3.13,2.32.48-7-.93-2.06,6.48,2.43,2.83-1-.49-.69.41-.48,1.37-.76-.74-1.37-2.94.17.07-3.5-.16-1.86-3.84,3.37-4.13.62-.48-.83-1.31,2.61-1.79,2.54.28-1.56.25-3.85.82-5.57.28-.75-.61.14-1.3.62-1.1.89,1.08-6.11-1.31-5.29-1.26.21.22,5.78,0,6-6.62-9,4.14,9.15-3.06,3.08-.83-.48,0,1-.69.69s-2.35-2-1.86-.9c.41,2.93,3.23,4.6,2.13,7.15,2.45,5.08-4.14-1.8-3.37-.07,1.44,4.72-4-2.65-3.17.34,5.22,3.89,1.12,2.22,1.58,4.33,1.17.28,3.17-1.16,2.34-.06-4.56,3.6,4.11,1.26,4.48,4.05-2.67,6-5.42-1.06-7,.41,3.57,4.89-6.24-1.56-7.64,1.31.13.76,2.93,1.92,4,2.27,1.93-.07,3.65-.69,2.14.34-3.1,1.28-2.2,3.24.14,1.51,3.81-1.91.77.3.69,1.31,1,3.36,3.26-2.36,4.54-.76-2.12,2.56,1.13-.14,1.59.62,1.92.63-.51,3.21-1.59,2.68s-1.79-1.1-2.06-.28c-.64,2.25-2.34-2-3.1-.62-.38,2.36-2.66-.75-3.93-.27-1.18,2.65-3.62-.23-3.58,1.3.17,4.15,5.61,1.38,6.82,3,1.69,3.36,1-1.47,4.89,1.44,4.58-3.59,2,3.58-2.21,3.37-5.84-1.19-5.27-4-6.68,0-1.65-.28-5.79-1.72-4.48-.14,6.4,1.1,1.84,4.72,4.34,5.09,4.84-3.52-.15,4.61,8.09,2.61-6,4.33-16.83,1.66-14.22,3.71,6.91,1.85-.18,4.23,6.13,4.26-2.81-.13-4.18,1.76-6.06,3.09-2,.21-4.34.76-2.14,1.44,6.49-1.69,5.08,2.45,7,1.52.21-1.31.42-3.58.83-2.34.16,5.93.91-.85,2.89.21,2.34.12,4.16.28,1.73,1.92-4.66-1.72.25,1.25-1.8,1.3-.65,2.11-10.75.14-9.5,1.52.75,1.16,2.68,1,.55,1.85-7.23,2.32-2.83.57-1.1,2.82-.14,1.79-.56,3.23,1.37,2.37,6.2-4.84.61,1.08,3.31.72,2.32-2.39,2.7-.92,4.41-.72,4.88-2.79,1.89-.09-.41,1.41-4.9,2.52-.29,1.67-2,2.89-3.64.15-11.5,1-13.16,1.78,3.22-.65.68,6.1,3.1,3.85,1-1.51,2.76-2.75,2.41-1.31s-1.38,2.82.35,2.13c2-1.36,3.27,1.14,5.69,1,1.64,4.94-6.23.88-6.11,2.62.42,1.3,1.38,1.92-.48,1.78s-7-2.4-5.86-.89c5,2-.2,3.45,2.35,4.26,1.86-.21,3.23-1.65,3-.55-2.72,4.76,3.42.38,3.38,2-1.41,4,3.39-1.05,3.78.55,2.66,5.1-19.84,3.31-25.45,3.71,9.09-2.13-10.3-2.08-6.59-3.89,1.71-1.7,10.32-3.2,8.12-4.4s-7.82,2.7-9.32,2,5.31-3.4,3.21-4.1-1.71-2.2-5.51.8c-21.78,10.18-.32-7.41-17.19,2.73-2.05,0-2.24-.8-5-1.67s1-1.44.18-3.12.11-1.27,1.62-2.66-4.17-1-7.42-3.52-.41-1.51.68-.52.83.52,1.12-1c8.81,5,1.57-4.6,10.14,2.32,3.59.82-3.06-8.35,5.85-2.31,1.89-3.31,3.89-5.63,11.13-3.41,5.35-.94-2.39-6.11,10.42-4.4,3.71-2.78-9.4-.49-5-5.09-.71-2-16,3-11.13-1.61-1.36-1.27-25.06-2-25.79-8.1-.53-1.12,3,.81,3.85-.46.36-.77,5.62,2.86,4.9-.64.23-1.21,6.2,1.74,6.2,1.74,3.16-1.25,3.42-1.28,8.87,1,5.25.75-3.68-8.85,2.61-5.26,0,0,.81-.41.35-1.56-1.93-1,18.06,4.39,11.88-2.66-.29-1.68,1.62-2.31,2.89-3.64s-1.33-1.51-3.53-.52c-4.34,1.79-2.21-2.25-7.77-.23-2.66.4-1-1.22.41-1.91.43-1.43-16.37-2.39-16.63-5.61-.7-1.5,2-.69,3.76-.17,2.81-.54,1.13-2.16,6.9.29,3,.52.87-1.33-.52-2.89-.44-1.1,8.71-2.05,10.14-6.08,1.22-1.9-4.64.35-4.64.35-3.66-2.51-4.56-1.28-10.43-.34-2.14-.76,1.1-.87,2.2-2,2-1-21.76-4.5-12.28-4.05,3.9.73.49-5.3,6.37-.63,3.82,2-1.13-5.12,6.2-.52,3.38-.55-3.9-4.27,5.34-7.17,1.76-4.06-8.78,3.07-6.73-2,.56-1.91-19,3.29-9.73-3.53,1.56-2.2,1.91-.12,3.88-.12-1.24-6.61,10.81-8.7-6.26-5.14-2-.23,1.68-1.21,2.55-2.54,1.54-.8-24.09.5-13-2-.81-4.56,2.05.23,4.69-1,1.86-.86,2,.29,3.77-.06s-2.49-4.68-3.65-5.83c-1.88-.8,9.43,1.68,10.6.23,3.32-1.07-1.89-3.84,4.53-6.42.63-1.85-6.32-.75-6.32-.75-1.91-2.64-2.21-2-7.57-.64-2.88.29-.89-1.9,0-3.52-.52-2.58-10.57,3.77-12.08-.58-4.48,1.24-12.37-10.21-4.35-3.12,2.26-.45-.32-2.66,5.74-.58,2.73-.06-.52-3.18.75-3.3s4.87,2.84,5.68,1c-3.68-7.77-1.67-2.2,3.66.17,1-2.17-2-5.89,4.34-3.41,2.39-1.56-2.18-4.29,4.7-3.7.75-1.5-6.55-3.47-8.44-3.53.42-7.83-4.63-1-11.44-1.56-2.84-.34.64-1,1.79-2.71s-9.09-.12-12.51-1.56c-5.39-1.86-8.15-7-2.55-3.82,3.15,1.51,2-1.63,5.44,1.21,2.82,2.67,3.12-6.92,7.6-2,1.16,1.21,1.44.11,1.21-1.56,6,1,4.33-.35.47-4.22,10,6.78,1.94-3.84,8.46,2.37,1.59.95,1.28-2.53,4.87-1.27,4.3-1.77-11.09-2.78-4-6.65.4-1.45-5,1.39-6.61,1.1.05-4.17-6,.72-8.69,0,4.85-9.95-11,4.88-10.43-6.83,1.6-1.84,4.55,4.51,5.56-.75.55-1.8,10,8.27,6.66-1.5.39-3.72,7.69,6.82,6.26-.58.06-2,.87-.34,2.67.06,3.77-2-2.27-3.25,7.3-4.51,1.89-3.22-7.09.76-6-3.41-2.42-1.92-5.11,3.47-7.42,1.39-.56-2.25-6,1-3.42-3.35.74-2.81-18,6.86-12-.58.23-2-6.56-.61-4-5.26.53-2.87,3.56,7.74,4,.23,0-2.16,2.16,2.27,2.48-2.2,1.06-4.27,5.49,14.06,7.36,2.49.82-3.75,6.82.29,5.62-6.25.18-2.31-4.28,1.1-6.66.29-1.14-2.58,3.12-5.73-5.74-1.21-6.3,3.86-15.32-6.2-7-2,1.57.75,1.45.86,2.09-.23.22-1.27,9.51,1.59,4.92-3.24-.4-1.85,2.79-.58,5.22-1.56,1.17-2.73,3.31-3.58,4.87-6.71-.85-3.49-21.42,10-20.11,3.82.6-2.08,7.45,1.28,6.08-3.07.73-1.81,8.67.9,3.77-3.52,12.2-9-.75-1,5.39-10.47-.92-3.15-5.83,8-5.1,0-1.11-3.07-4.78,10.25-5.39,4.11-.52-2.08-1,1.73-1.74,3.7-11.9,18.14-7.17-15.94-4.75-6.3,4.12,2.68.81-3.74-.53-5,.18-1.45,4.41,2.94,6.38,2.89,3-2.13-8.4-6.53,2.44-4,2-.23-.29-1.22-1.8-2.49.35-1.93,7.72-10.9-1.34-2.37-1.73,1.91-1.21-.52-.63-2.48-.4-3.41-5.79,7.4-8,6.83-.13-1.87.11-4.1,2.24-5,.12-2.44-2.76,0,.76-4.68-.61-1.56-3.5,2.9-2.72-1.32-.65-13.59-1.94-6-2.56,1.92-.64,1.41-5-5.11-5.38-4.22.57,4.21,5.8,10.82,3.89,15.72-1.28-1.83-1.45-12.15-4.06-5.88-1,.9-4.83-5.24-5.34-4s4.48,7.67,3.33,8.18c-12.4,3.1,9.86-1.69,7.43,12.66-5.39-8.9-5.57-10.09-4.85.89,3.49.18,3.89,4.17,4.21,5.76-3.91-2.71-14-10.28-17.69-10.87,6.54,6.71-1.3,4.61-.38,8.05,1.79,1.28,5.38,1.41,5.25,1.79-7.46,5,4.26,3.43,5.16,6.14-1.63,6.09.11,3.81,3.17,1.28,1.8,0,.26,3.32,1.67,2.3,3.12-4.77,5.48,3.2,1.16,4.43-4.42,4.37-19.83-11.15-14.23-.2C80.33,241,76,235.53,75,236.8c2.37,5-4.72,3-5.13,5.76.9,1.27,4.62-.13,5.39.76-6.72,9-3.11,3.84,4.16,3.07,1.73,5.74,6.62-1.28,9.94.51-3.67,6-1,3.78,4,1,9.44-.26-4.09,9.72-13.84,6.25,7.66,5.07-12.86,2.4-11.67,4.48,8.2-1,1.23,5.47,5.39,5.76,11.2-4.79,4.61,1.2,7.56,1.53,3.83-6,5,.95,7.56-1.28,1.67-2.17,5.51-3.45,4.36-1.53s-.9,5.11,1.15,2.68c12-11.39,1.71,4-8.26,3.07-10.46.71-7.61-2.95-13.27,1.41-3.21.38-6.92-2.56-6.67-.51s-8.07,1.4-6.28,2.94c7.12,2,11.27,1.93,10.4,8.69,1.46,9.19,6.79-5.3,8.32-1.41-6.92,14,2.89-2,3.84,1-2,7.45,7.92-1.44,3.67,3.46-16.07,15-15.16-1.37-20.59,9.33-7.54,1.39-4.49,2.71-2.3,5.88,1.41.38,8.46-1.66,7.81-.38s-3.71,5.49-1.15,3.45,7.43-5.5,6.67-4-3.08,5-.9,3.2,5-4.73,5.19-3.32c14.22-4.07.2,5.49-8.52,6.65-9.59-.88-9-3.74-14-1.28-2.55,4.62,12.08,5.41,10.38,6.77s-4.62,3.71-2.18,3.84,6-4,5.38-2.3-2,4.85,0,3.06c8.19-9.16,5-.08,8.91-2.68,6.78-6.55,1.64,1.92,5.7-.13,1.54-1.15-4.35,5.88-9.61,6.14-13.69-.74-18,1.41-26.79,5.62,2.86,5.2,12,3.95,12.18,8.31,9.88-3.77,3.47,0,5.89,2.82,9-7.89,3.64-2.83,7.18-2.05,1.28-1.92,5.51-4.48,5.39-3.07-.87,5.13,4.38-2.75,4.48.26-1.67,7.63-16.84,4.52-17.94,10.61-1.68,5.41-31.76-.64-16.41,5.9,2.57.62-1.41,3.05.39,3.56s5.89-.13,4.87,1.15c-7.27,6.17,5.95.71,5,2.43-5.71,7.25,5.6.17,5.64,2.42-.26,1.67-1.54,3.58.64,2.56,8.26-5,2,1.76,5.25.9,11.87-5.08-3.79,3.71-9.36,3.57-4.51.59-26.08-4.3-15.68.77-9.79,1.37-10.59-1.12-17.78-3.75,12,2.66,4-8.64,11.12-3.59,4-.17-3.78-5,6-7,1.8-2.18-3.89-.19-6.17.19-1.94-5.69-1.16-1.56-9.19,0-5.78.28-9.35-9.56-3-4.64,6.14-4.23,4.08,3,6.74-2,1.66-2.26,9.16,1.54,9.38-4.16.21-2.18-3.2,1.93-4.93-1.8-1.74-.65-4.89,3.62-5.4.38-1-1.94-3.4,3.94-4.27.85-.38-1.13-1.42-.38-2.84.38s-4.83-2.84-2.18-3.69c.62-1,5.1,2.67,2.18-.85,1.76-2.21,4.84,5.67,6.25,1-.11-1.39-4.29-4.41,1-1.8,3.22,2.38,4.45-.31.19-2.08-2.08-1.42.29-.57,2.94-.47,1.51-.48,5.28-2.08,5.5-3.12-.19-2.63-6.37,1.11-7.58-.47-1.66-1.11-6.08,5.07-2.94-1.33-2.17-2.22-5.59,7.89-9.58-.57.51-3.84,12.45-.62,6.16-5.58-1.13-1.51,1.61.48,3.23.1.88-3-5.37-.32,2.18-6,1.13-4.13-6.35,6-4.36-.47,1.05-2.42-8,7.1-4.65.09-1.08-1.93-.47-2.78,1.14-4.54-.25-2.53,1.36-2.36,1.8-5.29.66-1.52-1.61.85-2.56,1.23s.19-1.61-.95-.95C14.5,313,29.29,288,20.2,300.44c2-12.17-2.09-9.37-1.76-1-3.86-2.9,0,.51-1.14,1.8-2.09,1.19,1.87,4.05.47,5-2.48-3.23-.55-3.86-3.88-2.55-6.89-4.85-2.58,0-1.9,2-5.74,1.25.3.56-.38,2.08-5,4.67,5.16-1.51,3.89,1.33-.48,1.79-.67,1.7.28,2.36,1.49,0,2.69,4.48.67,3.69-2.9-1.31.39,3.46-.29,3.59-3.76-.17-2.79-7.67-6.24-5.67a12.85,12.85,0,0,0-2.2-.85c-3.69-1.23.76,1.23-1,2.17s-.95,1.89-.95,1.89c7.71.39-.61,5.4,6.26,3.6-1.69,4.18,5.13-.48,4.27,2.09-1.72,2.18,2.3,4.88-.29,4.62-2.08-.47-4.07-2.84-4.45-1.51.26,3.31-3.73,1.78-5.22,3.5-1.52,2-.28,2.74-2.94,3-1.15.5-5-.64-4.57,1.45,2.18.11,4.13-.95,4.29.63,2,5.72.51-1,3.41.67,3.81,4.69,3.24-3.51,8.06-.38,2.62-.48-.2,3.36-.47,3.31-1.14-1.89-4.73,1.76-5.31,2,0,0-4.65-2.46-4.84-.85-.79,5.73-6.83-2-5.14,7.47,5.13-3-1.14,2.21,1.63,1.15,1.8-.3,3.61-2.38,4.08-.86-.13,6,6.24-3.55,6.73-.19-1.91,10.68-16-3.21-12.44,14.18,4.74-8.39,2.45,3.45,5.14.76,3.41-2.49,3.85-4.82,6.83-3.41-1.15,8.63-15.62-.36-12,13,1.87-2.49,4.11-3,1.73,0-.67,1.8,1.7.47,1.23,1.8s-2.37,3.12-.09,2.93,6.63-5.08,6.16-3.54c4.76,2-4.82,8.07-9,6.38v10.34c1.39,14.9.22,65.51-.21,109.79H-1.8v51.47H750.8V500H751c-.08-42.34-.24-88.72,0-114.4-7.23-4.8-2-1.8-3.13-4.68-.93-1.42,1.9-.2,3.13,1.34C752.39,378.09,749.1,372.74,746.51,371.43Zm-25.77-42.08c3,4-3.13.94-4.26,1.37C716.49,328.44,718.56,329.52,720.74,329.35Zm-21.17,6.14c6.19-4.31,12.1,7.62,8.59-2.75-2.34-5.09,9.22,8.36,8.55,1,1,1.88,3.59-.7,3.63,1.92,1.37,8.16,4.44-4.68,5.25-1.77.26,3.11,1.71.13,1.77,1.57.13.9.34,2.72,1.2,1.48,2.05-4.17,3.39.55-1.2,2.1,4.25,5.23-9.14-1.49-8.59.41,1.81,3.07-2,.81-2.44,2.39-1.65,1.52-3.56-2.39-5.28-1-.38,1.15.24,1.64-1.16,1.44-5.25-.44-2.95,1.64-.09,1.78a24.39,24.39,0,0,1-5.74-.59c-3.72-.89,2.82-1.27-.13-3.32C699.89,338.74,687.2,328.3,699.57,335.49Zm15.73,39.3c-1.15,5.3,2.89.45,3.84,1.81-.29,3.43,3.77-2.49,3.56-.74-3.18,9-24.53,1.9-15.7-.44,1.33-1.13,3.31.59,5.64,1.53C716.36,378.89,712.69,374.74,715.3,374.79Zm2.12-10.42c5.46-8.08-13.67,3.44-10.37-7.11,3.39,2.24,2.32-.92,4.45-.31-1,4.37,3.5-1.7,3.84-.46-2.79,2.79-3.89,3.7.33,3-.62,3.74,3.31-2.05,4.34,1.2.67,3.61,3.51-.18,5.83.45C732.58,359.34,721.05,366.32,717.42,364.37Zm2.18-11.05c-1.57.36-2.21-4.65.28-2.46C717.26,350.71,720.81,353.34,719.6,353.32Zm7.43-4.86c-.06.92-.34,2.84-1.79,3.37C724.53,350.33,725.68,347.14,727,348.46ZM610.62,419.89a7.46,7.46,0,0,0,2.32-.33C614.39,421.49,611.58,420.37,610.62,419.89Zm2.46,8.19-.77,0C612.55,427.93,613.08,427.46,613.08,428.08Zm-1-9.54a10.12,10.12,0,0,0-1.3.09C609.07,418,611,416.52,612,418.54Zm-8.32,2.57c3.55,1.23,1-1.07,3.4-1.59C607.1,424.35,598.39,420.93,603.72,421.11Zm-1.25,7.56-.89.07C601.11,428.26,601.68,428.38,602.47,428.67Zm-90.39,16.81a14.34,14.34,0,0,0-1.43.65C511,445.76,511.47,445.18,512.08,445.48ZM70.46,395.58c-5.69,9.41-20,3-28.7,3.67-2.75-.66,2.09-.95-.09-2.46-5.38-1,1.69-2.65,2.84-2.46,1.27,1.1-.72,5.48,1.86,3.29,1.26-1.37,10.69-2.17,11-1.79C53.67,404.06,69.74,393.25,70.46,395.58ZM57.38,426.65c7.23-2.87,18.86-6.19,3.86.76a3.82,3.82,0,0,1-1.37.36C60.31,426.31,59.4,426.21,57.38,426.65ZM47.12,408.79c-1,1.52-2,2.45.27,2,3.82-1.3,5.23-1.94,4.47,1.47C48.34,414.87,38.43,410.79,47.12,408.79Zm-1.91,17.13c1.58-1,2.58-2.24,3.95-1.54C49.68,427.89,47.41,426.9,45.21,425.92Zm-3.07-2.08c-.84-1.51.78-.2,1.55-.67C44.27,424.94,42.87,425.28,42.14,423.84Zm11,3.59a10.78,10.78,0,0,1-2.59,0C54.55,422.47,58.08,427.13,53.14,427.43ZM53,415.52c-5.4-.15,4.77-6.37,4.61-3.45C58.33,415.07,54.75,415.19,53,415.52Zm-19.15-38.4c2.49,1,4.65-1.75,6.07,2.65,1.75,3.32.57-9.6,2.18.28.29,1.8,1.8.1,2.21-2C44.3,377,60,378.74,48.78,376c-2.57-1.78-4.5-4.48-8.35-4.25-1.29-2.57,5.78,3.32,3.92-3.21-.07-2.65,1.74-.73,4.25-2.46.93,2.11-2.7,3.83-.69,4.21,10.53-.67,0,3.38,4,4.47,2.31-.51,5.64-2.68,5.26-1.15-5.3,7.15,8.25-1.7,6.92,1.22-.77,1.46-2.57,3.25-.52,2.49,16-5.85-4.64,5.38-10.63,5-4-.13-8.34-2.81-7.82-.89,2.77,4.17-12.48.83-7.59-1.71.37-1.9-1.24.09-2.85.09S32.75,377,33.89,377.12Zm4.9,16.27c-.21.32-.41.64-.58.95C33.1,392.21,33.48,390,38.79,393.39Z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#1d1d3a&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Scene 3 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">g</span> <span class="attr">id</span>=<span class="string">&quot;scene3&quot;</span> <span class="attr">style</span>=<span class="string">&quot;visibility: hidden;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">rect</span> <span class="attr">id</span>=<span class="string">&quot;bg2&quot;</span> <span class="attr">y</span>=<span class="string">&quot;-59.8&quot;</span> <span class="attr">width</span>=<span class="string">&quot;750&quot;</span> <span class="attr">height</span>=<span class="string">&quot;612.4&quot;</span> <span class="attr">transform</span>=<span class="string">&quot;translate(750 492.8) rotate(180)&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;url(#bg2-grad)&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">g</span> <span class="attr">id</span>=<span class="string">&quot;fstar&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">image</span> <span class="attr">width</span>=<span class="string">&quot;707&quot;</span> <span class="attr">height</span>=<span class="string">&quot;429&quot;</span> <span class="attr">transform</span>=<span class="string">&quot;translate(728.46 16.5) scale(0.24)&quot;</span> <span class="attr">xlink:href</span>=<span class="string">&quot;https://i.ibb.co/TWfhqRG/fstar.png&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">&quot;768.6&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;78.72&quot;</span> <span class="attr">r</span>=<span class="string">&quot;39.39&quot;</span> <span class="attr">transform</span>=<span class="string">&quot;translate(64.22 396.2) rotate(-30.11)&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;url(#fstar-grad)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;mix-blend-mode: overlay&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">g</span> <span class="attr">id</span>=<span class="string">&quot;stars&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#fff&quot;</span> <span class="attr">style</span>=<span class="string">&quot;opacity: 0;&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M699.71,128.24a1,1,0,1,1-1-1A1,1,0,0,1,699.71,128.24Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M643.78,37.74a1,1,0,1,1-1-1A1,1,0,0,1,643.78,37.74Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M666.33,139.16a1.46,1.46,0,1,1-1.46-1.45A1.46,1.46,0,0,1,666.33,139.16Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">&quot;636.11&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;77.24&quot;</span> <span class="attr">r</span>=<span class="string">&quot;1.46&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M714.4,31.27a1.46,1.46,0,1,1-1.46-1.45A1.46,1.46,0,0,1,714.4,31.27Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M725,27.36a1.46,1.46,0,1,1-1.46-1.46A1.46,1.46,0,0,1,725,27.36Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M468.41,65.4A1.46,1.46,0,1,1,467,63.94,1.46,1.46,0,0,1,468.41,65.4Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M710,97.11a1.46,1.46,0,1,1-1.46-1.46A1.45,1.45,0,0,1,710,97.11Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">&quot;711.49&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;170.22&quot;</span> <span class="attr">r</span>=<span class="string">&quot;1.46&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M677.73,260.6a1.46,1.46,0,1,1-1.46-1.45A1.46,1.46,0,0,1,677.73,260.6Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M731.11,208.78a1.46,1.46,0,1,1-1.46-1.45A1.46,1.46,0,0,1,731.11,208.78Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M447.4,234.79a1.46,1.46,0,1,1-1.46-1.45A1.46,1.46,0,0,1,447.4,234.79Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M523.16,200.18a1.46,1.46,0,1,1-1.45-1.46A1.45,1.45,0,0,1,523.16,200.18Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M624.94,167.77a1.46,1.46,0,1,1-1.45-1.45A1.45,1.45,0,0,1,624.94,167.77Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M562.88,139.31a1.46,1.46,0,1,1-1.46-1.45A1.46,1.46,0,0,1,562.88,139.31Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M372,86.87a1.46,1.46,0,1,1-1.45-1.45A1.45,1.45,0,0,1,372,86.87Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">&quot;473.23&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;34.67&quot;</span> <span class="attr">r</span>=<span class="string">&quot;1.46&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M398.74,28.36a1.46,1.46,0,1,1-1.46-1.46A1.46,1.46,0,0,1,398.74,28.36Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M448.85,192.73a1.46,1.46,0,1,1-1.45-1.46A1.46,1.46,0,0,1,448.85,192.73Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">&quot;616.73&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;121.26&quot;</span> <span class="attr">r</span>=<span class="string">&quot;1.46&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">&quot;559.97&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;25.73&quot;</span> <span class="attr">r</span>=<span class="string">&quot;1.46&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">&quot;679.95&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;161.38&quot;</span> <span class="attr">r</span>=<span class="string">&quot;1.46&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">&quot;558.51&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;229.54&quot;</span> <span class="attr">r</span>=<span class="string">&quot;1.46&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M692.7,250.2a1.46,1.46,0,1,1-1.45-1.46A1.46,1.46,0,0,1,692.7,250.2Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">&quot;616.73&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;201.91&quot;</span> <span class="attr">r</span>=<span class="string">&quot;1.46&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">&quot;544.82&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;223.87&quot;</span> <span class="attr">r</span>=<span class="string">&quot;1.46&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M450.53,73.81a1.46,1.46,0,1,1-1.45-1.46A1.45,1.45,0,0,1,450.53,73.81Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M445.94,201.63a1.46,1.46,0,1,1-1.46-1.45A1.46,1.46,0,0,1,445.94,201.63Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M186.43,237.31a1,1,0,1,1-1-1A1,1,0,0,1,186.43,237.31Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M291.32,199.17a1,1,0,1,1-1-1A1,1,0,0,1,291.32,199.17Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M153.05,248.24a1.46,1.46,0,1,1-1.46-1.46A1.45,1.45,0,0,1,153.05,248.24Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M114,221.87a1.46,1.46,0,1,1-1.45-1.46A1.45,1.45,0,0,1,114,221.87Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M154.88,151.93a1.46,1.46,0,1,1-1.45-1.45A1.45,1.45,0,0,1,154.88,151.93Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M199.67,279.29a1.46,1.46,0,1,1-1.46-1.46A1.47,1.47,0,0,1,199.67,279.29Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M54.91,249.69a1.46,1.46,0,1,1-1.45-1.45A1.45,1.45,0,0,1,54.91,249.69Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">&quot;166.68&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;270.45&quot;</span> <span class="attr">r</span>=<span class="string">&quot;1.46&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M166.68,191.27a1.46,1.46,0,1,1-1.46-1.45A1.46,1.46,0,0,1,166.68,191.27Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M185.88,123.67a1.46,1.46,0,1,1-1.45-1.45A1.45,1.45,0,0,1,185.88,123.67Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">&quot;671.95&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;113.82&quot;</span> <span class="attr">r</span>=<span class="string">&quot;1.46&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M631.32,65.4a1.46,1.46,0,1,1-1.46-1.46A1.47,1.47,0,0,1,631.32,65.4Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M30,149a1.46,1.46,0,1,1-1.46-1.46A1.46,1.46,0,0,1,30,149Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">&quot;104.05&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;109.88&quot;</span> <span class="attr">r</span>=<span class="string">&quot;1.46&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M108.42,183a1.46,1.46,0,1,1-1.46-1.45A1.46,1.46,0,0,1,108.42,183Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M76.88,174.14a1.46,1.46,0,1,1-1.45-1.45A1.45,1.45,0,0,1,76.88,174.14Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M76.88,78.7a1.46,1.46,0,1,1-1.45-1.46A1.45,1.45,0,0,1,76.88,78.7Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M239,207.33a1.46,1.46,0,1,1-1.45-1.46A1.45,1.45,0,0,1,239,207.33Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M598,191.27a1.46,1.46,0,1,1-1.46-1.45A1.46,1.46,0,0,1,598,191.27Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M509.84,86.87a1.46,1.46,0,1,1-1.46-1.45A1.46,1.46,0,0,1,509.84,86.87Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M285.57,238.38a1.46,1.46,0,1,1-1.46-1.46A1.46,1.46,0,0,1,285.57,238.38Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">&quot;252.58&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;229.54&quot;</span> <span class="attr">r</span>=<span class="string">&quot;1.46&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M222.07,80.16a1.46,1.46,0,1,1-1.45-1.46A1.45,1.45,0,0,1,222.07,80.16Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M251.13,29.82a1.46,1.46,0,1,1-1.46-1.46A1.46,1.46,0,0,1,251.13,29.82Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M190.54,71.32a1.46,1.46,0,1,1-1.45-1.46A1.45,1.45,0,0,1,190.54,71.32Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">&quot;351.16&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;104.5&quot;</span> <span class="attr">r</span>=<span class="string">&quot;1.46&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M294.24,80.16a1.46,1.46,0,1,1-1.46-1.46A1.46,1.46,0,0,1,294.24,80.16Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M367.7,126.71a1.46,1.46,0,1,1-1.46-1.45A1.46,1.46,0,0,1,367.7,126.71Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M358.52,77.06a1.46,1.46,0,1,1-1.46-1.46A1.47,1.47,0,0,1,358.52,77.06Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M49,126.59a1.46,1.46,0,1,1-1.45-1.46A1.45,1.45,0,0,1,49,126.59Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M22.81,37.74a1.46,1.46,0,1,1-1.46-1.46A1.46,1.46,0,0,1,22.81,37.74Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M150.15,74.81a1,1,0,1,1-1-1A1,1,0,0,1,150.15,74.81Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M89.47,27.36a1,1,0,1,1-1-1A1,1,0,0,1,89.47,27.36Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">&quot;32.33&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;82.62&quot;</span> <span class="attr">r</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M100.29,143.93a1,1,0,0,1-2,0,1,1,0,0,1,2,0Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">&quot;48.8&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;202.91&quot;</span> <span class="attr">r</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M225.77,129.05a1,1,0,1,1-1-1A1,1,0,0,1,225.77,129.05Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M283.66,83.62a1,1,0,1,1-1-1A1,1,0,0,1,283.66,83.62Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">&quot;474.23&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;222.87&quot;</span> <span class="attr">r</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">&quot;663.41&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;189.82&quot;</span> <span class="attr">r</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M599.68,251.66a1,1,0,1,1-1-1A1,1,0,0,1,599.68,251.66Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">&quot;349.25&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;41.39&quot;</span> <span class="attr">r</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">&quot;557.51&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;100.02&quot;</span> <span class="attr">r</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M551.87,115.27a1,1,0,1,1-1-1A1,1,0,0,1,551.87,115.27Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M160.47,43.68A1.46,1.46,0,1,1,159,42.22,1.45,1.45,0,0,1,160.47,43.68Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">&quot;122.39&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;60.39&quot;</span> <span class="attr">r</span>=<span class="string">&quot;1.46&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">g</span> <span class="attr">id</span>=<span class="string">&quot;hills3&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">g</span> <span class="attr">id</span>=<span class="string">&quot;info2&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#fff&quot;</span> <span class="attr">stroke</span>=<span class="string">&quot;#231f20&quot;</span> <span class="attr">stroke-miterlimit</span>=<span class="string">&quot;10&quot;</span> <span class="attr">stroke-width</span>=<span class="string">&quot;0.5&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">polygon</span> <span class="attr">id</span>=<span class="string">&quot;arrow2&quot;</span> <span class="attr">points</span>=<span class="string">&quot;395.54 482.2 393.42 484.32 375.21 466.11 357 484.32 354.88 482.2 375.21 461.87 395.54 482.2&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">&quot;text2&quot;</span> <span class="attr">d</span>=<span class="string">&quot;M271.83,526.25c8.43,7,22.44-4.5,8.12-9.81-17.84-5.29-3.76-24,9-16.3l-1.15,3.4c-8.64-5.65-19.35,5-5.78,9.51,18.51,6.4,2.17,25.56-11.29,16.69Zm40.77,4.2c-23.79,9.74-23.83-30.49.1-21.56l-1,3.25c-17.45-7.49-16.83,23,.14,15.16Zm4.92-15.06c0-2.72,0-5.06-.19-7.21H321l.15,4.54h.19c1.18-3.51,4.33-5.65,7.6-4.93v4c-10.05-1.87-6.74,14-7.27,19.55h-4.16Zm36.09,4.16c.06,16.67-23,15.92-22.61.39C330.42,503.76,354.25,503.82,353.61,519.55Zm-18.35.24c-.33,11.61,14.38,11.67,14.05-.09C349.93,508.2,334.68,508,335.26,519.79Zm23.66-22.42h4.2v33.94h-4.2Zm11.28,0h4.2v33.94h-4.2Zm21.55,2.15c10.47-4.16,28.78,5.43,13.68,14.44v.1c16.82,8.34-.17,21.3-13.68,17.16Zm4.16,13.2c14.51,2.35,13.77-13.75,0-10.38Zm0,15.44c15.35,3,15.91-14.63,0-12.29Zm34.42,3.15L430,528.4h-.15c-14.13,12.87-22.31-13.84-.24-11.81,1.43-5.45-7.12-7.5-11.28-4.11l-.95-2.78c19.12-8.74,16,9.8,16.77,21.61Zm-.62-11.8c-7.46-1.94-14.57,7.36-5.83,9.22C429.55,528.62,430.05,523.62,429.71,519.51Zm27.34,10.94c-23.79,9.74-23.83-30.49.1-21.56l-1,3.25c-17.45-7.49-16.83,23,.14,15.16Zm9.08-11.66h.1c1.28-1.88,7.29-8.74,8.84-10.61h5.07l-8.94,9.51,10.18,13.62h-5.11l-8-11.09-2.15,2.39v8.7H462V497.37h4.16Z&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">polygon</span> <span class="attr">id</span>=<span class="string">&quot;h3-5&quot;</span> <span class="attr">points</span>=<span class="string">&quot;756.31 330.55 750.57 327.01 742.42 331.08 719.12 317.36 705.87 311.91 695.11 307.32 688.01 314.24 675.69 336.9 665.32 346.76 657.77 353.08 641.17 353.46 633.52 362.58 626.63 373.11 618.53 378.94 596.8 411.28 588.95 404.93 578.86 406.48 539.9 443.36 472 493.8 556 490.91 756.14 490.91 756.31 330.55&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;url(#linear-gradient)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;mix-blend-mode: multiply&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">&quot;h3-4&quot;</span> <span class="attr">d</span>=<span class="string">&quot;M453.13,471.05c-20-.31-48.49-14.38-68.14-10.05-13.54-4.69-34.51-19.93-48.25-23.77-4.06-5.13-13.21-13.57-18.27-16.88L297,425.44c-25.78-9-71.66-48.83-92.2-70.78-23.25,8-24.38,17.46-52.47,13.47L125.84,344.9c-7.26,4.7-21.45,3.12-28.92.05C86.58,332.65,59.21,300,46.18,293.73L19.53,333.39l-21.39-3.8V490.91l204.07-2.72,2.2,2.72H456.94Z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;url(#linear-gradient-2)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;mix-blend-mode: multiply&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">&quot;h3-3&quot;</span> <span class="attr">d</span>=<span class="string">&quot;M369.27,490.91h71.81l-20.37-23.39c-12.47-1.8-31-7.32-43-11.44-4.42,2-12-2.38-15.74-5.28-24-16.39-52.39-28.74-75.56-47.77L250.16,416,237,405.49l-44.35,23c-4.14-6-13.7-11.83-19.85-12.43-29.3,7.48-89.69,52.2-115.13,72.82C114.24,491.53,309.43,490.93,369.27,490.91Z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;url(#linear-gradient-3)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;mix-blend-mode: multiply&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">&quot;h3-2&quot;</span> <span class="attr">d</span>=<span class="string">&quot;M756.14,490.91l-8-59.58-53-.18c-15.09-2.44-50.94-7.67-64.22,4.91-19.09-2.89-49.68-19.29-69.12-17.53-5.3-5.72-16.93-13.13-23.69-14.8l-26.87,20.38c-26.86,1.93-30.42-8.09-52.55-17.23l-12.86,14.87c-8.76-4.86-25.28-12.15-33.64-18.06-22.67,22.21-39,46.13-70,32.86-19.43,17.89-46.64,30.57-69.37,40.53-20.6-4.23-50.78,9.69-71.71,9.85l-.81,4Z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;url(#linear-gradient-4)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;mix-blend-mode: multiply&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">&quot;h3-1&quot;</span> <span class="attr">d</span>=<span class="string">&quot;M754.08,270.8c-9.14,15.25-28.22,45.59-38,59.95-4.61,3.06-20.35,7.4-25.57,8.91L643.7,401c-25.83,9.4-65.64,40.62-89.22,55.62l-7.13-3c-18.15,15-47.22,22.84-68.46,20.49-9.82-6.6-45.32-31-54.87-36-26.29,17.87-45.79,32-76.1,17.57a96.12,96.12,0,0,0-21.71,12.72c-6.43.64-19,3.94-25.11,6.51-13.74-7.23-27.75-13.32-31.55-9.38L232.73,428l-8.08,6.7c-24.6-11.43-37.11-14.88-54.06-43.59l-8.4,4.76c-26.49-10.44-21.1-21.55-39-31.82-10.53,4.63-25.1,12-37.85,19.27C71,369.57,53.3,344.41,43.42,325c-16.37-6.4-30.9-30.44-40.59-47.58l-4.69,2v211.5H756.31V271.05Z&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- SCENE 1 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">g</span> <span class="attr">id</span>=<span class="string">&quot;scene1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">g</span> <span class="attr">id</span>=<span class="string">&quot;hills1&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">&quot;h1-9&quot;</span> <span class="attr">d</span>=<span class="string">&quot;M696.36,409H75V335.47c10.19-.52,20.5-.36,30.05-3.65,8.11-2.8,15.84-8.49,23.78-11.33s18.18,1.84,25.36-4.85C165,305.56,172,289.79,186.71,292.8c6.21,1.27,12.09,3.66,18.43.84,6-2.65,9.73-9.46,14.69-13.54,2.87-2.35,6.42-3.2,9.35-5.49,1.65-1.28,5.45-6.37,7-6.92,7.94-2.93,10.34,2.69,18.56-3.47,6.45-4.84,8.52-8.21,15.45-5,5,2.35,11.89,10.09,16,15.37C294.9,286,302,297.77,312.71,307.53c11.62,10.63,21.59,9.37,34.67,5.83,16.12-4.37,18.32,9.06,32.24,15.28,7.45,3.32,13.23-1.7,19.6-2.08,3.64-.22,5.85,2.12,9.37,1.82,3.12-.27,4.08-4.44,8.33-3,7.32,12.31,15.75,20,28.21,20.59,14.32.7,27.12.76,39.73-4.94A145.24,145.24,0,0,0,502.11,332c8.71-5.36,11.22-2.82,19.35,1.5,11.66,6.21,25.31,1.08,36.56,9.18,5.53,4,8.36,12.23,14.64,14.79,4.86,2,15.59.38,20.4-1.18,13.47-4.38,21.52-16.59,36.56-17.33,13.57-.67,25.19-4.17,39.11-2.31,10.91,1.46,18.72-.1,27.63-2.61Z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;url(#grad1)&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">&quot;h1-8&quot;</span> <span class="attr">d</span>=<span class="string">&quot;M750,500V212.49a19.09,19.09,0,0,0-11.54,8.17c-2.21,3.35-4.39,7.9-7.92,7.69-1.44-.08-2.78-1-4.23-1.08-5.12-.2-7.87,10.11-12.84,8.66a2.7,2.7,0,0,0-2.57-3.34c-1.49.1-2.72,1.38-3.77,2.67a46.94,46.94,0,0,0-7.7,14c-1.76-6-8.53-7.93-13.43-5.51s-8.31,7.76-11.48,12.87l-17.31,27.92c-4.54,7.33-11.47,15.57-18.52,12.15-3.38-1.64-5.76-5.76-9.32-6.73s-7.55,1.64-11.18.48c-5.45-1.76-8.37-11.36-14-10.4-3.13.54-5.93,4.55-8.87,3.14-1.52-.73-2.44-2.76-4-3.36s-3.32.52-5,1.13c-7.4,2.73-14.16-5.41-21.27-9.08-12.35-6.38-26.85,1.31-36.59,12.45-3.1,3.54-6,7.5-9.78,9.89-3.22,2-6.88,2.8-10.48,3.54L480,303.58c-15,3.07-30.14,6.2-44.07,13.54-6.63,3.48-13,7.91-19.94,10.16-10.83,3.5-22.26,1.5-33.47,1.18-9.18-.27-102.2,122.09-140,171.54Z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;url(#grad2)&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">&quot;h1-7&quot;</span> <span class="attr">d</span>=<span class="string">&quot;M749.79,500,750,239.12c-.58-.62-1.15-1.25-1.74-1.87-5.67-5.95-12.57-12.05-20.78-11.77s-15.44,7.12-23.74,6.87c-7.55-.23-14.09-6.33-21.65-6.11-5.79.17-10.74,4-15.29,7.6C639.78,255.2,328.89,423.17,184.52,500Z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;url(#grad3)&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">&quot;h1-6&quot;</span> <span class="attr">d</span>=<span class="string">&quot;M0,410.67V493H412.06c-35.38-101.16-98.42-78-131.23-117.2-32.36-10.29-64.31-17.76-94-31.31a5.83,5.83,0,0,1-.41-1,7.21,7.21,0,0,1-3.62.65c-.21-1.41-.42-2.83-.64-4.24-2.79.75-.89,3.32-3.9,3.95l-1.37-1.1a9.26,9.26,0,0,0-2.34,1l.12,0-.14,0,0,0-.92-.27.07.15a23.67,23.67,0,0,1-6.55-2.05l6.48,1.9c-1.55-3.22,1.78-7.31-3.91-7.15-.21-1.94-.43-3.88-.64-5.82a11.45,11.45,0,0,0-3.47,3.65l-.93-1.37c-1.28,1.74-1.15,5-4.08,2.84l-1,.27c-.33-2.48-.76-5.65-4-4.32a8.17,8.17,0,0,0-.7-4.34l-4.11,3.91c-.6-.27-1.21-.5-1.82-.74a12.42,12.42,0,0,1-1.26-2.53l-1.37,0a7.91,7.91,0,0,0-1-4.51,18.65,18.65,0,0,0-2.83,1.73l1.17-7.63c-3.59.35-3.37,4.37-5.21,6.67-.05-1.15-.09-2.3-.14-3.45-1.34,1.72-1.11,5.49-4.13,4.87v-3.4c-2.61,2.44-.21,7.7-5.37,5.82a7.46,7.46,0,0,0,.48-5.37l-2,4.83c-6.31-4.21-9.12-12.77-16.39-16.25-.1-.77-.21-1.53-.31-2.3a5.08,5.08,0,0,0-.88,1.59,35.35,35.35,0,0,0-8.44-3.48c-.71-1.26-2.37-2.1-3.57-1.32q-.85-7.06-1.7-14.12a46.56,46.56,0,0,0-2.74,10.63l-1.17-3a15.46,15.46,0,0,0-.45,6.63c-1.5,0-3,.08-4.53.08-.53-2.47-.42-9.91-4.23-5.49A44.26,44.26,0,0,0,81.32,290l-4,13.74a44,44,0,0,1-3-8.85l-1.35.55a39.63,39.63,0,0,0-1.85-10.68,47.8,47.8,0,0,0-2.47,5.58l-.24-19.43c-4.18,4.6-2.3,13-3.9,18.92-.26-2.83-.51-5.66-.77-8.49-.51,4.12-.73,8.28-1.38,12.38-.64-.11-1.28-.19-1.93-.26L60,286.83a32.55,32.55,0,0,0-.91,6.45c-1.11-.09-2.24-.15-3.37-.19-.12-1-.26-1.94-.45-2.9-.08,1-.16,1.91-.25,2.87-19.76-2.69-34.56-16.84-55-21.54Z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;url(#grad4)&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">&quot;h1-5&quot;</span> <span class="attr">d</span>=<span class="string">&quot;M300.32,425.63c-7.78-5.38-17.22-7.93-25.57-12.43-14.59-7.87-25.69-21.55-39.79-29.71l-.42-3.55a7,7,0,0,0-1.09,2.71,51.13,51.13,0,0,0-7.74-3.43,7.19,7.19,0,0,0-.31-1.19c-.62-1.64-2.43-2.82-3.72-1.84q-.84-8.26-1.69-16.51a62.62,62.62,0,0,0-2.73,12.43l-1.17-3.48a19.73,19.73,0,0,0-.56,6.46c.05.58.12,1.19.13,1.79-1.51-.21-3-.39-4.55-.53q-.42-3-.82-6a2.73,2.73,0,0,0-.59-1.63c-.88-.85-2.11.31-2.8,1.37a60,60,0,0,0-1.47-12.2q-2,8-4,16.06a58.3,58.3,0,0,1-3-10.35l-1.34.65a53.76,53.76,0,0,0-1.85-12.48,59.91,59.91,0,0,0-2.46,6.52l-.24-22.71c-1.52.77-1.93,3-2.12,5l-1.77,17.15-.78-9.93-1.2,13.51c-.13,1.39-.82,3.26-2,2.83-.2-3.29-.41-6.58-.61-9.86a44.38,44.38,0,0,0-.86,12.34,18.5,18.5,0,0,1-.07,5.66,5.13,5.13,0,0,1-.41,1.11c-.92-.17-1.85-.33-2.77-.53a62.45,62.45,0,0,0-.61-14.65q-.52,7.14-1.06,14.28l-1.91-.44a14.36,14.36,0,0,0-1.77-3.85c-.07,1.13-.17,2.25-.28,3.38-2.83-.7-5.64-1.49-8.44-2.33a46.58,46.58,0,0,1-.7-7.73c0-2.21.08-4.65-1.13-6.35q-1.16,5.75-2.32,11.5l-2.94-5.22a10.84,10.84,0,0,1-1.43,2.94,70.76,70.76,0,0,1-2.06-19.48,5.51,5.51,0,0,0-.28-2.47c-.34-.74-1.22-1.21-1.81-.72a2.32,2.32,0,0,0-.58,1.35c-.62,3.45-.58,7.51-2.89,9.76a71.71,71.71,0,0,0-2.09-7.57c-2.17.41-.33,6-2.51,6.33a2.8,2.8,0,0,1-1.22-.29c-1.88-.61-4.05.95-4.43,3.18A36.92,36.92,0,0,0,138,349c-1,1-1.37,2.63-1.93,4.05s-1.61,2.84-2.94,2.73c-1.18-.09-2-1.43-2.29-2.79a16.05,16.05,0,0,1,.11-4.15,24,24,0,0,0-1.22-9.68q-1.32,6.12-2.65,12.23a2.46,2.46,0,0,1-.84,1.52l-1-.49a3.24,3.24,0,0,1-.19-.52q-.7-2.39-1.39-4.77a4.89,4.89,0,0,0-3.28,2.8q-2.15-1.11-4.28-2.25c-.4-1.45-.1-3.37-.22-5a14.5,14.5,0,0,0-1.82-5.32,28.44,28.44,0,0,1-1.43,8.47c-11.66-6.3-23.87-12.92-37.13-12.57C47.46,334,28.3,364.93,1,369.38V493H340.58C329.05,468.15,305.9,429.49,300.32,425.63Z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;url(#grad5)&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">&quot;h1-4&quot;</span> <span class="attr">d</span>=<span class="string">&quot;M751,500V432.05c-32.59-68.73-53.56-58.59-101.56-92.59-.14-1-.27-2-.41-3a5.36,5.36,0,0,0-1.09,2.31,56.55,56.55,0,0,0-7.75-2.93c-.19-1.82-2.36-3.63-4-2.59q-.85-7-1.7-14.08a46.81,46.81,0,0,0-2.73,10.6l-1.16-3a16.62,16.62,0,0,0-.43,7.05c-1.51-.19-3-.33-4.56-.46-.51-2.46-.45-9.74-4.2-5.36a44.16,44.16,0,0,0-1.47-10.41q-2,6.86-3.95,13.71a44,44,0,0,1-3-8.83l-1.35.55a39.72,39.72,0,0,0-1.84-10.65,45.84,45.84,0,0,0-2.46,5.56l-.25-19.38c-4.16,4.58-2.3,13-3.88,18.87l-.78-8.47c-1.32,4,.82,12.1-3.16,13.94-.21-2.81-.41-5.61-.62-8.41-2,5.29.27,11.14-1.33,16.31-.93-.15-1.85-.29-2.77-.45a45.62,45.62,0,0,0-.61-12.51q-.54,6.09-1.06,12.18l-1.91-.37a11.76,11.76,0,0,0-1.77-3.29c-.07,1-.17,1.93-.28,2.89-2.83-.6-5.65-1.27-8.44-2-1.27-3.84.32-8.58-1.83-12l-2.33,9.81-2.94-4.46a8.34,8.34,0,0,1-1.43,2.51c-3.72-8.44.44-31.59-7.61-9.86a56,56,0,0,0-2.1-6.46c-2.55,9.5-4.65,1.59-8.16,7.87A27,27,0,0,0,552.5,310c-7.5,13.85-6.56-1.79-8.28-8.39-1.32,3.76-1.37,8.43-3.48,11.73l-1-.42c-.6-1.47-1-3-1.58-4.51a4.75,4.75,0,0,0-3.27,2.39l-4.28-1.92c-.37-2.95,0-6.25-2-8.82a21.06,21.06,0,0,1-1.44,7.23C477.88,273,440.32,336.09,390,328l-.24-2.24a17.27,17.27,0,0,0-.38,2.34c-.65.1-1.29.21-1.93.33a12.8,12.8,0,0,0-.56-4.29c-.12,1.36-.25,2.72-.37,4.08-2.29-.67-1.19-4.81-1.93-6.76-.15,1.37-.31,2.74-.47,4.1-.93-2.87.08-7.13-2.36-9.15l-.15,9.4a22.45,22.45,0,0,0-1.5-2.7,16.09,16.09,0,0,0-1.12,5.17l-.82-.27a18.83,18.83,0,0,1-1.62,3.93l-.28.12q-1.16-3.21-2.32-6.41a17.14,17.14,0,0,0-.89,5.05c-2.66-2.43-2.31,2.71-2.89,4.27l-.58-.55c-2.76,1.71-1.29-3-2.12-4.32l-.71,1.44a18.49,18.49,0,0,0-1.66-5.14c-.34,2.28-.68,4.55-1,6.83-4.21-.74-1.58,5.19-3,7.44l-.64.42a6.89,6.89,0,0,0-1.31-1.72l-.93,1c-1.73-1.42-.31-4.09-1.9-5.61l-.84,4.95a3.65,3.65,0,0,1-2.09-1.59c-.19.78-1.24,5.51-2.26,9.24l-8.66,5.85a65.51,65.51,0,0,1-1.3-8.18c0,2.68-2,7.92-2.88,11l-3.06,2.07c-1-3.79-2.06-7.14-2.86-7.28-.47,1.36-1.07,8.89-1.53,10.25l-1.7,1.15c-.87-4.35-1.81-9.29-2.35-11.4-.83,2-.58,8.93-.31,13.19l-5.71,3.87c-.65-2.27-1.49-5.21-2.16-5.78-.66,1.48-.89,5.65-1.27,7.23-4.69-4-3.69,5.18-7.43-5.62a53.47,53.47,0,0,0-2.09,6.46c-8.06-21.78-3.89,1.47-7.62,9.86a8.34,8.34,0,0,1-1.43-2.51L295.79,382l-2.32-9.81c-2.32,4.54-.48,10.52-2.67,15.35-12.35,7.5-87.61,76.23-133.54,112.42Z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;url(#grad6)&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">g</span> <span class="attr">id</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">polygon</span> <span class="attr">id</span>=<span class="string">&quot;arrow&quot;</span> <span class="attr">points</span>=<span class="string">&quot;353.93 368.91 356.06 366.79 374.26 385 392.47 366.79 394.59 368.91 374.26 389.24 353.93 368.91&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#fff&quot;</span> <span class="attr">stroke</span>=<span class="string">&quot;#231f20&quot;</span> <span class="attr">stroke-miterlimit</span>=<span class="string">&quot;10&quot;</span> <span class="attr">stroke-width</span>=<span class="string">&quot;0.5&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">&quot;text&quot;</span> <span class="attr">d</span>=<span class="string">&quot;M261.62,345.74c8.46,7,22.53-4.51,8.16-9.84-17.91-5.31-3.78-24.1,9.06-16.36L277.69,323c-8.32-5.73-19.5,5.41-5.8,9.55,18.58,6.42,2.18,25.66-11.33,16.74ZM302.54,350c-23.47,10.27-23.65-31.11.1-21.64l-1,3.27c-17.3-7.88-16.61,23.5.14,15.21Zm4.94-15.11c0-2.74,0-5.09-.19-7.25H311l.14,4.56h.19c1.19-3.52,4.35-5.66,7.63-4.94v4c-10.08-1.88-6.76,14-7.29,19.63h-4.18ZM343.71,339c.06,16.73-23.06,16-22.7.39C320.43,323.17,344.34,323.23,343.71,339Zm-18.43.24c-.33,11.66,14.44,11.71,14.11-.09C340.37,327.86,324.33,327.6,325.28,339.26ZM349,316.76h4.22v34.07H349Zm11.32,0h4.23v34.07h-4.23ZM382,318.92c35.43-9.2,34.89,39.64,0,31.81Zm4.18,28.6c23.33,5.69,24.08-31.95,0-25.53ZM435,339c.06,16.73-23.06,16-22.7.39C411.73,323.17,435.64,323.23,435,339Zm-18.43.24c-.33,11.66,14.43,11.71,14.11-.09C431.67,327.86,415.63,327.6,416.58,339.26Zm25.09-11.66c1.21,4.84,3.94,14.5,4.8,19.2h.15c1-4.69,4.38-14.43,5.85-19.2H456c1.44,4.8,4.69,14.59,5.66,19.2h.15c.7-4.59,3.81-14.45,5.08-19.2h4.18l-7.49,23.23h-3.84c-1.53-5-4.6-13.66-5.61-18.72h-.1c-1,5.17-4.22,13.71-5.85,18.72h-3.84l-7-23.23Zm33.63,6.29c0-2.4,0-4.37-.19-6.29h3.75l.24,3.84h.09c14.6-14.27,17.39,7,15.88,19.39h-4.22c-1-5.08,3.26-20.32-5.37-20.25-9.13,0-5.12,15-6,20.25H475.3Z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#fff&quot;</span> <span class="attr">stroke</span>=<span class="string">&quot;#231f20&quot;</span> <span class="attr">stroke-miterlimit</span>=<span class="string">&quot;10&quot;</span> <span class="attr">stroke-width</span>=<span class="string">&quot;0.5&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">&quot;bird&quot;</span> <span class="attr">style</span>=<span class="string">&quot;opacity: 0;&quot;</span> <span class="attr">d</span>=<span class="string">&quot;M110.61,428.6c-2.5,2.06-13.64-.79-17.86.84,0,0,1-2.72,2-2,0,0-.12-1.36-1.07-1.21a3.73,3.73,0,0,0-3.88.79s-1.65-.58-2.32-.24c0,0-5.63-5.13-9.77-9.69S65.91,410,64,403.62c0,0-.81,2.45,2.63,6.06,0,0-5.81-5-6.19-7.68a10.73,10.73,0,0,0,4,7.44c-1.93-1.61-3.54-3.69-5.54-5.23l0-.06a.28.28,0,0,0,0,.06c0,1.75,2,3.92,3.22,5.57-1.37,0-4.53-5.34-4.08-3.26a2.1,2.1,0,0,1-.13-.26,13.7,13.7,0,0,0,2.74,4.58c-.53-.07-1.69-1.6-1.86-.88a1.19,1.19,0,0,1-.09-.15c-.16,0,1.38,4.78,4.17,6.74-3-.23,4,4.44,5.37,4.34.4,1.4,3.53,3.2,3.86,4.5,2.33,2.76,4.63,7.07,8.58,8,.46,3.8-10.7,6-4.75,7.88a2.43,2.43,0,0,0,2.36,1.48c.2,1,1.59,1.14,2.38.73.3.49,1.61,2,2,1.31a29.91,29.91,0,0,1,2.58-7.4c.48-.2.89-.53,1.37-.71-.47,1.42,2.28-.32,3-.38a50.42,50.42,0,0,0,11-1.25c.85.59,2.52,1.46,2.37-.34,1.23,1.09,4.19,1,1.77-1a3.33,3.33,0,0,0,2.63,0,6.86,6.86,0,0,1-1.71-1.15c1.88.38,6.14-.19,2.11-1.38A3.77,3.77,0,0,0,110.61,428.6Z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#16122b&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">&quot;h1-3&quot;</span> <span class="attr">d</span>=<span class="string">&quot;M599.72,500V408.89c-33.51-10.65-62.1-50.46-98.56-20.79a25.07,25.07,0,0,1-1.27-7.47c-1.85,2.68-1.48,6.14-1.8,9.12-1.25.67-2.51,1.33-3.77,2a4.34,4.34,0,0,0-2.9-2.48c-.47,1.55-.86,3.14-1.39,4.67l-.86.44c-1.9-3.54-1.9-8.23-3.08-12.14-1.52,6.24-.48,23.06-7.3,8.68a32,32,0,0,0-1.39,4.78c-3.06-6.27-5.18,1.34-7.2-8.14a62.77,62.77,0,0,0-1.85,6.68c-7.05-22.33-3.46,2-6.72,10.2a9,9,0,0,1-1.26-2.6q-1.31,2.31-2.6,4.62-1-5.08-2-10.15c-1.91,3.59-.5,8.47-1.62,12.42-2.47.74-5,1.44-7.45,2.06-.1-1-.18-2-.24-3a12.6,12.6,0,0,0-1.56,3.41l-1.69.38q-.46-6.3-.94-12.6a54.83,54.83,0,0,0-.53,12.93c-.82.17-1.64.31-2.45.47-1.42-5.4.55-11.39-1.18-16.87l-.54,8.7c-3.64-2.23-1.56-10.31-2.79-14.41l-.69,8.75c-1.43-6.09.32-14.52-3.43-19.51l-.21,20a53.6,53.6,0,0,0-2.18-5.75,47.85,47.85,0,0,0-1.62,11l-1.19-.57a51.53,51.53,0,0,1-2.64,9.14q-1.74-7.1-3.49-14.18A53.84,53.84,0,0,0,418,409.5c-3.5-4.54-3.22,3.32-3.7,5.54-1.35.13-2.69.28-4,.47a20.24,20.24,0,0,0-.39-7.28l-1,3.07a55.47,55.47,0,0,0-2.42-11q-.74,7.29-1.49,14.57c-1.51-1.13-3.44,1-3.55,2.68a46,46,0,0,0-6.84,3,6.2,6.2,0,0,0-1-2.39c-.12,1-.24,2.09-.37,3.13C358.7,452,331.33,448.79,309.12,500Z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;url(#grad7)&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">&quot;h1-2&quot;</span> <span class="attr">d</span>=<span class="string">&quot;M458.76,482c5.16-5-11.74.58,1.39-8.14,3.06-4.4-10.55.51-5.45-5.72,1.87-2.26-3.86-2.07-1.53-4.31,2.18-3.68-5.58-.57-5.2-4.1.27-2.94,5.63-1.63,5.89-4.53-1.27-1.36-8.66-.73-3.81-4.29.78-.64.63-1.93-.49-1.76-11.28.92,7.41-5.34-5.09-5-.07-7.42-4-8.29-4,.43-2.15-.06-6.11.48-2.34,2.77,6.88,4.11-6.21-.91-.09,6.26-9.68-.45,2.22,4.05-1.66,6.62-6.42-.72,1,3.05-.35,5-2.22-.11-9.69-2.36-6.67,2.14,1.41,1.08,5.44,1.67,4.16,4.19-14,.35-1.69-3.29-6.22-5.16-9.47.18,3.15-4.84,1.85-7.73-9.62.27-4.67-.91-7.3-8.13,2.83-4.76-13.74.93.69-8.63-5.13-2.29-6.41.32-3.61-5.93-11.85.81,5.66-5.38-5.78-5.15.15-7.09-4.22-7.89-4,.44-2.15-.07-6.11.47-2.34,2.76,6.88,4.11-6.2-.91-.09,6.27-9.68-.46,2.23,4-1.66,6.61-6.41-.72,1,3.06-.35,5-14.1-1.58-4.48,1.08-2.41,6.18-.74,2-7.34-1-3.91,2.67,6.41,3.38-1.72,4.42-4.8,2.38,1.12-4.51-12.53.43-.71-6.68-12.2-.93,6.29-5-5.76-4.73-5.54-2.52,8.3-3.7-.69-5.23-5.84-1.94,4.42-3.47.4-4.84-1.22.31-3.76-.16-2.87-1.84,6.91-2.07-.72-1.42-.68-3.93,4.92-1.72-.21-1.63-.26-3.51,4.44,1.35-1.94-14-3.67-3.17-.8,2.29-5.49.91-1.55,3.84,2.52,3.94-2.5,1.25-3.25,3,4.7,6-1.57,2.19-1.09,5.78,3.53,4,1.11,3.15-2.25,3.33,2.61,4,2.08,8.22-3.68,5.72-1.62-1.67,4.32-3.9.4-4.44-10.78.43,6.22-6.38.89-8-7.78,1.15-3.82-.52-6.33-7.88,2.17-3.68-5.59-.58-5.2-4.1.31-2.7,4.62-1.82,5.73-3.86.94-2.65-9.36-.72-3.66-5,2.7-3.64-6.79.55-3.65-3.67,5-2,1.56-3.17-1.92-3.12-.54-.27.63-8.46-3.55-4.92,1.75,8.9-7.66,3.56-2.78,8.13,6.88,4.11-6.21-.92-.09,6.26-9.68-.45,2.22,4-1.66,6.62-6.42-.73,1,3-.35,5-14.11-1.58-4.48,1.08-2.41,6.19-.82,1.56-3.05.34-4.45.57-1.81,1.88,8.35,6.13-.87,5.54,7.65-5.69-10,.57-.46-8.75-5.45-1.75-6.32-1.71-1.64-6.16-2.69-2.14-5.64.68-2.42-5.44-2.48-.13-4.29.5-1.67-2.47.2-2.56-4.21-.12-.81-4.3-4-.95-2.86-.66-1.28-3.78-4.36-.68-3.26-9.29-5.9-.45-1.69.42-.32,2,.9,1.53-.32,1.21-3.28,1.72-.2,2.6-.13,1.72-5.33,1.7-.51,2.92.67,1.25-1.22,1.6-2.13,1.37-3,1,4.64,2.15.3,3.6-7,1.29,3.64,2-.51,3.87-9-.18,4.78,2.82-4.28,3.52,11,6.71-6.38.31,1.4,6.37-.76,2-6.41-1.15-5.09,1.82,2.32.84,4.11,2.25.87,3.47-4.11,1.08-2,1.74-3.25-.62-6.34.25,3.67-3.77.53-4.71-5.43,1-1.73-1.91-3.33-3.35a.71.71,0,0,1-.4-1.29c.24-2.77-7.7-.85.31-4.69.55-1.57-5.52-.43-2.15-2.93,1.59-2.15-4,.32-2.16-2.16,3-1.18.92-1.87-1.13-1.84-.32-.16.37-5-2.09-2.9,1,5.58-4.69,1.75-1.64,4.79,3.93,2.34-3.67-.41-.05,3.69-5.7-.27,1.3,2.39-1,3.9-3.78-.43.56,1.8-.21,2.95-7.14-1-3.36.55-1.4,3.6-20.82-5.42,15.55-8.49-9.78-14.34-1-4.08,4.92-5,6.1-8.35-2.57-4.75-11.79,3.63-4.62-10.39-4.74-.25-8.2,1-3.19-4.72,1-5.25-8.31.83-1.55-8.2-.43-2.27-3.52,0-4.8-.76-3-2.12,3.41-5,2.35-6.46-8.43-.81-5.66-18.62-11.26-.86-3.23.81-.61,3.74,1.71,2.91-.06,2.62-7.33,2.59-.37,5,1.16,2.72-5.59,1.51-4.85,4.07.49,1.35,2.93.41,3.88,1.5,1.26,2.37-2.34,3.06-4.07,2.61-5.69,1.95,8.86,4.1.58,6.87-12.17,1.9,6.57,4.08-1,7.41-17.71-1,8.72,6.71-6.76,5.84-6.41-2.11-7.5-2-1.94-7.31-3.15-2.61-6.72,1.08-2.86-6.42-2.94-.15-5.08.59-2-2.92.43-3.17-5.08.26-1-5.07-4.84-1.29-3.61-.46-1.52-4.47-2.94-.11-2.83-2.64-4-4.7-3-2.3-1.29,3.54-2.94,4.17-2,.5-.38,2.31,1.06,1.8,0,1.62-4.53,1.6-.23,3.08,0,2.09-6.51,1.85-.6,3.45.78,1.46-1.45,1.89-2.52,1.61-3.52,1.21,5.48,2.54.36,4.25-7.81,1.33,4.22,2.36-.61,4.58-10.59-.21,5.65,3.33-5,4.16,10.45,6.46-.72,1.82-.83,5.58,8.72,4.58-6.19.52-3.48,4.14,7.92,3.4-3.1,4.87-2.53.79-6.34-.08,3.86-3.57.78-4.68-4.16,1-2.76-2.51-3.48-4.83.07-2.93-7.44-.71.56-4.66.63-1.54-5.48-.72-2-3,1.7-2.06-4,.12-2-2.27,3-1,1-1.81-1-1.89-.31-.18.64-5-1.93-3,.74,5.62-4.78,1.51-1.89,4.7,3.79,2.53-3.64-.6-.26,3.68-5.67-.56,1.18,2.45-1.18,3.84-3.75-.62.47,1.83-.36,2.94-10.47-2.77,3.15,4.78-4.25,3.77,4.88,5.83-10.67,1.08-1.94-3.71-2.69-2.14-5.64.67-2.41-5.44-2.49-.13-4.3.5-1.68-2.47.2-2.56-4.21-.12-.8-4.3-4.11-.92-2.8-.73-1.29-3.78-2.48-.09-2.39-2.23-3.41-4-2.53-1.94-1.09,3-2.49,3.53-1.69.43-.32,2,.9,1.53-4.38,3.14,2.56,2-1.38,3.72-4.45.74,4.45,2.51-.9,3.21.38-2.33-7.66.62-4.27-3.65,1.35-1.65-2.69-1.46-1.17-3.09,1.84-2.7-4-.51-3.7-3.06.21-2.14,4.1-1.16,4.3-3.27-.91-1-6.31-.58-2.76-3.14,2-2.64-5,.37-2.65-2.68.73-.47,2.22-.65,1.93-1.71-6.38.22-1.28-6.35-5.87-4.17-1.08.91.93,3.06-.35,3.9-1.56-.05-4.45.32-1.71,2,4.85,2.92-4.53-.54-.09,4.56-7-.37,1.6,3-1.23,4.81-6.21-.48,5.52,5.54-3.69,3.19,1.39-.38,1.75-2.57-.11-2.32-10.78.43,6.22-6.38.89-8-7.78,1.12-3.8-.39-6.34-7.87,2.84-4.76-13.74.93.7-8.64-5.14-2.28-6.42.33-3.61-5.92-1.49-.19-6.09,1-3.86-2,5-2,1.56-3.17-1.92-3.12-.54-.27.63-8.46-3.55-4.92,1.74,8.81-7.58,3.61-2.78,8.12,6.88,4.11-6.21-.91-.09,6.27-9.68-.46,2.22,4-1.66,6.61-6.42-.72,1,3.05-.35,5-14.11-1.57-4.48,1.09-2.41,6.19-7.27,2.1-5-.36-1.57,5.11-2.6,3.16-9.48-3.16-9.41,2.41-10.51-4.19,11.08-4.29-4.83-8.59,9.59-12.9-5.12.44.92-11.59-2.94-.16-5.08.59-2-2.92.43-3.17-5.08.26-1-5.08-.26-1.4-2.17,0-3-.47,1.94-7.42.17-1-2.57-8.7-3-2.29-1.29,3.55-2.94,4.18-2,.49-.38,2.31,1.06,1.79,0,1.63-4.54,1.6-.23,3.08,0,2.11-6.51,1.85-.6,3.45.83,2-2,1.54-3.16,1.72.2,3.2,6.63,2.1-1.44,4.91-2.72.08-2.75-1-1.54-3.2-1.58,0-2.71.1-1.09-1.62.13-1.67-2.76-.08-.53-2.81-2.61-.69-2-.31-.84-2.48-1.63-.06-1.57-1.46-2.24-2.6-.85-1.31-2.94,4.33-1,3.31-.2.79-2.14,1.12-.12,1.7-.1,1.13-3.49,1.12-.34,1.91.44.82-.8,1-1.39.9-2,.66,3,1.4.2,2.35-4.46.71,2.3,1.38-.34,2.54-5.46-.29,2.79,2-2.8,2.3,5.29,3.29.61.84-.46,3.09,3.17,1.72-.49,1.56-2.07,1.39,5.62-3.91-10.06-2.36-5.48-7.07,10.21-6.19-11.14-3.29,1.25-11.79-3.09-3.14-7.74,1.64-3.2-7.24-3.3-.18-5.7.66-2.22-3.28.48-3.57-5.71.29-1.07-5.7-9.55-1.62,1.9-4.21-2.79-5.36-2.68.41-3.9-10.11-5.79-3.4,1,2.63-4.89,5.16.23,5.16,0,1.82-5.09,1.8-.25,3.46-.06,2.36-7.33,2.08-.68,3.88.88,1.65-1.62,2.12-2.83,1.81-4,1.36,6.16,2.85.4,4.78-8.86,1.48,4.77,2.67-.68,5.15-11.9-.24,6.35,3.74-5.68,4.66.18,2.26,5,1.07,4.84,3.51-1.91,2.93-10.39-.72-3,5-1,2.59-8.59-1.54-6.69,2.46,3.11,1.07,5.31,3,1.09,4.56a5.5,5.5,0,0,0-2.92,1c-21-4.74,14.24-9.36-10.31-14.48-1-4.08,4.92-5.05,6.1-8.35-2.56-4.75-11.79,3.63-4.61-10.39-4.75-.25-8.21,1-3.2-4.71,1-5.26-8.3.82-1.54-8.21-.43-2.27-3.52,0-4.81-.76-3-2.12,3.41-5,2.36-6.46-4.75-.17-4.58-4.27-6.52-7.6-4.83-3.69-2.08,5.72-4.75,6.74-3.22.81-.61,3.74,1.72,2.91-.06,2.62-7.34,2.59-.37,5,1.15,2.72-5.6,1.51-4.86,4.07,4.29.89,5.93,4.66-.19,4.11-5.69,1.95,8.86,4.1.58,6.87-12.17,1.9,6.58,4.08-1,7.4-17.62-.13,9.56,5.15-8.17,6.72.26,3.24,7.15,1.53,7,5-3.2,4.42-14.5-1.48-4.37,7.25-16.76-2.77,6.36-6.08-8.62-9.37,9.6-12.91-5.11.43.92-11.6-2.93-.16-5.07.59-2-2.92.42-3.17-5.09.26-1-5.07-.27-1.41-2.18,0-3-.47,1.94-7.44.21-1-2.57-8.7-3-2.3-1.29,3.54-2.93,4.17-2,.49-.39,2.31,1,1.8,0,1.62-4.54,1.59-.22,3.08-.06,2.1-6.51,1.84-.61,3.45.84,2-2,1.54-3.15,1.71-.41,2.91,7,2.16-1.2,4.73,3.83-3-3.3-3-.93-5.63,3.08-4.21-12.45-.82-2.84-6.88,1.45-.39,3.53-.82,3.6-2.54-.71-1.87-6.8.32-5.71-3.29,3.43-2.58,1.75-3.87-1.85-2.94C-.75,344.2.16,465.91.12,500H467.87C473.79,495.49,471.59,489.61,458.76,482ZM10.88,370c-1.36.11-3.05-.89-3-2.25C8.48,368.61,11.55,368.23,10.88,370Zm107.47,18.35c.12,0,.22.1.33.14C121.24,390.56,115.34,390.33,118.35,388.34Zm-1.9-2.67c-.32-1.24,1.32-1.65,1.88-2.5C124.28,385.1,120,387.49,116.45,385.67Zm77.12,31.76c.12-.73,1.62-2.22,2.09-1.22S194.42,417.74,193.57,417.43Zm-.49-2.38c-3.46-.59-.05-3.14,1.48-3.86C200.14,413,192.92,413.23,193.08,415.05Zm65.81,17.06a2.55,2.55,0,0,1,.75.43C259.28,432.55,258.94,432.53,258.89,432.11Zm2.37-4c-1.58-1-3.82-1-5.46-1.77C251,418.85,271.7,425.92,261.26,428.12ZM391,465a.7.7,0,0,1,.41-.85C391.06,464.53,391.49,466,391,465Zm39.5,11.52H432C431.85,477.15,431,476.53,430.52,476.55Z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;url(#grad8)&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">&quot;h1-1&quot;</span> <span class="attr">d</span>=<span class="string">&quot;M761.44,506.06c-5.65-.19,10.92-182.57-7.17-162-1.31-2.92,9.88-6.67.34-5.87-4.24-.44,1-4-1.72-4.8-2.49-.42,1.86-4.33-2.2-3.39-8.74-1.35,7.4-5.58.13-5.93-1.16.14-2.66-.83-2.15-1.87,5.62-4.46-4.52-.31-1.81-4,4.06-1.59,1.25-2.59-1.55-2.52-.43-.22.51-6.83-2.86-4,1.48,7.41-6.36,2.56-2.25,6.56,5.14,3-5-.25-.08,5.06-7.81-.36,1.8,3.26-1.33,5.34-5.19-.58.77,2.46-.29,4.05-14.58-3.05,4.72,6.31-5.53,5.46-1.7,1.79,5.19,2.86,1.22,4.65-9-2.33-7.62,1.55-.87,4.1-.85,3.28-7.17.63-6.46,4.61a2.16,2.16,0,0,0-2.05-1.46c-3.92-1.42,2.25-2,.32-3.26-1-.12-2.49.65-3.16-.31,5-3.59-6.35-.29.94-4.3-5.75-.3,2.74-2.66-2.88-2.37-2.72-1.19,4.24-1.88-.35-2.61-2.92-1,2.21-1.74.2-2.42-.61.15-1.88-.09-1.43-.93,3.25-.82-.26-.81-.35-2,2.08-.6.08-.94-.13-1.76,2,1.08-.21-4.83-1.07-3.41-2.69,3-.16,4.58-3.16,5.23,2.16,2.44-.56,1.32-.55,2.9,1.66,1.77.5,1.65-1.13,1.66,2.07,3.55.2,2.46-1.63,3.67,3,2.68,2.38,3.16-1.1,4.15,6.38,6.85-5.28,1.52-.27,6a54.76,54.76,0,0,1-5.21,3c-5.88-1.82,5.87-3.27-2.9-4.93,5-6.49-2.77-.61.52-6.62-1.63,0-2.78.1-1.13-1.67,0-1.57-2.69-.47-.54-2.89-2.57-.64-2.07-.48-.87-2.55-1.67-.06-1.61-1.51-2.3-2.68-1.75-1.1-2.47,5.84-1.2,5.16-3.88,2.37,2.78,2.17-2.14,2.95-.76,1.13,3.25,1.24.57,2.36-4.6.73,2.37,1.42-.35,2.62-5-.63,2.12,2.54-2.68,2.17-6-1.33,1.92-3-3.55-4.14,3.51-4.39-1.9-.75.38-4.83-1.19,0-2,.08-.82-1.21,0-1.15-2-.36-.4-2.12-1.93-.73-.68-1.93-2.31-3.82-.68-.92-2.23,3.19-.78,2.49-.17.62-1.6.83-.1,1.28-.07.86-2.61.83-.25,1.44.33.61-.6.79-1,.67-1.46.51,2.29,1.06.15,1.77-3.35.54,1.73,1-.25,1.91-3.5-.29,1.48,1.61-2.1,1.73,4.39,3.22-9.59.52,0-5.62-3.38-2.44-6.84.32-3-6.7-3,0-5.09.19-2.06-3,.24-3.13-5.17-.19-1-5.29-6.9-1.54.83-1-5.78-9.55-3.11-2.4-1.33,3.69-3.06,4.34-2.07.52-.4,2.41,1.11,1.88-.41,1.55-4,2.06-.24,3.21-.17,2.13-6.55,2.07-.63,3.59.81,1.53-1.5,2-2.62,1.68-3.67,1.25,5.71,2.65.37,4.43-8.39,1.33,4.33,2.58-.63,4.77-10.29-.54,5.25,3.78-5.27,4.33.17,2.09,4.61,1,4.49,3.25-1.86,2.78-9.73-.67-2.77,4.6-.93,2.4-7.89-1.42-6.27,2.23,3,1,4.86,3,1.14,4.22-7.71,1.52-5.08,12.81-10,18.06-5.1.06-1.56-2.95.16-4.78-2.44-1.6-4.9-.21-2.17-4.88-2.17,0-3.7.14-1.5-2.21,0-2.09-3.58-.63-.72-3.85-3.42-.85-2.75-.63-1.15-3.39-2.23-.08-2.15-2-3.06-3.56-2.27-1.75-1,2.68-2.23,3.16-1.51.38-.29,1.76.81,1.36-.3,1.13-2.92,1.51-.18,2.34-.12,1.55-4.77,1.51-.45,2.62.59,1.12-1.1,1.43-1.92,1.22-2.66.91,4.16,1.93.28,3.22-6.11,1,3.15,1.89-.46,3.48-7.48-.39,3.8,2.75-3.84,3.15,7.29,4.68.73,1.27-.63,4.23,4.63,2.76-1.08,1.54-2.84,2.22,7.79-7.19-4.17-1,.78-8.7-2.34,0-4,.15-1.62-2.39.19-2.45-4-.15-.78-4.14-7-1.38,1.23-2.62-2-3.9-1.94.3-2.84-7.35-4.22-2.47.76,1.91-3.55,3.76.17,3.75-.31,1.22-3.14,1.62-.18,2.52-.14,1.67-5.14,1.62-.5,2.82.64,1.2-1.18,1.54-2,1.32-2.88,1,4.48,2.07.29,3.47-6.58,1.05,3.4,2-.5,3.74-8-.42,4.11,3-4.13,3.4,10.59,6.3-6,.57,1.35,6.15-1,1.38-3.16.27-4.52.45-.43,4.06,7.08,2.38-3.37,6.12-5.71.48,4.63-4.45-1.52-3.51-1.79-.23-.1-1-1.27-3.68-.94-2.47-5.06-.15.31-3.89-2.34-.85-2.73-.16-1.62-2.67-.67-.09-2.75.44-1.75-.92,2.27-.89.7-1.45-.86-1.41-.24-.12.29-3.81-1.6-2.22.94,3.52-3.33,1.82-1.26,3.67,2.87,1.65-2.79-.14,0,2.82-4.35-.19,1,1.83-.75,3-2.89-.32.44,1.37-.16,2.26-7.36-1.67,2.25,3.67-3.09,3.05-1,1,2.9,1.6.69,2.6-4.72-1.34-4.13,1-.49,2.29-.37,1.72-5.23.65-3.18,3-2.82,1-8,1.39-4.29-2.77-4.08-.65-3.25-8.88-5.66-.42-1.62.4-.31,1.87.86,1.45-.32,1.21-3.13,1.61-.19,2.5-.13,1.67-5.1,1.62-.49,2.8.64,1.2-1.17,1.53-2,1.31-2.86,1,4.45,2.07.29,3.45-6.53,1,3.38,2-.49,3.72-8-.42,4.07,2.94-4.1,3.37,10.51,6.26-5.95.57,1.33,6.12-.94,1.36-3.14.26-4.49.44-2.75,1.84,6,2.62.45,4.63-1.57-.22-3.88,1.83-2,3.35-1.09,1.23-5.42,2.3-1.85.15-3.17-1.23-1.57-.8-.8-2.52-4.17-.05,1.54-1.41-1.15-1.88-2-.81,1.57-.63-.8-2.15,2.22,0-.35-1.1.1-2.25-.83-2.92-1.36,1.66-2.52,1.48-1.87.82,3.06,1.7-1.21,2.34,1.85,2.09-.48,1.12-.47,2.48,1.42,1.51.43,1.41-1,1.42,1.66,2.64.09,2.26-1.4,3.15,2.57,2.29,2,2.7-.94,3.56,6.39,5.32-13.47,7.73-3.13-.78-2.84-1.86-5.71-.24-2.53-5.68-2.53,0-4.3.16-1.74-2.58.2-2.64-4.38-.16-.85-4.48-5.53-1,.39-1.54-4.9-8.09-2.63-2-1.13,3.12-2.59,3.68-1.75.44-.34,2,.94,1.59-.34,1.31-3.4,1.75-.2,2.72-.15,1.8-5.56,1.75-.54,3,.69,1.3-1.27,1.67-2.22,1.43-3.11,1.06,4.84,2.24.32,3.75-7.11,1.13,3.67,2.19-.54,4.05-8.7-.46,4.44,3.19-4.46,3.66.14,1.77,3.9.84,3.8,2.76-11.08,2.45,4.62,4.82-7.23,4.38-3,2,6.48,3,.54,5-19.56,16.4-40,40.41-67.65,39.92C204.4,521.41,763.06,501.47,761.44,506.06ZM690.05,348.19c1.82-1.17,4.91,2.33.87,1.59C690.36,349.44,689.15,348.86,690.05,348.19Zm-11.51-.42c1.22-.95.69.18-.18.42C677.93,348.27,678.29,348,678.54,347.77Zm-54.73,30.29a4.74,4.74,0,0,0,1.56.73C624.69,378.93,623.4,378,623.81,378.06Z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;url(#grad9)&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;scrollElement&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">id</span>=<span class="string">&quot;fullscr&quot;</span>&gt;</span>全屏<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">gsap.<span class="title function_">registerPlugin</span>(<span class="title class_">ScrollTrigger</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> speed = <span class="number">100</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/*  SCENE 1 */</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> scene1 = gsap.<span class="title function_">timeline</span>();</span></span><br><span class="line"><span class="language-javascript"><span class="title class_">ScrollTrigger</span>.<span class="title function_">create</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">animation</span>: scene1,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">trigger</span>: <span class="string">&quot;.scrollElement&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">start</span>: <span class="string">&quot;top top&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">end</span>: <span class="string">&quot;45% 100%&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">scrub</span>: <span class="number">3</span></span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// hills animation</span></span></span><br><span class="line"><span class="language-javascript">scene1.<span class="title function_">to</span>(</span></span><br><span class="line"><span class="language-javascript">  <span class="string">&quot;#h1-1&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#123; <span class="attr">y</span>: <span class="number">3</span> * speed, <span class="attr">x</span>: <span class="number">1</span> * speed, <span class="attr">scale</span>: <span class="number">0.9</span>, <span class="attr">ease</span>: <span class="string">&quot;power1.in&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">);</span></span><br><span class="line"><span class="language-javascript">scene1.<span class="title function_">to</span>(<span class="string">&quot;#h1-2&quot;</span>, &#123; <span class="attr">y</span>: <span class="number">2.6</span> * speed, <span class="attr">x</span>: -<span class="number">0.6</span> * speed, <span class="attr">ease</span>: <span class="string">&quot;power1.in&quot;</span> &#125;, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">scene1.<span class="title function_">to</span>(<span class="string">&quot;#h1-3&quot;</span>, &#123; <span class="attr">y</span>: <span class="number">1.7</span> * speed, <span class="attr">x</span>: <span class="number">1.2</span> * speed &#125;, <span class="number">0.03</span>);</span></span><br><span class="line"><span class="language-javascript">scene1.<span class="title function_">to</span>(<span class="string">&quot;#h1-4&quot;</span>, &#123; <span class="attr">y</span>: <span class="number">3</span> * speed, <span class="attr">x</span>: <span class="number">1</span> * speed &#125;, <span class="number">0.03</span>);</span></span><br><span class="line"><span class="language-javascript">scene1.<span class="title function_">to</span>(<span class="string">&quot;#h1-5&quot;</span>, &#123; <span class="attr">y</span>: <span class="number">2</span> * speed, <span class="attr">x</span>: <span class="number">1</span> * speed &#125;, <span class="number">0.03</span>);</span></span><br><span class="line"><span class="language-javascript">scene1.<span class="title function_">to</span>(<span class="string">&quot;#h1-6&quot;</span>, &#123; <span class="attr">y</span>: <span class="number">2.3</span> * speed, <span class="attr">x</span>: -<span class="number">2.5</span> * speed &#125;, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">scene1.<span class="title function_">to</span>(<span class="string">&quot;#h1-7&quot;</span>, &#123; <span class="attr">y</span>: <span class="number">5</span> * speed, <span class="attr">x</span>: <span class="number">1.6</span> * speed &#125;, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">scene1.<span class="title function_">to</span>(<span class="string">&quot;#h1-8&quot;</span>, &#123; <span class="attr">y</span>: <span class="number">3.5</span> * speed, <span class="attr">x</span>: <span class="number">0.2</span> * speed &#125;, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">scene1.<span class="title function_">to</span>(<span class="string">&quot;#h1-9&quot;</span>, &#123; <span class="attr">y</span>: <span class="number">3.5</span> * speed, <span class="attr">x</span>: -<span class="number">0.2</span> * speed &#125;, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//animate text</span></span></span><br><span class="line"><span class="language-javascript">scene1.<span class="title function_">to</span>(<span class="string">&quot;#info&quot;</span>, &#123; <span class="attr">y</span>: <span class="number">8</span> * speed &#125;, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/*   Bird   */</span></span></span><br><span class="line"><span class="language-javascript">gsap.<span class="title function_">fromTo</span>(</span></span><br><span class="line"><span class="language-javascript">  <span class="string">&quot;#bird&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#123; <span class="attr">opacity</span>: <span class="number">1</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">y</span>: -<span class="number">250</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">x</span>: <span class="number">800</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">ease</span>: <span class="string">&quot;power2.out&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">scrollTrigger</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">trigger</span>: <span class="string">&quot;.scrollElement&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">start</span>: <span class="string">&quot;15% top&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">end</span>: <span class="string">&quot;60% 100%&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">scrub</span>: <span class="number">4</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">onEnter</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        gsap.<span class="title function_">to</span>(<span class="string">&quot;#bird&quot;</span>, &#123; <span class="attr">scaleX</span>: <span class="number">1</span>, <span class="attr">rotation</span>: <span class="number">0</span> &#125;);</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">onLeave</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        gsap.<span class="title function_">to</span>(<span class="string">&quot;#bird&quot;</span>, &#123; <span class="attr">scaleX</span>: -<span class="number">1</span>, <span class="attr">rotation</span>: -<span class="number">15</span> &#125;);</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/* Clouds  */</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> clouds = gsap.<span class="title function_">timeline</span>();</span></span><br><span class="line"><span class="language-javascript"><span class="title class_">ScrollTrigger</span>.<span class="title function_">create</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">animation</span>: clouds,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">trigger</span>: <span class="string">&quot;.scrollElement&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">start</span>: <span class="string">&quot;top top&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">end</span>: <span class="string">&quot;70% 100%&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">scrub</span>: <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">clouds.<span class="title function_">to</span>(<span class="string">&quot;#cloud1&quot;</span>, &#123; <span class="attr">x</span>: <span class="number">500</span> &#125;, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">clouds.<span class="title function_">to</span>(<span class="string">&quot;#cloud2&quot;</span>, &#123; <span class="attr">x</span>: <span class="number">1000</span> &#125;, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">clouds.<span class="title function_">to</span>(<span class="string">&quot;#cloud3&quot;</span>, &#123; <span class="attr">x</span>: -<span class="number">1000</span> &#125;, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">clouds.<span class="title function_">to</span>(<span class="string">&quot;#cloud4&quot;</span>, &#123; <span class="attr">x</span>: -<span class="number">700</span>, <span class="attr">y</span>: <span class="number">25</span> &#125;, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/* Sun motion Animation  */</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> sun = gsap.<span class="title function_">timeline</span>();</span></span><br><span class="line"><span class="language-javascript"><span class="title class_">ScrollTrigger</span>.<span class="title function_">create</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">animation</span>: sun,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">trigger</span>: <span class="string">&quot;.scrollElement&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">start</span>: <span class="string">&quot;top top&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">end</span>: <span class="string">&quot;2200 100%&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">scrub</span>: <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//sun motion</span></span></span><br><span class="line"><span class="language-javascript">sun.<span class="title function_">to</span>(<span class="string">&quot;#bg_grad&quot;</span>, &#123; <span class="attr">attr</span>: &#123; <span class="attr">cy</span>: <span class="string">&quot;330&quot;</span> &#125; &#125;, <span class="number">0.0</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//bg change</span></span></span><br><span class="line"><span class="language-javascript">sun.<span class="title function_">to</span>(<span class="string">&quot;#sun&quot;</span>, &#123; <span class="attr">attr</span>: &#123; <span class="attr">offset</span>: <span class="string">&quot;0.15&quot;</span> &#125; &#125;, <span class="number">0.0</span>);</span></span><br><span class="line"><span class="language-javascript">sun.<span class="title function_">to</span>(<span class="string">&quot;#bg_grad stop:nth-child(2)&quot;</span>, &#123; <span class="attr">attr</span>: &#123; <span class="attr">offset</span>: <span class="string">&quot;0.15&quot;</span> &#125; &#125;, <span class="number">0.0</span>);</span></span><br><span class="line"><span class="language-javascript">sun.<span class="title function_">to</span>(<span class="string">&quot;#bg_grad stop:nth-child(3)&quot;</span>, &#123; <span class="attr">attr</span>: &#123; <span class="attr">offset</span>: <span class="string">&quot;0.18&quot;</span> &#125; &#125;, <span class="number">0.0</span>);</span></span><br><span class="line"><span class="language-javascript">sun.<span class="title function_">to</span>(<span class="string">&quot;#bg_grad stop:nth-child(4)&quot;</span>, &#123; <span class="attr">attr</span>: &#123; <span class="attr">offset</span>: <span class="string">&quot;0.25&quot;</span> &#125; &#125;, <span class="number">0.0</span>);</span></span><br><span class="line"><span class="language-javascript">sun.<span class="title function_">to</span>(<span class="string">&quot;#bg_grad stop:nth-child(5)&quot;</span>, &#123; <span class="attr">attr</span>: &#123; <span class="attr">offset</span>: <span class="string">&quot;0.46&quot;</span> &#125; &#125;, <span class="number">0.0</span>);</span></span><br><span class="line"><span class="language-javascript">sun.<span class="title function_">to</span>(<span class="string">&quot;#bg_grad stop:nth-child(6)&quot;</span>, &#123; <span class="attr">attr</span>: &#123; <span class="string">&quot;stop-color&quot;</span>: <span class="string">&quot;#FF9171&quot;</span> &#125; &#125;, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/*   SCENE 2  */</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> scene2 = gsap.<span class="title function_">timeline</span>();</span></span><br><span class="line"><span class="language-javascript"><span class="title class_">ScrollTrigger</span>.<span class="title function_">create</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">animation</span>: scene2,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">trigger</span>: <span class="string">&quot;.scrollElement&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">start</span>: <span class="string">&quot;15% top&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">end</span>: <span class="string">&quot;40% 100%&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">scrub</span>: <span class="number">4</span></span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">scene2.<span class="title function_">fromTo</span>(<span class="string">&quot;#h2-1&quot;</span>, &#123; <span class="attr">y</span>: <span class="number">500</span>, <span class="attr">opacity</span>: <span class="number">0</span> &#125;, &#123; <span class="attr">y</span>: <span class="number">0</span>, <span class="attr">opacity</span>: <span class="number">1</span> &#125;, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">scene2.<span class="title function_">fromTo</span>(<span class="string">&quot;#h2-2&quot;</span>, &#123; <span class="attr">y</span>: <span class="number">500</span> &#125;, &#123; <span class="attr">y</span>: <span class="number">0</span> &#125;, <span class="number">0.1</span>);</span></span><br><span class="line"><span class="language-javascript">scene2.<span class="title function_">fromTo</span>(<span class="string">&quot;#h2-3&quot;</span>, &#123; <span class="attr">y</span>: <span class="number">700</span> &#125;, &#123; <span class="attr">y</span>: <span class="number">0</span> &#125;, <span class="number">0.1</span>);</span></span><br><span class="line"><span class="language-javascript">scene2.<span class="title function_">fromTo</span>(<span class="string">&quot;#h2-4&quot;</span>, &#123; <span class="attr">y</span>: <span class="number">700</span> &#125;, &#123; <span class="attr">y</span>: <span class="number">0</span> &#125;, <span class="number">0.2</span>);</span></span><br><span class="line"><span class="language-javascript">scene2.<span class="title function_">fromTo</span>(<span class="string">&quot;#h2-5&quot;</span>, &#123; <span class="attr">y</span>: <span class="number">800</span> &#125;, &#123; <span class="attr">y</span>: <span class="number">0</span> &#125;, <span class="number">0.3</span>);</span></span><br><span class="line"><span class="language-javascript">scene2.<span class="title function_">fromTo</span>(<span class="string">&quot;#h2-6&quot;</span>, &#123; <span class="attr">y</span>: <span class="number">900</span> &#125;, &#123; <span class="attr">y</span>: <span class="number">0</span> &#125;, <span class="number">0.3</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/* Bats */</span></span></span><br><span class="line"><span class="language-javascript">gsap.<span class="title function_">fromTo</span>(</span></span><br><span class="line"><span class="language-javascript">  <span class="string">&quot;#bats&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#123; <span class="attr">opacity</span>: <span class="number">1</span>, <span class="attr">y</span>: <span class="number">400</span>, <span class="attr">scale</span>: <span class="number">0</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">y</span>: <span class="number">120</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">scale</span>: <span class="number">0.8</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">transformOrigin</span>: <span class="string">&quot;50% 50%&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">ease</span>: <span class="string">&quot;power3.out&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">scrollTrigger</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">trigger</span>: <span class="string">&quot;.scrollElement&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">start</span>: <span class="string">&quot;40% top&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">end</span>: <span class="string">&quot;70% 100%&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">scrub</span>: <span class="number">3</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">onEnter</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        gsap.<span class="property">utils</span>.<span class="title function_">toArray</span>(<span class="string">&quot;#bats path&quot;</span>).<span class="title function_">forEach</span>(<span class="function">(<span class="params">item, i</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          gsap.<span class="title function_">to</span>(item, &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">scaleX</span>: <span class="number">0.5</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">yoyo</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">repeat</span>: <span class="number">11</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">duration</span>: <span class="number">0.15</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">delay</span>: <span class="number">0.7</span> + i / <span class="number">10</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">transformOrigin</span>: <span class="string">&quot;50% 50%&quot;</span></span></span><br><span class="line"><span class="language-javascript">          &#125;);</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">        gsap.<span class="title function_">set</span>(<span class="string">&quot;#bats&quot;</span>, &#123; <span class="attr">opacity</span>: <span class="number">1</span> &#125;);</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">onLeave</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        gsap.<span class="title function_">to</span>(<span class="string">&quot;#bats&quot;</span>, &#123; <span class="attr">opacity</span>: <span class="number">0</span>, <span class="attr">delay</span>: <span class="number">2</span> &#125;);</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/* Sun increase */</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> sun2 = gsap.<span class="title function_">timeline</span>();</span></span><br><span class="line"><span class="language-javascript"><span class="title class_">ScrollTrigger</span>.<span class="title function_">create</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">animation</span>: sun2,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">trigger</span>: <span class="string">&quot;.scrollElement&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">start</span>: <span class="string">&quot;2200 top&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">end</span>: <span class="string">&quot;5000 100%&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">scrub</span>: <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">sun2.<span class="title function_">to</span>(<span class="string">&quot;#sun&quot;</span>, &#123; <span class="attr">attr</span>: &#123; <span class="attr">offset</span>: <span class="string">&quot;0.6&quot;</span> &#125; &#125;, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">sun2.<span class="title function_">to</span>(<span class="string">&quot;#bg_grad stop:nth-child(2)&quot;</span>, &#123; <span class="attr">attr</span>: &#123; <span class="attr">offset</span>: <span class="string">&quot;0.7&quot;</span> &#125; &#125;, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">sun2.<span class="title function_">to</span>(<span class="string">&quot;#sun&quot;</span>, &#123; <span class="attr">attr</span>: &#123; <span class="string">&quot;stop-color&quot;</span>: <span class="string">&quot;#ffff00&quot;</span> &#125; &#125;, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">sun2.<span class="title function_">to</span>(<span class="string">&quot;#lg4 stop:nth-child(1)&quot;</span>, &#123; <span class="attr">attr</span>: &#123; <span class="string">&quot;stop-color&quot;</span>: <span class="string">&quot;#623951&quot;</span> &#125; &#125;, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">sun2.<span class="title function_">to</span>(<span class="string">&quot;#lg4 stop:nth-child(2)&quot;</span>, &#123; <span class="attr">attr</span>: &#123; <span class="string">&quot;stop-color&quot;</span>: <span class="string">&quot;#261F36&quot;</span> &#125; &#125;, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">sun2.<span class="title function_">to</span>(<span class="string">&quot;#bg_grad stop:nth-child(6)&quot;</span>, &#123; <span class="attr">attr</span>: &#123; <span class="string">&quot;stop-color&quot;</span>: <span class="string">&quot;#45224A&quot;</span> &#125; &#125;, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/* Transition (from Scene2 to Scene3) */</span></span></span><br><span class="line"><span class="language-javascript">gsap.<span class="title function_">set</span>(<span class="string">&quot;#scene3&quot;</span>, &#123; <span class="attr">y</span>: <span class="number">580</span>, <span class="attr">visibility</span>: <span class="string">&quot;visible&quot;</span> &#125;);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> sceneTransition = gsap.<span class="title function_">timeline</span>();</span></span><br><span class="line"><span class="language-javascript"><span class="title class_">ScrollTrigger</span>.<span class="title function_">create</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">animation</span>: sceneTransition,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">trigger</span>: <span class="string">&quot;.scrollElement&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">start</span>: <span class="string">&quot;70% top&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">end</span>: <span class="string">&quot;bottom 100%&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">scrub</span>: <span class="number">3</span></span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">sceneTransition.<span class="title function_">to</span>(</span></span><br><span class="line"><span class="language-javascript">  <span class="string">&quot;#h2-1&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#123; <span class="attr">y</span>: -<span class="number">680</span>, <span class="attr">scale</span>: <span class="number">1.5</span>, <span class="attr">transformOrigin</span>: <span class="string">&quot;50% 50%&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">);</span></span><br><span class="line"><span class="language-javascript">sceneTransition.<span class="title function_">to</span>(<span class="string">&quot;#bg_grad&quot;</span>, &#123; <span class="attr">attr</span>: &#123; <span class="attr">cy</span>: <span class="string">&quot;-80&quot;</span> &#125; &#125;, <span class="number">0.0</span>);</span></span><br><span class="line"><span class="language-javascript">sceneTransition.<span class="title function_">to</span>(<span class="string">&quot;#bg2&quot;</span>, &#123; <span class="attr">y</span>: <span class="number">0</span> &#125;, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/* Scene 3 */</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> scene3 = gsap.<span class="title function_">timeline</span>();</span></span><br><span class="line"><span class="language-javascript"><span class="title class_">ScrollTrigger</span>.<span class="title function_">create</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">animation</span>: scene3,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">trigger</span>: <span class="string">&quot;.scrollElement&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">start</span>: <span class="string">&quot;80% 50%&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">end</span>: <span class="string">&quot;bottom 100%&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">scrub</span>: <span class="number">3</span></span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//Hills motion</span></span></span><br><span class="line"><span class="language-javascript">scene3.<span class="title function_">fromTo</span>(<span class="string">&quot;#h3-1&quot;</span>, &#123; <span class="attr">y</span>: <span class="number">300</span> &#125;, &#123; <span class="attr">y</span>: -<span class="number">550</span> &#125;, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">scene3.<span class="title function_">fromTo</span>(<span class="string">&quot;#h3-2&quot;</span>, &#123; <span class="attr">y</span>: <span class="number">800</span> &#125;, &#123; <span class="attr">y</span>: -<span class="number">550</span> &#125;, <span class="number">0.03</span>);</span></span><br><span class="line"><span class="language-javascript">scene3.<span class="title function_">fromTo</span>(<span class="string">&quot;#h3-3&quot;</span>, &#123; <span class="attr">y</span>: <span class="number">600</span> &#125;, &#123; <span class="attr">y</span>: -<span class="number">550</span> &#125;, <span class="number">0.06</span>);</span></span><br><span class="line"><span class="language-javascript">scene3.<span class="title function_">fromTo</span>(<span class="string">&quot;#h3-4&quot;</span>, &#123; <span class="attr">y</span>: <span class="number">800</span> &#125;, &#123; <span class="attr">y</span>: -<span class="number">550</span> &#125;, <span class="number">0.09</span>);</span></span><br><span class="line"><span class="language-javascript">scene3.<span class="title function_">fromTo</span>(<span class="string">&quot;#h3-5&quot;</span>, &#123; <span class="attr">y</span>: <span class="number">1000</span> &#125;, &#123; <span class="attr">y</span>: -<span class="number">550</span> &#125;, <span class="number">0.12</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//stars</span></span></span><br><span class="line"><span class="language-javascript">scene3.<span class="title function_">fromTo</span>(<span class="string">&quot;#stars&quot;</span>, &#123; <span class="attr">opacity</span>: <span class="number">0</span> &#125;, &#123; <span class="attr">opacity</span>: <span class="number">0.5</span>, <span class="attr">y</span>: -<span class="number">500</span> &#125;, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// Scroll Back text</span></span></span><br><span class="line"><span class="language-javascript">scene3.<span class="title function_">fromTo</span>(<span class="string">&quot;#arrow2&quot;</span>, &#123; <span class="attr">opacity</span>: <span class="number">0</span> &#125;, &#123; <span class="attr">opacity</span>: <span class="number">0.7</span>, <span class="attr">y</span>: -<span class="number">710</span> &#125;, <span class="number">0.25</span>);</span></span><br><span class="line"><span class="language-javascript">scene3.<span class="title function_">fromTo</span>(<span class="string">&quot;#text2&quot;</span>, &#123; <span class="attr">opacity</span>: <span class="number">0</span> &#125;, &#123; <span class="attr">opacity</span>: <span class="number">0.7</span>, <span class="attr">y</span>: -<span class="number">710</span> &#125;, <span class="number">0.3</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//gradient value change</span></span></span><br><span class="line"><span class="language-javascript">scene3.<span class="title function_">to</span>(<span class="string">&quot;#bg2-grad&quot;</span>, &#123; <span class="attr">attr</span>: &#123; <span class="attr">cy</span>: <span class="number">600</span> &#125; &#125;, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">scene3.<span class="title function_">to</span>(<span class="string">&quot;#bg2-grad&quot;</span>, &#123; <span class="attr">attr</span>: &#123; <span class="attr">r</span>: <span class="number">500</span> &#125; &#125;, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/*   falling star   */</span></span></span><br><span class="line"><span class="language-javascript">gsap.<span class="title function_">to</span>(<span class="string">&quot;#fstar&quot;</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">x</span>: -<span class="number">700</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">y</span>: -<span class="number">250</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">ease</span>: <span class="string">&quot;power4.out&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">scrollTrigger</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">trigger</span>: <span class="string">&quot;.scrollElement&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">start</span>: <span class="string">&quot;4000 top&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">end</span>: <span class="string">&quot;6000 100%&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">scrub</span>: <span class="number">5</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">onEnter</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      gsap.<span class="title function_">set</span>(<span class="string">&quot;#fstar&quot;</span>, &#123; <span class="attr">opacity</span>: <span class="number">1</span> &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">onLeave</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      gsap.<span class="title function_">set</span>(<span class="string">&quot;#fstar&quot;</span>, &#123; <span class="attr">opacity</span>: <span class="number">0</span> &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//reset scrollbar position after refresh</span></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">window</span>.<span class="property">onbeforeunload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">window</span>.<span class="title function_">scrollTo</span>(<span class="number">0</span>, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> fullscreen;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> fsEnter = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;fullscr&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">fsEnter.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  e.<span class="title function_">preventDefault</span>();</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">if</span> (!fullscreen) &#123;</span></span><br><span class="line"><span class="language-javascript">    fullscreen = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="title function_">requestFullscreen</span>();</span></span><br><span class="line"><span class="language-javascript">    fsEnter.<span class="property">innerHTML</span> = <span class="string">&quot;退出全屏&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    fullscreen = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">exitFullscreen</span>();</span></span><br><span class="line"><span class="language-javascript">    fsEnter.<span class="property">innerHTML</span> = <span class="string">&quot;全屏&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html(5) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《如何阅读一本书》</title>
      <link href="/2022/05/03%E5%8F%91%E5%B1%95/%E5%8F%91%E5%B1%95_%E9%98%85%E8%AF%BB_%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6/ed9cd36e/"/>
      <url>/2022/05/03%E5%8F%91%E5%B1%95/%E5%8F%91%E5%B1%95_%E9%98%85%E8%AF%BB_%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6/ed9cd36e/</url>
      
        <content type="html"><![CDATA[<h1 id="阅读的层次"><a href="#阅读的层次" class="headerlink" title="阅读的层次"></a>阅读的层次</h1><h2 id="基础阅读"><a href="#基础阅读" class="headerlink" title="基础阅读"></a>基础阅读</h2><ul><li>这个句子在说什么？</li></ul><h2 id="检视阅读"><a href="#检视阅读" class="headerlink" title="检视阅读"></a>检视阅读</h2><ul><li>在一定的时间之内，抓出一本书的重点。从表面去观察着本书，学习到书的表象所教给你的一切。</li><li>这本书在谈什么？</li><li>这本书的架构如何？</li><li>这本书包含哪些部分？<br>总结：这是哪一类书？————小说、历史、还是科学论文？</li></ul><h2 id="分析阅读"><a href="#分析阅读" class="headerlink" title="分析阅读"></a>分析阅读</h2><ul><li>在无限的时间里，最好、最完整的阅读。咀嚼、消化一本书。</li><li>对自己所读的东西提出许多又系统的问题。</li></ul><h2 id="主题阅读"><a href="#主题阅读" class="headerlink" title="主题阅读"></a>主题阅读</h2><ul><li>在做主题阅读时，阅读者会读很多书，而不是一本书，并列举出这些书之间的相关之处，提出一个所有的书都能谈到的主题。能够架构出一个可能在哪一本书里没提过的主题分析</li></ul><h1 id="阅读不同作品的方法"><a href="#阅读不同作品的方法" class="headerlink" title="阅读不同作品的方法"></a>阅读不同作品的方法</h1><h1 id="阅读的最终目标"><a href="#阅读的最终目标" class="headerlink" title="阅读的最终目标"></a>阅读的最终目标</h1>]]></content>
      
      
      <categories>
          
          <category> 发展 </category>
          
          <category> 阅读 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>速查指令</title>
      <link href="/2022/05/02%E5%B7%A5%E5%85%B7/%E5%B7%A5%E5%85%B7_%E6%89%8B%E5%86%8C_%E9%80%9F%E6%9F%A5%E6%8C%87%E4%BB%A4/efc31b2a/"/>
      <url>/2022/05/02%E5%B7%A5%E5%85%B7/%E5%B7%A5%E5%85%B7_%E6%89%8B%E5%86%8C_%E9%80%9F%E6%9F%A5%E6%8C%87%E4%BB%A4/efc31b2a/</url>
      
        <content type="html"><![CDATA[<h1 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h1><h2 id="NPM-常用库"><a href="#NPM-常用库" class="headerlink" title="NPM 常用库"></a>NPM 常用库</h2><h3 id="uuid"><a href="#uuid" class="headerlink" title="uuid"></a>uuid</h3><p>用于创建 RFC4122 UUID</p><h3 id="nanoid"><a href="#nanoid" class="headerlink" title="nanoid"></a>nanoid</h3><p>一个小巧、安全、URL友好、唯一的 JavaScript 字符串ID生成器。</p><h1 id="VSCode"><a href="#VSCode" class="headerlink" title="VSCode"></a>VSCode</h1><h2 id="Vs-软件快捷键"><a href="#Vs-软件快捷键" class="headerlink" title="Vs-软件快捷键"></a>Vs-软件快捷键</h2><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220517141154.png" alt="20220517141154"></p><div class="table-container"><table><thead><tr><th>快捷键</th><th>功能</th></tr></thead><tbody><tr><td>Ctrl + 左右</td><td>按照单词跳转</td></tr><tr><td>Ctrl + D</td><td>选择单词</td></tr><tr><td>Alt + Z</td><td>切换自动换行</td></tr><tr><td>Shift + Alt + F</td><td>格式化文档</td></tr><tr><td>Shift + Alt + 下箭头</td><td>快速复制一行文本</td></tr><tr><td>Shift + Alt + 鼠标左键上下拖动</td><td>快速选择多行区域</td></tr><tr><td>Ctrl + G</td><td>快速跳转指定行</td></tr></tbody></table></div><p>拓展：</p><ol><li>文本可以在右下角自定义语言格式。（用于特定语言的格式化）</li></ol><h2 id="Vs-前端插件"><a href="#Vs-前端插件" class="headerlink" title="Vs-前端插件"></a>Vs-前端插件</h2><div class="table-container"><table><thead><tr><th>插件</th><th>Description</th></tr></thead><tbody><tr><td>Auto Rename Tag</td><td>Automatically rename paired HTML/XML tag 。</td></tr><tr><td>CSS Peek</td><td>在源代码中的字符串中找到css/scss/less(类和ID)。</td></tr><tr><td>Easy LESS</td><td>Easy LESS插件用来把less文件编译为css文件。</td></tr><tr><td>cssrem</td><td>px 转换 rem</td></tr><tr><td>px2vw</td><td>px 转换 vw</td></tr><tr><td>Vetur</td><td>Vue 语法高亮、智能感知、Emmet等</td></tr><tr><td>Open in External App</td><td>使用指定 App 打开文件</td></tr></tbody></table></div><h3 id="Easy-LESS-插件配置"><a href="#Easy-LESS-插件配置" class="headerlink" title="Easy LESS 插件配置"></a>Easy LESS 插件配置</h3><blockquote><p>默认 Easy LESS 插件导出的 css 文件和 less 文件是在同一级目录下的，可以自定义配置 css 文件的导出路径。</p></blockquote><ol><li>在 Easy LESS 插件中点击拓展设置</li><li>进入 settings.json 文件，配置以下内容：<figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;less.compile&quot;: &#123;</span><br><span class="line"><span class="addition">+    &quot;out&quot;: &quot;../css/&quot; # 设置 css 导出路径</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="cssrem-插件配置"><a href="#cssrem-插件配置" class="headerlink" title="cssrem  插件配置"></a>cssrem  插件配置</h3><p>设置 cssrem  插件的 Root Font Size (默认为16px)</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220725153139.png" alt="20220725153139"></p><h3 id="px2vw-插件配置"><a href="#px2vw-插件配置" class="headerlink" title="px2vw 插件配置"></a>px2vw 插件配置</h3><p>修改 px2vw 插件默认视口宽度：在拓展设置中直接自定义宽度</p><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220711023233.png" alt="20220711023233"></p><h2 id="Vs-插件快捷键"><a href="#Vs-插件快捷键" class="headerlink" title="Vs-插件快捷键"></a>Vs-插件快捷键</h2><div class="table-container"><table><thead><tr><th>插件</th><th>快捷键</th><th>功能</th></tr></thead><tbody><tr><td>Markdown All in One</td><td>Ctrl + Shift + V</td><td>一边书写一边预览</td></tr><tr><td>Markdown All in One</td><td>Alt + Shift + F</td><td>格式化table</td></tr><tr><td>PicGo</td><td>Ctrl + Alt + u</td><td>Uploading an image from clipboard</td></tr><tr><td>PicGo</td><td>Ctrl + Alt + e</td><td>Uploading images from explorer</td></tr><tr><td>PicGo</td><td>Ctrl + Alt + o</td><td>Uploading an image from input box</td></tr><tr><td>Live Server</td><td>Alt + l + o</td><td>为静态和动态页面启动具有实时重新加载功能的本地开发服务器。</td></tr><tr><td>open in browser</td><td>Alt + b</td><td>open current html file in default browser, or <code>Shift + Alt + B</code> to choose a browser.</td></tr></tbody></table></div><h1 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h1><h2 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h2><div class="table-container"><table><thead><tr><th>命令</th><th>功能</th></tr></thead><tbody><tr><td>ssh-keygen -t rsa -C “your_email@example.com”</td><td>生成新的ssh key</td></tr><tr><td>ssh -T git@github.com</td><td>测试ssh是否绑定成功</td></tr></tbody></table></div><h2 id="Windows-系统快捷键"><a href="#Windows-系统快捷键" class="headerlink" title="Windows 系统快捷键"></a>Windows 系统快捷键</h2><div class="table-container"><table><thead><tr><th>快捷键</th><th>功能</th></tr></thead><tbody><tr><td>Shift + Space</td><td>全 / 半角切换</td></tr><tr><td>Ctrl + W</td><td>关闭当前页面/文件夹</td></tr><tr><td>Alt + F4</td><td>关闭当前所有页面</td></tr><tr><td>win + v</td><td>打开剪贴板</td></tr><tr><td>ctrl + shift + f</td><td>设置简体/繁体</td></tr><tr><td>win + shift + s</td><td>截屏</td></tr><tr><td>右键 + Shift + D</td><td>彻底删除该文件，不经过回收站</td></tr><tr><td>计算机管理 —&gt; 存储 —&gt; 磁盘管理 —&gt;压缩卷</td><td>分盘</td></tr></tbody></table></div><h2 id="Windows-软件快捷键"><a href="#Windows-软件快捷键" class="headerlink" title="Windows 软件快捷键"></a>Windows 软件快捷键</h2><div class="table-container"><table><thead><tr><th>软件</th><th>快捷键</th><th>描述</th></tr></thead><tbody><tr><td>uToos</td><td>alt + shift + 1</td><td>讯飞 ocr</td></tr><tr><td>uToos</td><td>alt + shift + 2</td><td>聚合翻译</td></tr><tr><td>uToos</td><td>alt + shift + 3</td><td>快贴</td></tr><tr><td>uToos</td><td>ctrl + alt + c</td><td>剪贴板</td></tr><tr><td>欧陆词典</td><td>ctrl + alt + x</td><td>显示隐藏查询主面板</td></tr></tbody></table></div><h1 id="GIT"><a href="#GIT" class="headerlink" title="GIT"></a>GIT</h1><p><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/git.png" alt="git"></p><div class="table-container"><table><thead><tr><th>命令</th><th>功能</th></tr></thead><tbody><tr><td><strong>配置</strong></td></tr><tr><td>git init</td><td>新建一个Git代码库</td></tr><tr><td>git clone [url]</td><td>下载一个项目和它的整个代码历史</td></tr><tr><td>git config —list</td><td>显示当前的Git配置</td></tr><tr><td>git config [—global] user.name “[name]”</td><td>设置提交代码时的用户信息</td></tr><tr><td>git config [—global] user.email “[email address]”</td><td>设置提交代码时的用户信息</td></tr><tr><td><strong>增加/删除文件</strong></td></tr><tr><td>git add .</td><td>添加当前目录的所有文件到暂存区</td></tr><tr><td>git add [file1] [file2] …</td><td>添加指定文件到暂存区</td></tr><tr><td>git add [dir]</td><td>添加指定目录到暂存区，包括子目录</td></tr><tr><td>git rm [file1] [file2] …</td><td>删除工作区文件，并且将这次删除放入暂存区</td></tr><tr><td><strong>代码提交</strong></td></tr><tr><td>git commit -m [message]</td><td>提交暂存区到仓库区</td></tr><tr><td>git commit [file1] [file2] … -m [message]</td><td>提交暂存区的指定文件到仓库区</td></tr><tr><td>git commit -v</td><td>提交时显示所有diff信息</td></tr><tr><td><strong>分支</strong></td></tr><tr><td>git branch</td><td>列出所有本地分支</td></tr><tr><td>git branch -r</td><td>列出所有远程分支</td></tr><tr><td>git branch -a</td><td>列出所有本地分支和远程分支</td></tr><tr><td>git branch [branch-name]</td><td>新建一个分支，但依然停留在当前分支</td></tr><tr><td>git checkout -b [branch]</td><td>新建一个分支，并切换到该分支</td></tr><tr><td>git checkout -</td><td>切换到上一个分支</td></tr><tr><td>git merge [branch]</td><td>合并指定分支到当前分支</td></tr><tr><td>git cherry-pick [commit]</td><td>选择一个commit，合并进当前分支</td></tr><tr><td>git branch -d [branch-name]</td><td>删除分支</td></tr><tr><td>git push origin —delete [branch-name]</td><td>删除远程分支</td></tr><tr><td><strong>标签</strong></td></tr><tr><td>git tag</td><td>列出所有tag</td></tr><tr><td>git tag [tag]</td><td>新建一个tag在当前commit</td></tr><tr><td>git tag [tag] [commit]</td><td>新建一个tag在指定commit</td></tr><tr><td>git tag -d [tag]</td><td>删除本地tag</td></tr><tr><td>git push origin :refs/tags/[tagName]</td><td>删除远程tag</td></tr><tr><td>git show [tag]</td><td>查看tag信息</td></tr><tr><td>git push [remote] [tag]</td><td>提交指定tag</td></tr><tr><td>git push [remote] —tags</td><td>提交所有tag</td></tr><tr><td>git checkout -b [branch] [tag]</td><td>新建一个分支，指向某个tag</td></tr><tr><td><strong>查看信息</strong></td></tr><tr><td>git status</td><td>显示有变更的文件</td></tr><tr><td>git log</td><td>显示当前分支的版本历史</td></tr><tr><td>git log —stat</td><td>显示commit历史，以及每次commit发生变更的文件</td></tr><tr><td>git log -S [keyword]</td><td>搜索提交历史，根据关键词</td></tr><tr><td>git log -p [file]</td><td>显示指定文件相关的每一次diff</td></tr><tr><td>git log -5 —pretty —oneline</td><td>显示过去5次提交</td></tr><tr><td>git shortlog -sn</td><td>显示所有提交过的用户，按提交次数排序</td></tr><tr><td>git blame [file]</td><td>显示指定文件是什么人在什么时间修改过</td></tr><tr><td>git diff</td><td>显示暂存区和工作区的差异</td></tr><tr><td>git diff —shortstat “@{0 day ago}”</td><td>显示今天你写了多少行代码</td></tr><tr><td>git reflog</td><td>显示当前分支的最近几次提交</td></tr><tr><td><strong>远程同步</strong></td></tr><tr><td>git fetch [remote]</td><td>下载远程仓库的所有变动</td></tr><tr><td>git remote -v</td><td>显示所有远程仓库</td></tr><tr><td>git remote show [remote]</td><td>显示某个远程仓库的信息</td></tr><tr><td>git remote add [shortname] [url]</td><td>增加一个新的远程仓库，并命名</td></tr><tr><td>git pull [remote] [branch]</td><td>取回远程仓库的变化，并与本地分支合并</td></tr><tr><td>git push [remote] [branch]</td><td>上传本地指定分支到远程仓库</td></tr><tr><td>git push [remote] —force</td><td>强行推送当前分支到远程仓库，即使有冲突</td></tr><tr><td>git push [remote] —all</td><td>推送所有分支到远程仓库</td></tr><tr><td><strong>撤销</strong></td></tr><tr><td>git checkout .</td><td>恢复暂存区的所有文件到工作区</td></tr><tr><td>git checkout [file]</td><td>恢复暂存区的指定文件到工作区</td></tr><tr><td>git checkout [commit] [file]</td><td>恢复某个commit的指定文件到暂存区和工作区</td></tr><tr><td>git reset [file]</td><td>重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</td></tr><tr><td>git reset —hard</td><td>重置暂存区与工作区，与上一次commit保持一致</td></tr><tr><td>git reset [commit]</td><td>重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</td></tr><tr><td>git reset —hard [commit]</td><td>重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</td></tr><tr><td>git reset —keep [commit]</td><td>重置当前HEAD为指定commit，但保持暂存区和工作区不变</td></tr><tr><td>git revert [commit]</td><td>新建一个commit，用来撤销指定commit</td></tr><tr><td>git stash</td><td>暂时将未提交的变化移除，稍后再移入</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> 手册 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>butterfly 主题外挂标签</title>
      <link href="/2022/04/27%E5%B7%A5%E5%85%B7/%E5%B7%A5%E5%85%B7_Hexo_butterfly%20%E4%B8%BB%E9%A2%98%E5%A4%96%E6%8C%82%E6%A0%87%E7%AD%BE/45a94de5/"/>
      <url>/2022/04/27%E5%B7%A5%E5%85%B7/%E5%B7%A5%E5%85%B7_Hexo_butterfly%20%E4%B8%BB%E9%A2%98%E5%A4%96%E6%8C%82%E6%A0%87%E7%AD%BE/45a94de5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>标签外挂是 Hexo 独有的功能，并不是标准的 Markdown 格式，以下的写法，只适用于 Butterfly 主题。</p></blockquote><h1 id="Note-Bootstrap-Callout"><a href="#Note-Bootstrap-Callout" class="headerlink" title="Note (Bootstrap Callout)"></a>Note (Bootstrap Callout)</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note [class] [[no-icon]/[icon]] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>属性</th><th>用法</th><th>参数</th></tr></thead><tbody><tr><td>class</td><td>【可选】标识，不同的标识有不同的配色</td><td>default / primary / success / info / warning / danger</td></tr><tr><td>no-icon / icon</td><td>【可选】不显示 icon</td><td>可配置自定义 icon ,支持 fontawesome 图标</td></tr><tr><td>style</td><td>【可选】可以覆盖配置中的 style</td><td>simple/modern/flat/disabled</td></tr></tbody></table></div><h2 id="内置-icon"><a href="#内置-icon" class="headerlink" title="内置 icon"></a>内置 icon</h2><div class="note simple"><p>默认 提示块标籤</p></div><div class="note primary no-icon flat"><p>默认 提示块标籤</p></div><div class="note primary modern"><p>primary 提示块标籤</p></div><div class="note warning flat"><p>warning 提示块标籤</p></div><div class="note danger disabled"><p>danger 提示块标籤</p></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note simple %&#125;</span><br><span class="line">默认 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon %&#125;</span><br><span class="line">默认 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary modern %&#125;</span><br><span class="line">primary 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning flat %&#125;</span><br><span class="line">warning 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger disabled %&#125;</span><br><span class="line">danger 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><h2 id="自定义-icon"><a href="#自定义-icon" class="headerlink" title="自定义 icon"></a>自定义 icon</h2><div class="note icon simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon simple"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; simple %&#125;</span><br><span class="line">你是刷 Visa 还是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; simple %&#125;</span><br><span class="line">2021年快到了....</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><h1 id="Gallery"><a href="#Gallery" class="headerlink" title="Gallery"></a>Gallery</h1><h2 id="Gallery相册图库"><a href="#Gallery相册图库" class="headerlink" title="Gallery相册图库"></a>Gallery相册图库</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>属性</th><th>用法</th></tr></thead><tbody><tr><td>name</td><td>图库名字</td></tr><tr><td>description</td><td>图库描述</td></tr><tr><td>link</td><td>连接到对应相册的地址</td></tr><tr><td>img-url</td><td>图库封面的地址</td></tr></tbody></table></div><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">壁纸</div>  <p>收藏的一些壁纸</p>  <a href='/Gallery/wallpaper'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">OH MY GIRL</div>  <p>关于OH MY GIRL的图片</p>  <a href='/Gallery/ohmygirl'></a>  </figcaption>  </figure>  </div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup &#x27;壁纸&#x27; &#x27;收藏的一些壁纸&#x27; &#x27;/Gallery/wallpaper&#x27; https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %&#125;</span><br><span class="line">&#123;% galleryGroup &#x27;OH MY GIRL&#x27; &#x27;关于OH MY GIRL的图片&#x27; &#x27;/Gallery/ohmygirl&#x27; https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg %&#125;</span><br></pre></td></tr></table></figure>## Gallery相册> Gallery相册会自动根据图片长度（大小）进行排版，与markdown格式一样,可根据需要插入到相应的md。<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 图片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><div class="fj-gallery"><p><img src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg" alt=""></p>          </div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg</span>)</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure># tag-hide 内容隐藏> tag-hide内的标签外挂content内都不建议有h1 - h6 等标题,可能会导致Toc的滚动出现异常。## inline> inline 在文本里面添加按钮隐藏内容，只限文字<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideInline content,display,bg,color %&#125;</span><br></pre></td></tr></table></figure>| 属性    | 参数                    || ------- | ----------------------- || content | 文本内容                || display | 【可选】按钮显示的文字  || bg      | 【可选】 按钮的背景颜色 || color   | 【可选】 按钮文字的颜色 |哪个英文字母最酷？ <span class="hide-inline"><button type="button" class="hide-button" style="background-color: #00c4b6;color: #fff">查看答案  </button><span class="hide-content">因为西装裤(C装酷)</span></span><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">哪个英文字母最酷？ &#123;% hideInline 因为西装裤(C装酷),查看答案,#00c4b6,#fff %&#125;</span><br></pre></td></tr></table></figure>## block> block独立的block隐藏内容，可以隐藏很多内容，包括图片，代码块等等<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock 按钮文字 %&#125;</span><br><span class="line">文本，图片，代码块等</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure>| 属性    | 参数                    || ------- | ----------------------- || content | 文本内容                || display | 【可选】按钮显示的文字  || bg      | 【可选】 按钮的背景颜色 || color   | 【可选】 按钮文字的颜色 |<div class="hide-block"><button type="button" class="hide-button" style="">查看答案    </button><div class="hide-content"><p>PigPigPig…<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;PigPigPig...&#x27;</span>)</span><br></pre></td></tr></table></figure><br><img src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg" alt=""></p></div></div>## Toggle> 如果你需要展示的内容太多，可以把它隐藏在收缩框里，需要时再把它展开。（display 不能包含英文逗号，可用&sbquo;）<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideToggle display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideToggle %&#125;</span><br></pre></td></tr></table></figure><details class="toggle" ><summary class="toggle-button" style="">Butterfly安装方法</summary><div class="toggle-content"><p>在你的博客根目录里</p><p>git clone -b master <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes/Butterfly</p><p>如果想要安装比较新的dev分支，可以</p><p>git clone -b dev <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes/Butterfly</p></div></details># mermaid 图表> mermaid文档: https://mermaid-js.github.io/mermaid/#/ > 使用mermaid标籤可以绘製Flowchart（流程图）、Sequence diagram（时序图）、Class Diagram（类别图）、State Diagram（状态图）、Gantt（甘特图）和Pie Chart（圆形图）<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">内容</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>## Flowchart（流程图）<div class="mermaid-wrap"><pre class="mermaid-src" hidden>  flowchart TD    Start --&gt; Stop  </pre></div><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  flowchart LR    A[Hard edge] --&gt;|Link text| B(Round edge)    B --&gt; C{Decision}    C --&gt;|One| D[Result one]    C --&gt;|Two| E[Result two]  </pre></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">flowchart TD</span><br><span class="line"><span class="code">    Start --&gt; Stop</span></span><br><span class="line"><span class="code">&#123;% endmermaid %&#125;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">flowchart LR</span><br><span class="line"><span class="code">    A[Hard edge] --&gt;|Link text| B(Round edge)</span></span><br><span class="line"><span class="code">    B --&gt; C&#123;Decision&#125;</span></span><br><span class="line"><span class="code">    C --&gt;|One| D[Result one]</span></span><br><span class="line"><span class="code">    C --&gt;|Two| E[Result two]</span></span><br><span class="line"><span class="code">&#123;% endmermaid %&#125;</span></span><br></pre></td></tr></table></figure>## Sequence diagram（时序图）<div class="mermaid-wrap"><pre class="mermaid-src" hidden>  sequenceDiagram    Alice-&gt;&gt;John: Hello John, how are you?    John--&gt;&gt;Alice: Great!    Alice-)John: See you later!  </pre></div><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  sequenceDiagram    actor Alice    actor Bob    Alice-&gt;&gt;Bob: Hi Bob    Bob-&gt;&gt;Alice: Hi Alice  </pre></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">sequenceDiagram</span><br><span class="line"><span class="code">    Alice-&gt;&gt;John: Hello John, how are you?</span></span><br><span class="line"><span class="code">    John--&gt;&gt;Alice: Great!</span></span><br><span class="line"><span class="code">    Alice-)John: See you later!</span></span><br><span class="line"><span class="code">&#123;% endmermaid %&#125;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">sequenceDiagram</span><br><span class="line"><span class="code">    actor Alice</span></span><br><span class="line"><span class="code">    actor Bob</span></span><br><span class="line"><span class="code">    Alice-&gt;&gt;Bob: Hi Bob</span></span><br><span class="line"><span class="code">    Bob-&gt;&gt;Alice: Hi Alice</span></span><br><span class="line"><span class="code">&#123;% endmermaid %&#125;</span></span><br></pre></td></tr></table></figure>## Class Diagram（类别图）<div class="mermaid-wrap"><pre class="mermaid-src" hidden>  classDiagram      Animal &lt;|-- Duck      Animal &lt;|-- Fish      Animal &lt;|-- Zebra      Animal : +int age      Animal : +String gender      Animal: +isMammal()      Animal: +mate()      class Duck{          +String beakColor          +swim()          +quack()      }      class Fish{          -int sizeInFeet          -canEat()      }      class Zebra{          +bool is_wild          +run()      }  </pre></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">classDiagram</span><br><span class="line"><span class="code">      Animal &lt;|-- Duck</span></span><br><span class="line"><span class="code">      Animal &lt;|-- Fish</span></span><br><span class="line"><span class="code">      Animal &lt;|-- Zebra</span></span><br><span class="line"><span class="code">      Animal : +int age</span></span><br><span class="line"><span class="code">      Animal : +String gender</span></span><br><span class="line"><span class="code">      Animal: +isMammal()</span></span><br><span class="line"><span class="code">      Animal: +mate()</span></span><br><span class="line"><span class="code">      class Duck&#123;</span></span><br><span class="line"><span class="code">          +String beakColor</span></span><br><span class="line"><span class="code">          +swim()</span></span><br><span class="line"><span class="code">          +quack()</span></span><br><span class="line"><span class="code">      &#125;</span></span><br><span class="line"><span class="code">      class Fish&#123;</span></span><br><span class="line"><span class="code">          -int sizeInFeet</span></span><br><span class="line"><span class="code">          -canEat()</span></span><br><span class="line"><span class="code">      &#125;</span></span><br><span class="line"><span class="code">      class Zebra&#123;</span></span><br><span class="line"><span class="code">          +bool is_wild</span></span><br><span class="line"><span class="code">          +run()</span></span><br><span class="line"><span class="code">      &#125;</span></span><br><span class="line"><span class="code">&#123;% endmermaid %&#125;</span></span><br></pre></td></tr></table></figure>## State Diagram（状态图）<div class="mermaid-wrap"><pre class="mermaid-src" hidden>  stateDiagram-v2    [*] --&gt; Still    Still --&gt; [*]    Still --&gt; Moving    Moving --&gt; Still    Moving --&gt; Crash    Crash --&gt; [*]  </pre></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">stateDiagram-v2</span><br><span class="line"><span class="code">    [*] --&gt; Still</span></span><br><span class="line"><span class="code">    Still --&gt; [*]</span></span><br><span class="line"><span class="code">    Still --&gt; Moving</span></span><br><span class="line"><span class="code">    Moving --&gt; Still</span></span><br><span class="line"><span class="code">    Moving --&gt; Crash</span></span><br><span class="line"><span class="code">    Crash --&gt; [*]</span></span><br><span class="line"><span class="code">&#123;% endmermaid %&#125;</span></span><br></pre></td></tr></table></figure>## Gantt（甘特图）<div class="mermaid-wrap"><pre class="mermaid-src" hidden>  gantt    title A Gantt Diagram    dateFormat  YYYY-MM-DD    section Section    Task in one           :a1, 2014-01-01, 30d    Another task     :after a1  , 20d    section Another    Task in sec      :2014-01-12  , 12d    Another task      : 24d  </pre></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">gantt</span><br><span class="line"><span class="code">    title A Gantt Diagram</span></span><br><span class="line"><span class="code">    dateFormat  YYYY-MM-DD</span></span><br><span class="line"><span class="code">    section Section</span></span><br><span class="line"><span class="code">    Task in one           :a1, 2014-01-01, 30d</span></span><br><span class="line"><span class="code">    Another task     :after a1  , 20d</span></span><br><span class="line"><span class="code">    section Another</span></span><br><span class="line"><span class="code">    Task in sec      :2014-01-12  , 12d</span></span><br><span class="line"><span class="code">    Another task      : 24d</span></span><br><span class="line"><span class="code">&#123;% endmermaid %&#125;</span></span><br></pre></td></tr></table></figure>## Pie Chart（圆形图）<div class="mermaid-wrap"><pre class="mermaid-src" hidden>  pie    title Key elements in Product X    &quot;Calcium&quot; : 42.96    &quot;Potassium&quot; : 50.05    &quot;Magnesium&quot; : 10.01    &quot;Iron&quot; :  5  </pre></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">pie</span><br><span class="line"><span class="code">    title Key elements in Product X</span></span><br><span class="line"><span class="code">    &quot;Calcium&quot; : 42.96</span></span><br><span class="line"><span class="code">    &quot;Potassium&quot; : 50.05</span></span><br><span class="line"><span class="code">    &quot;Magnesium&quot; : 10.01</span></span><br><span class="line"><span class="code">    &quot;Iron&quot; :  5</span></span><br><span class="line"><span class="code">&#123;% endmermaid %&#125;</span></span><br></pre></td></tr></table></figure># Tabs<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Unique name   : Unique name of tabs block tag without comma.</span><br><span class="line"><span class="code">                Will be used in #id&#x27;s as prefix for each tab with their index numbers.</span></span><br><span class="line"><span class="code">                If there are whitespaces in name, for generate #id all whitespaces will replaced by dashes.</span></span><br><span class="line"><span class="code">                Only for current url of post/page must be unique!</span></span><br><span class="line"><span class="code">[index]       : Index number of active tab.</span></span><br><span class="line"><span class="code">                If not specified, first tab (1) will be selected.</span></span><br><span class="line"><span class="code">                If index is -1, no tab will be selected. It&#x27;s will be something like spoiler.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br><span class="line"><span class="code">[Tab caption] : Caption of current tab.</span></span><br><span class="line"><span class="code">                If not caption specified, unique name with tab index suffix will be used as caption of tab.</span></span><br><span class="line"><span class="code">                If not caption specified, but specified icon, caption will empty.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br><span class="line"><span class="code">[@icon]       : FontAwesome icon name (full-name, look like &#x27;fas fa-font&#x27;)</span></span><br><span class="line"><span class="code">                Can be specified with or without space; e.g. &#x27;Tab caption @icon&#x27; similar to &#x27;Tab caption@icon&#x27;.</span></span><br><span class="line"><span class="code">                Optional parameter.</span></span><br></pre></td></tr></table></figure><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure># Button<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn [url],[text],[icon],[color] [style] [layout] [position] [size] %&#125;</span><br><span class="line"></span><br><span class="line">[url]         : 链接</span><br><span class="line">[text]        : 按钮文字</span><br><span class="line">[icon]        : [可选] 图标</span><br><span class="line">[color]       : [可选] 按钮背景顔色(默认style时）</span><br><span class="line"><span class="code">                      按钮字体和边框顔色(outline时)</span></span><br><span class="line"><span class="code">                      default/blue/pink/red/purple/orange/green</span></span><br><span class="line"><span class="code">[style]       : [可选] 按钮样式 默认实心</span></span><br><span class="line"><span class="code">                      outline/留空</span></span><br><span class="line"><span class="code">[layout]      : [可选] 按钮佈局 默认为line</span></span><br><span class="line"><span class="code">                      block/留空</span></span><br><span class="line"><span class="code">[position]    : [可选] 按钮位置 前提是设置了layout为block 默认为左边</span></span><br><span class="line"><span class="code">                      center/right/留空</span></span><br><span class="line"><span class="code">[size]        : [可选] 按钮大小</span></span><br><span class="line"><span class="code">                      larger/留空</span></span><br></pre></td></tr></table></figure>## 行内<a class="btn-beautify " href="#"   title="#"><span>#</span></a><a class="btn-beautify outline" href="#"   title="#"><span>#</span></a><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn &#x27;#&#x27;,# %&#125;</span><br><span class="line">&#123;% btn &#x27;#&#x27;,#,,outline%&#125;</span><br></pre></td></tr></table></figure>## 固定<a class="btn-beautify block larger" href="#"   title="#"><i class="far fa-hand-point-right"></i><span>#</span></a><a class="btn-beautify block center larger" href="#"   title="#"><i class="far fa-hand-point-right"></i><span>#</span></a><a class="btn-beautify block right blue larger" href="#"   title="#"><i class="far fa-hand-point-right"></i><span>#</span></a><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn &#x27;#&#x27;,#,far fa-hand-point-right,block larger %&#125;</span><br><span class="line">&#123;% btn &#x27;#&#x27;,#,far fa-hand-point-right,block center larger %&#125;</span><br><span class="line">&#123;% btn &#x27;#&#x27;,#,far fa-hand-point-right,block right blue larger %&#125;</span><br></pre></td></tr></table></figure>## 居中多个<div class="btn-center"><a class="btn-beautify larger" href="#"   title="#"><i class="far fa-hand-point-right"></i><span>#</span></a><a class="btn-beautify blue larger" href="#"   title="#"><i class="far fa-hand-point-right"></i><span>#</span></a><a class="btn-beautify pink larger" href="#"   title="#"><i class="far fa-hand-point-right"></i><span>#</span></a><a class="btn-beautify outline purple larger" href="#"   title="#"><i class="far fa-hand-point-right"></i><span>#</span></a><a class="btn-beautify outline orange larger" href="#"   title="#"><i class="far fa-hand-point-right"></i><span>#</span></a><a class="btn-beautify outline green larger" href="#"   title="#"><i class="far fa-hand-point-right"></i><span>#</span></a></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn-center&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% btn &#x27;#&#x27;,#,far fa-hand-point-right,larger %&#125;</span><br><span class="line">&#123;% btn &#x27;#&#x27;,#,far fa-hand-point-right,blue larger %&#125;</span><br><span class="line">&#123;% btn &#x27;#&#x27;,#,far fa-hand-point-right,pink larger %&#125;</span><br><span class="line">&#123;% btn &#x27;#&#x27;,#,far fa-hand-point-right,outline purple larger %&#125;</span><br><span class="line">&#123;% btn &#x27;#&#x27;,#,far fa-hand-point-right,outline orange larger %&#125;</span><br><span class="line">&#123;% btn &#x27;#&#x27;,#,far fa-hand-point-right,outline green larger %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h1 id="inlineImg-内联图片"><a href="#inlineImg-内联图片" class="headerlink" title="inlineImg 内联图片"></a>inlineImg 内联图片</h1><blockquote><p>主题中的图片都是默认以块级元素显示，如果想以内联元素显示，可以使用这个标签外挂。</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% inlineImg [src] [height] %&#125;</span><br><span class="line"></span><br><span class="line">[src]      :    图片链接</span><br><span class="line">[height]   ：   【可选】图片高度单位：px</span><br></pre></td></tr></table></figure><p>我后面是一张行内图片：<img class="inline-img" src="https://i.loli.net/2021/03/19/5M4jUB3ynq7ePgw.png" style="height:150px"/></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我后面是一张行内图片：&#123;% inlineImg https://i.loli.net/2021/03/19/5M4jUB3ynq7ePgw.png 150px %&#125;</span><br></pre></td></tr></table></figure><h1 id="label-高亮文字"><a href="#label-高亮文字" class="headerlink" title="label 高亮文字"></a>label 高亮文字</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% label text color %&#125;</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>参数</th><th>用法</th></tr></thead><tbody><tr><td>text</td><td>高亮文字</td></tr><tr><td>color</td><td>【可选】背景颜色，默认为 default<br>default/blue/pink/red/purple/orange/green</td></tr></tbody></table></div><p>臣亮言：<mark class="hl-label default">先帝</mark> 创业未半，而<mark class="hl-label blue">中道崩殂</mark> 。今天下三分，<mark class="hl-label pink">益州疲敝</mark> ，此诚<mark class="hl-label red">危急存亡之秋</mark> 也！然侍衞之臣，不懈于内；<mark class="hl-label purple">忠志之士</mark> ，忘身于外者，盖追先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士之气；不宜妄自菲薄，引喻失义，以塞忠谏之路也。<br>宫中、府中，俱为一体；陟罚臧否，不宜异同。若有<mark class="hl-label orange">作奸</mark> 、<mark class="hl-label green">犯科</mark> ，及为忠善者，宜付有司，论其刑赏，以昭陛下平明之治；不宜偏私，使内外异法也。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">臣亮言：&#123;% label 先帝 %&#125;创业未半，而&#123;% label 中道崩殂 blue %&#125;。今天下三分，&#123;% label 益州疲敝 pink %&#125;，此诚&#123;% label 危急存亡之秋 red %&#125;也！然侍衞之臣，不懈于内；&#123;% label 忠志之士 purple %&#125;，忘身于外者，盖追先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士之气；不宜妄自菲薄，引喻失义，以塞忠谏之路也。</span><br><span class="line">宫中、府中，俱为一体；陟罚臧否，不宜异同。若有&#123;% label 作奸 orange %&#125;、&#123;% label 犯科 green %&#125;，及为忠善者，宜付有司，论其刑赏，以昭陛下平明之治；不宜偏私，使内外异法也。</span><br></pre></td></tr></table></figure><h1 id="timeline-时间线"><a href="#timeline-时间线" class="headerlink" title="timeline 时间线"></a>timeline 时间线</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline title,color %&#125;</span><br><span class="line">&lt;!-- timeline title --&gt;</span><br><span class="line">xxxxx</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline title --&gt;</span><br><span class="line">xxxxx</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>参数</th><th>用法</th></tr></thead><tbody><tr><td>title</td><td>标题/时间线</td></tr><tr><td>color</td><td>timeline 颜色<br>default(留空) / blue / pink / red / purple / orange / green</td></tr></tbody></table></div><div class="timeline pink"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2022</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>01-02</p></div></div><div class='timeline-item-content'><p>这是测试页面</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>01-30</p></div></div><div class='timeline-item-content'><p>这是测试页面</p></div></div></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 2022,pink%&#125;</span><br><span class="line">&lt;!-- timeline 01-02 --&gt;</span><br><span class="line">这是测试页面</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline 01-30 --&gt;</span><br><span class="line">这是测试页面</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><h1 id="flink-链接列表"><a href="#flink-链接列表" class="headerlink" title="flink 链接列表"></a>flink 链接列表</h1><blockquote><p>支持 yml 格式</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% flink %&#125;</span><br><span class="line">xxxxxx</span><br><span class="line">&#123;% endflink %&#125;</span><br></pre></td></tr></table></figure><div class="flink"><div class="flink-name">网站</div><div class="flink-desc">值得推荐的网站</div> <div class="flink-list">          <div class="flink-list-item">            <a href="https://www.youtube.com/" title="Youtube" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png" onerror='this.onerror=null;this.src="/img/friend_404.gif"' alt="Youtube" />              </div>              <div class="flink-item-name">Youtube</div>               <div class="flink-item-desc" title="视频网站">视频网站</div>            </a>          </div>          <div class="flink-list-item">            <a href="https://twitter.com/" title="Twitter" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png" onerror='this.onerror=null;this.src="/img/friend_404.gif"' alt="Twitter" />              </div>              <div class="flink-item-name">Twitter</div>               <div class="flink-item-desc" title="社交分享">社交分享</div>            </a>          </div></div></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% flink %&#125;</span><br><span class="line"><span class="bullet">-</span> class<span class="emphasis">_name: 网站</span></span><br><span class="line"><span class="emphasis">  class_</span>desc: 值得推荐的网站</span><br><span class="line">  link<span class="emphasis">_list:</span></span><br><span class="line"><span class="emphasis">    - name: Youtube</span></span><br><span class="line"><span class="emphasis">      link: https://www.youtube.com/</span></span><br><span class="line"><span class="emphasis">      avatar: https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png</span></span><br><span class="line"><span class="emphasis">      descr: 视频网站</span></span><br><span class="line"><span class="emphasis">    - name: Twitter</span></span><br><span class="line"><span class="emphasis">      link: https://twitter.com/</span></span><br><span class="line"><span class="emphasis">      avatar: https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png</span></span><br><span class="line"><span class="emphasis">      descr: 社交分享</span></span><br><span class="line"><span class="emphasis">&#123;% endflink %&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法</title>
      <link href="/2022/04/26%E5%B7%A5%E5%85%B7/%E5%B7%A5%E5%85%B7_Markdown_Markdown%E8%AF%AD%E6%B3%95/3c50d03d/"/>
      <url>/2022/04/26%E5%B7%A5%E5%85%B7/%E5%B7%A5%E5%85%B7_Markdown_Markdown%E8%AF%AD%E6%B3%95/3c50d03d/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Markdown 是一种轻量级的标记语言，可用于在纯文本文档中添加格式化元素。</p></blockquote><h1 id="Markdown-标题语法"><a href="#Markdown-标题语法" class="headerlink" title="Markdown 标题语法"></a>Markdown 标题语法</h1><p>要创建标题，请在单词或短语前面添加井号 (#) 。# 的数量代表了标题的级别。<br>不同的 Markdown 应用程序处理 # 和标题之间的空格方式并不一致。为了兼容考虑，在 # 和标题之间加一个空格进行分隔。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// 最多支持 6级标题</span><br><span class="line"># Heading level 1</span><br><span class="line">###### Heading level 6</span><br></pre></td></tr></table></figure></p><h1 id="Markdown-换行语法"><a href="#Markdown-换行语法" class="headerlink" title="Markdown 换行语法"></a>Markdown 换行语法</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 换行可使用&lt;br&gt; 标签</span><br><span class="line">&lt;br&gt;</span><br></pre></td></tr></table></figure><h1 id="Markdown-强调语法"><a href="#Markdown-强调语法" class="headerlink" title="Markdown 强调语法"></a>Markdown 强调语法</h1><ol><li>加粗文本在单词或短语的前后各添加两个星号或下划线</li><li>斜体显示文本，请在单词或短语前后添加一个星号或下划线</li><li>同时用粗体和斜体突出显示文本，请在单词或短语的前后各添加三个星号或下划线。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 加粗</span><br><span class="line">**Blod**</span><br><span class="line">__Blod__</span><br><span class="line"></span><br><span class="line">// 斜体</span><br><span class="line">*Italic*</span><br><span class="line">_Italic_</span><br><span class="line"></span><br><span class="line">// 同时用粗体和斜体突出显示文本</span><br><span class="line">***BlodItalic***</span><br><span class="line">___BlodItalic___</span><br></pre></td></tr></table></figure><h1 id="Markdown-引用语法"><a href="#Markdown-引用语法" class="headerlink" title="Markdown 引用语法"></a>Markdown 引用语法</h1><ol><li>创建块引用，请在段落前添加一个 <code>&gt;</code> 符号</li><li>块引用可以嵌套。在要嵌套的段落前添加一个 <code>&gt;&gt;</code> 符号</li><li>带有其它元素的块引用：块引用可以包含其他 Markdown 格式的元素<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 引用</span><br><span class="line">&gt; Dorothy followed her through many of the beautiful rooms in her castle.</span><br><span class="line">// 嵌套引用</span><br><span class="line">&gt;&gt; Dorothy followed her through many of the beautiful rooms in her castle.</span><br><span class="line">// 带有其它元素的块引用</span><br><span class="line">&gt; - Revenue was off the chart.</span><br><span class="line">&gt;  *Everything* is going according to **plan**.</span><br></pre></td></tr></table></figure><h1 id="Markdown-列表语法"><a href="#Markdown-列表语法" class="headerlink" title="Markdown 列表语法"></a>Markdown 列表语法</h1></li><li>有序列表：在每个列表项前添加数字并紧跟一个英文句点</li><li>无序列表：在每个列表项前面添加破折号 <code>(-)、星号 (*) 或加号 (+)</code></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 有序列表</span><br><span class="line">1. first</span><br><span class="line">2. second</span><br><span class="line">    1. Indented item</span><br><span class="line">3. Third item</span><br><span class="line"></span><br><span class="line">// 无序列表</span><br><span class="line">- Item</span><br><span class="line">* Item</span><br><span class="line">+ Item</span><br><span class="line">    - Indented item</span><br><span class="line">- Item</span><br></pre></td></tr></table></figure><h1 id="Markdown-代码语法"><a href="#Markdown-代码语法" class="headerlink" title="Markdown 代码语法"></a>Markdown 代码语法</h1><ol><li>要将单词或短语表示为代码，请将其包裹在反引号 (`) 中。</li><li>转义反引号：可以通过将单词或短语包裹在双反引号(``)中。</li><li>围栏代码块：在代码块之前和之后的行上使用三个反引号（```）或三个波浪号（~~~）。</li><li>语法高亮：在第一个三个反引号或三个波浪号后面写上<code>对应的编程语言</code>。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 将单词表示为代码</span><br><span class="line">At the command prompt, type `nano`.</span><br><span class="line">// 转义反引号</span><br><span class="line">``Use `code` in your Markdown file.``</span><br></pre></td></tr></table></figure></li></ol><p>// 代码语法高亮<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;china!&#x27;</span>)</span><br></pre></td></tr></table></figure></p><h1 id="Markdown-分隔线语法"><a href="#Markdown-分隔线语法" class="headerlink" title="Markdown 分隔线语法"></a>Markdown 分隔线语法</h1><p>创建分隔线，请在单独一行上使用三个或多个星号 (<em>*</em>)、破折号 (—-) 或下划线 (<em>_</em>) ，并且不能包含其他内容。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 分隔线</span><br><span class="line">***</span><br><span class="line">---</span><br><span class="line">___</span><br></pre></td></tr></table></figure><h1 id="Markdown-链接语法"><a href="#Markdown-链接语法" class="headerlink" title="Markdown 链接语法"></a>Markdown 链接语法</h1><ol><li>链接文本放在中括号内，链接地址放在后面的括号中，链接title可选</li><li>网址和Email地址：使用<code>尖括号</code>可以很方便地把URL或者email地址变成可点击的链接<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 链接写法</span><br><span class="line">[超链接显示名](超链接地址 &quot;超链接title&quot;)</span><br><span class="line">// 网址和Email地址</span><br><span class="line">&lt;https://markdown.com.cn&gt;</span><br><span class="line">&lt;fake@example.com&gt;</span><br></pre></td></tr></table></figure></li></ol><h1 id="Markdown-图片语法"><a href="#Markdown-图片语法" class="headerlink" title="Markdown 图片语法"></a>Markdown 图片语法</h1><ol><li>添加图像，请使用感叹号 (!), 然后在方括号增加替代文本，图片链接放在圆括号里，括号里的链接后可以增加一个可选的图片标题文本</li><li>链接图片：给图片增加链接，将图像的Markdown 括在方括号中，然后将链接添加在圆括号中<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 普通图片</span><br><span class="line">![图片alt](图片链接 &quot;图片title&quot;)</span><br><span class="line">// 链接图片</span><br><span class="line">[![图片alt](图片链接 &quot;图片title&quot;)](https://example.com)</span><br></pre></td></tr></table></figure><h1 id="Markdown-表格"><a href="#Markdown-表格" class="headerlink" title="Markdown 表格"></a>Markdown 表格</h1></li><li>基础表格：使用三个或多个连字符（—-）创建每列的标题，并使用管道（|）分隔每列。</li><li>表格对齐：在标题行中的连字符的左侧，右侧或两侧添加冒号（:），将列中的文本对齐到左侧，右侧或中心。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 基础表格</span><br><span class="line">| Syntax    | Description |</span><br><span class="line">| --------- | ----------- |</span><br><span class="line">| Header    | Title       |</span><br><span class="line">| Paragraph | Text        |</span><br><span class="line"></span><br><span class="line">// 对齐</span><br><span class="line">| Syntax | Description |   Test Text |</span><br><span class="line">| :----- | :---------: | ----------: |</span><br><span class="line">| Header |    Title    | Here&#x27;s this |</span><br><span class="line">| left   |   middle    |       right |</span><br></pre></td></tr></table></figure><h1 id="Markdown-脚注"><a href="#Markdown-脚注" class="headerlink" title="Markdown 脚注"></a>Markdown 脚注</h1><p>在方括号（<sup><a href="#fn_1" id="reffn_1">1</a></sup>）内添加插入符号和标识符。标识符可以是数字或单词，但不能包含空格或制表符。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 脚注</span><br><span class="line">[^1]: This is the first footnote.</span><br></pre></td></tr></table></figure></p><h1 id="Markdown-定义列表"><a href="#Markdown-定义列表" class="headerlink" title="Markdown 定义列表"></a>Markdown 定义列表</h1><p>第一行上键入术语。在下一行，键入一个冒号，后跟一个空格和定义。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Term</span><br><span class="line">: This is the definition of the first term.</span><br></pre></td></tr></table></figure><h1 id="markdown-删除线"><a href="#markdown-删除线" class="headerlink" title="markdown 删除线"></a>markdown 删除线</h1><p>删除单词，在单词前后使用两个波浪号<code>~~</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 删除线</span><br><span class="line">~~Deleted~~ not deleted</span><br></pre></td></tr></table></figure><h1 id="Markdown-任务列表语法"><a href="#Markdown-任务列表语法" class="headerlink" title="Markdown 任务列表语法"></a>Markdown 任务列表语法</h1><p>在任务列表项之前添加破折号-和方括号[ ]，并在[ ]前面加上空格。要选择一个复选框，请在方括号[x]之间添加 x 。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// 任务列表</span><br><span class="line">- [x] Write the press release</span><br><span class="line">- [ ] Update the website</span><br></pre></td></tr></table></figure><h1 id="Markdown-使用-Emoji-表情"><a href="#Markdown-使用-Emoji-表情" class="headerlink" title="Markdown 使用 Emoji 表情"></a>Markdown 使用 Emoji 表情</h1><p>符号简码：以冒号开头和结尾，并包含表情符号的名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">去露营了！ :tent: 很快回来。</span><br><span class="line">真好笑！ :joy:</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> Markdown </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Github + Hexo 搭建个人博客</title>
      <link href="/2022/04/25%E5%B7%A5%E5%85%B7/%E5%B7%A5%E5%85%B7_Hexo_Github-Hexo-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/587b4c9b/"/>
      <url>/2022/04/25%E5%B7%A5%E5%85%B7/%E5%B7%A5%E5%85%B7_Hexo_Github-Hexo-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/587b4c9b/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p></blockquote><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="基本环境"><a href="#基本环境" class="headerlink" title="基本环境"></a>基本环境</h2><ol><li>NodeJS</li><li>Git</li><li>Hexo 框架</li></ol><h2 id="创建Github仓库"><a href="#创建Github仓库" class="headerlink" title="创建Github仓库"></a>创建Github仓库</h2><ol><li>格式必须为：<code>&lt;用户名&gt;.github.io</code>，然后点击 Create repository</li><li>生成 SSHKeys<ol><li>检查SSH keys是否存在<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> -al ~/.ssh</span><br><span class="line"><span class="comment"># Lists the files in your .ssh directory, if they exist</span></span><br></pre></td></tr></table></figure></li><li>生成新的ssh key<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;your_email@example.com&quot;</span></span><br><span class="line"><span class="comment">#生成完成后在 C:\Users\用户名\.ssh 目录下</span></span><br></pre></td></tr></table></figure></li><li>将ssh key添加到GitHub中<ol><li>文本编辑器打开<code>id_rsa.pub</code>文件复制内容</li><li>Github —&gt; Settings —&gt; SH and GPG keys —&gt; New SSH key (<strong>Title 随意取</strong>，将内容粘贴到 Key文本框) —&gt; Add SSH key</li></ol></li><li>测试ssh是否绑定成功：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><h2 id="Hexo-初始化"><a href="#Hexo-初始化" class="headerlink" title="Hexo 初始化"></a>Hexo 初始化</h2></li></ol></li><li>安装Hexo（如已安装可跳过此步骤）<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">``2. 初始化</span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure></li><li>初始化完成之后，打开 <code>_config.yml</code> 文件，添加以下配置信息<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">https://github.com/HaloBoys/HaloBoys.github.io.git</span></span><br><span class="line">  <span class="comment"># github 更新之后仓库默认分支为 main</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure></li><li>打开本地博客目录安装<code>hexo-deployer-git</code>自动部署发布工具<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li>本地编写完博客之后输入命令：<code>hexo g</code> 将md 文件转换为html文件<br>然后输入命令：<code>hexo d</code> 部署页面到远程仓库，会弹出提示框要求填写<strong>用户名和 token 令牌</strong><br>Token 令牌获取路径：<strong>Settings —&gt; Developer settings —&gt; Personal access tokens —&gt; Generate new token</strong>  </li></ol><h1 id="Hexo-主题-Butterfly"><a href="#Hexo-主题-Butterfly" class="headerlink" title="Hexo 主题 (Butterfly)"></a>Hexo 主题 (Butterfly)</h1><blockquote><p><a href="https://github.com/jerryc127/hexo-theme-butterfly">https://github.com/jerryc127/hexo-theme-butterfly</a> [butterfly官方文档]</p></blockquote><h2 id="功能配置"><a href="#功能配置" class="headerlink" title="功能配置"></a>功能配置</h2><h3 id="评论功能："><a href="#评论功能：" class="headerlink" title="评论功能："></a>评论功能：</h3><h4 id="Gitalk"><a href="#Gitalk" class="headerlink" title="Gitalk"></a>Gitalk</h4><p><a href="https://github.com/gitalk/gitalk">Gitalk</a> 是一个基于 GitHub Issue 和 Preact 开发的评论插件。</p><ol><li>在github上创建一个仓库，Gitalk会把评论放在这个仓库的issues里面。<br><img src="https://raw.githubusercontent.com/HaloBoys/PicGoMyDevice/main/img/20220510184112.png" alt="20220510184112"></li><li>在github上申请一个GitHub OAuth application，来让Gitalk有权限操作github上的仓库。详情<a href="https://docs.github.com/cn/developers/apps/getting-started-with-apps/about-apps#about-oauth-apps">GitHub 应用文档</a></li></ol><ul><li>打开github网站登陆后，点击右上角Settings —&gt; Developer settings —&gt; OAuth Apps —&gt; New OAuth App<br><img src="https://raw.githubusercontent.com/HaloBoys/PicGoMyDevice/main/img/20220510184615.png" alt="20220510184615"></li></ul><div class="table-container"><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>Application name</td><td>【必填】OAuth的名字</td></tr><tr><td>Homepage URL</td><td>【必填】应用的网址，哪个网站用了Gitalk组件，就填写这个网址</td></tr><tr><td>Application description</td><td>【选填】该OAuth的说明</td></tr><tr><td>Authorization callback URL</td><td>【必填】授权成功后回调网址，跟Homepage URL参数保持一致就好</td></tr></tbody></table></div><ul><li>注册成功后会自动跳转到这个OAuth应用的页面，或在Developer settings —&gt; OAuth Apps后就能看见你创建的OAuth应用名字，新创建的OAuth应用里面的<code>Client ID</code>和<code>Client Secret</code>就是我们需要的参数。<br><img src="https://raw.githubusercontent.com/HaloBoys/PicGoMyDevice/main/img/20220510185258.png" alt="20220510185258"></li><li>进入主题Hexo 主题配置文件<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gitalk</span></span><br><span class="line"><span class="comment"># https://github.com/gitalk/gitalk</span></span><br><span class="line"><span class="attr">gitalk:</span> </span><br><span class="line">  <span class="attr">client_id:</span> </span><br><span class="line">  <span class="attr">client_secret:</span> </span><br><span class="line">  <span class="attr">repo:</span> </span><br><span class="line">  <span class="comment"># 仓库的创建者</span></span><br><span class="line">  <span class="attr">owner:</span> </span><br><span class="line">  <span class="comment"># 如果仓库有多个人可以操作，那么在这里以数组形式写出</span></span><br><span class="line">  <span class="attr">admin:</span></span><br><span class="line">  <span class="attr">option:</span></span><br></pre></td></tr></table></figure><h4 id="Twikoo"><a href="#Twikoo" class="headerlink" title="Twikoo"></a>Twikoo</h4><a href="https://twikoo.js.org/quick-start.html#%E7%8E%AF%E5%A2%83%E5%88%9D%E5%A7%8B%E5%8C%96">Twikoo</a> 是一个简洁、安全、无后端的静态网站评论系统，基于腾讯云开发。</li></ul><h3 id="在线聊天"><a href="#在线聊天" class="headerlink" title="在线聊天"></a>在线聊天</h3><h4 id="Chatra"><a href="#Chatra" class="headerlink" title="Chatra"></a>Chatra</h4><ol><li><a href="https://chatra.com/cn/">https://chatra.com/cn/</a> [chatra] 直接注册账号，然后在这里将key 复制到主题_config配置文件中<br><img src="https://raw.githubusercontent.com/HaloBoys/PicGoMyDevice/main/img/202204271621186.png" alt="image-20220427162100013"></li><li>修改主题_config配置文件<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># chatra</span><br><span class="line"># https://chatra.io/</span><br><span class="line">chatra:</span><br><span class="line">  enable: true</span><br><span class="line">  id:  xxxxxxx // Public key</span><br></pre></td></tr></table></figure></li><li>Chatra 手机/电脑 App 下载<br><img src="https://raw.githubusercontent.com/HaloBoys/PicGoMyDevice/main/img/202204271638696.png" alt="image-20220427162608710"></li></ol><h3 id="分享功能"><a href="#分享功能" class="headerlink" title="分享功能"></a>分享功能</h3><ol><li><a href="https://github.com/overtrue/share.js/">https://github.com/overtrue/share.js/</a>  [Share.js]</li><li><a href="https://www.addtoany.com/">https://www.addtoany.com/</a>  [一个第三方分享服务] </li><li><a href="https://www.addthis.com/">https://www.addthis.com/</a> [一个第三方分享服务]</li></ol><h3 id="网站搜索系统"><a href="#网站搜索系统" class="headerlink" title="网站搜索系统"></a>网站搜索系统</h3><ol><li><a href="https://github.com/thom4parisot/hexo-algolia">https://github.com/thom4parisot/hexo-algolia</a></li><li>localsearch</li><li>安装 <a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a>，根据官方文档去做相应配置</li><li>修改主题配置文件<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line"><span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">preload:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">CDN:</span></span><br></pre></td></tr></table></figure></li></ol><div class="table-container"><table><thead><tr><th>参数</th><th>功能</th></tr></thead><tbody><tr><td>enable</td><td>是否开启本地搜索</td></tr><tr><td>preload</td><td>预加载，开启后，进入网页后会自动加载搜索文件。关闭时，只有点击搜索按钮后，才会加载搜索文件</td></tr><tr><td>CDN</td><td>搜索文件的 CDN 地址（默认使用的本地链接）</td></tr></tbody></table></div><h3 id="文章加密"><a href="#文章加密" class="headerlink" title="文章加密"></a>文章加密</h3><p>开源地址 <a href="https://github.com/D0n9X1n/hexo-blog-encrypt">https://github.com/D0n9X1n/hexo-blog-encrypt</a></p><ol><li>安装<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure></li><li>快速使用：将 <code>&quot;password&quot;</code> 字段添加到您文章信息头就像这样<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">date: 2016-03-30 21:18:02</span><br><span class="line"><span class="section">password: hello</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>再使用 hexo clean &amp;&amp; hexo g &amp;&amp; hexo s 在本地预览加密的文章.</li></ol><p>对博文禁用 Tag 加密</p><p>只需要将博文头部的 password 设置为 “” 即可取消 Tag 加密.<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Callback Test</span><br><span class="line">date: 2019-12-21 11:54:07</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">    -</span> A Tag should be encrypted</span><br><span class="line"><span class="section">password: &quot;&quot;</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line"></span><br><span class="line">Use a &quot;&quot; to diable tag encryption.</span><br></pre></td></tr></table></figure></p><h3 id="swiper-置顶文章"><a href="#swiper-置顶文章" class="headerlink" title="swiper 置顶文章"></a>swiper 置顶文章</h3><blockquote><p>参考：<a href="https://akilar.top/posts/8e1264d1/">https://akilar.top/posts/8e1264d1/</a></p></blockquote><ol><li>安装插件，在博客根目录 [Blogroot] 下打开终端，运行以下指令：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-swiper --save</span><br></pre></td></tr></table></figure></li><li>在站点配置文件_config.yml 或者主题配置文件_config.butterfly.yml 中添加<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo-butterfly-swiper</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/8e1264d1/</span></span><br><span class="line"><span class="attr">swiper:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开关</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span> <span class="comment">#过滤器优先权</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">all</span> <span class="comment"># 应用页面</span></span><br><span class="line">  <span class="attr">timemode:</span> <span class="string">date</span> <span class="comment">#date/updated</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="comment"># 挂载容器类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">id</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">recent-posts</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">default_descr:</span> <span class="string">再怎么看我也不知道怎么描述它的啦！</span></span><br><span class="line">  <span class="attr">swiper_css:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper.min.css</span> <span class="comment">#swiper css依赖</span></span><br><span class="line">  <span class="attr">swiper_js:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper.min.js</span> <span class="comment">#swiper js依赖</span></span><br><span class="line">  <span class="attr">custom_css:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiperstyle.css</span> <span class="comment"># 适配主题样式补丁</span></span><br><span class="line">  <span class="attr">custom_js:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper_init.js</span> <span class="comment"># swiper初始化方法</span></span><br></pre></td></tr></table></figure></li><li>在文章的 front_matter 中添加 swiper_index 配置项即可。<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章标题</span><br><span class="line">date: 创建日期</span><br><span class="line">updated: 更新日期</span><br><span class="line">cover: 文章封面</span><br><span class="line">description: 文章描述</span><br><span class="line"><span class="section">swiper<span class="emphasis">_index: 1 #置顶轮播图顺序，非负整数，数字越大越靠前</span></span></span><br><span class="line"><span class="emphasis"><span class="section">---</span></span></span><br></pre></td></tr></table></figure></li></ol><h2 id="效果设置"><a href="#效果设置" class="headerlink" title="效果设置"></a>效果设置</h2><h3 id="滚动条"><a href="#滚动条" class="headerlink" title="滚动条"></a>滚动条</h3><ol><li>在 themes\Butterfly\source\css 文件夹新建 scrollbar.css 文件，文件内容如下：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 滚动条 */</span></span><br><span class="line">::-webkit-scrollbar &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-track &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">73</span>, <span class="number">177</span>, <span class="number">245</span>, <span class="number">0.2</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-thumb &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#49b1f5</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">-webkit-linear-gradient</span>(</span><br><span class="line"><span class="number">45deg</span>,</span><br><span class="line"><span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.4</span>) <span class="number">25%</span>,</span><br><span class="line">transparent <span class="number">25%</span>,</span><br><span class="line">transparent <span class="number">50%</span>,</span><br><span class="line"><span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.4</span>) <span class="number">50%</span>,</span><br><span class="line"><span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.4</span>) <span class="number">75%</span>,</span><br><span class="line">transparent <span class="number">75%</span>,</span><br><span class="line">transparent</span><br><span class="line">  ) <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-corner &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: transparent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::-moz-selection &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#49b1f5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> ::-webkit-scrollbar-thumb &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#1f1f1f</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>编辑 _config.butterfly.yml 文件，在 inject-&gt;head 下面添加如下内容：<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/scrollbar.css&quot;&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="公告canvas小人"><a href="#公告canvas小人" class="headerlink" title="公告canvas小人"></a>公告canvas小人</h3><blockquote><p>在 Butterfly/layout/includes/widget/card_announcement.pug 下添加如下代码：</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">   .<span class="title function_">xpand</span>(style=<span class="string">&#x27;height:200px;&#x27;</span>)</span><br><span class="line">canvas.<span class="title function_">illo</span>(width=<span class="string">&#x27;800&#x27;</span> height=<span class="string">&#x27;800&#x27;</span> style=<span class="string">&#x27;max-width: 200px; max-height: 200px; touch-action: none; width: 640px; height: 640px;&#x27;</span>)</span><br><span class="line"><span class="title function_">script</span>(src=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/xiaopengand/blogCdn@latest/xzxr/twopeople1.js&#x27;</span>)</span><br><span class="line"><span class="title function_">script</span>(src=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/xiaopengand/blogCdn@latest/xzxr/zdog.dist.js&#x27;</span>)</span><br><span class="line">script#rendered-<span class="title function_">js</span>(src=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/xiaopengand/blogCdn@latest/xzxr/twopeople.js&#x27;</span>)</span><br><span class="line">style.</span><br><span class="line">.<span class="property">card</span>-widget.<span class="property">card</span>-announcement &#123;</span><br><span class="line"><span class="attr">margin</span>: <span class="number">0</span>;</span><br><span class="line">align-<span class="attr">items</span>: center;</span><br><span class="line">justify-<span class="attr">content</span>: center;</span><br><span class="line">text-<span class="attr">align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line">canvas &#123;</span><br><span class="line"><span class="attr">display</span>: block;</span><br><span class="line"><span class="attr">margin</span>: <span class="number">0</span> auto;</span><br><span class="line"><span class="attr">cursor</span>: move;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="星空背景和流星特效"><a href="#星空背景和流星特效" class="headerlink" title="星空背景和流星特效"></a>星空背景和流星特效</h3><ol><li>在 [Blogroot]\themes\source\js\ 目录下新建 universe.js 输入：<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">dark</span>(<span class="params"></span>) &#123;<span class="variable language_">window</span>.<span class="property">requestAnimationFrame</span>=<span class="variable language_">window</span>.<span class="property">requestAnimationFrame</span>||<span class="variable language_">window</span>.<span class="property">mozRequestAnimationFrame</span>||<span class="variable language_">window</span>.<span class="property">webkitRequestAnimationFrame</span>||<span class="variable language_">window</span>.<span class="property">msRequestAnimationFrame</span>;<span class="keyword">var</span> n,e,i,h,t=<span class="number">.05</span>,s=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;universe&quot;</span>),o=!<span class="number">0</span>,a=<span class="string">&quot;180,184,240&quot;</span>,r=<span class="string">&quot;226,225,142&quot;</span>,d=<span class="string">&quot;226,225,224&quot;</span>,c=[];<span class="keyword">function</span> <span class="title function_">f</span>(<span class="params"></span>)&#123;n=<span class="variable language_">window</span>.<span class="property">innerWidth</span>,e=<span class="variable language_">window</span>.<span class="property">innerHeight</span>,i=<span class="number">.216</span>*n,s.<span class="title function_">setAttribute</span>(<span class="string">&quot;width&quot;</span>,n),s.<span class="title function_">setAttribute</span>(<span class="string">&quot;height&quot;</span>,e)&#125;<span class="keyword">function</span> <span class="title function_">u</span>(<span class="params"></span>)&#123;h.<span class="title function_">clearRect</span>(<span class="number">0</span>,<span class="number">0</span>,n,e);<span class="keyword">for</span>(<span class="keyword">var</span> t=c.<span class="property">length</span>,i=<span class="number">0</span>;i&lt;t;i++)&#123;<span class="keyword">var</span> s=c[i];s.<span class="title function_">move</span>(),s.<span class="title function_">fadeIn</span>(),s.<span class="title function_">fadeOut</span>(),s.<span class="title function_">draw</span>()&#125;&#125;<span class="keyword">function</span> <span class="title function_">y</span>(<span class="params"></span>)&#123;<span class="variable language_">this</span>.<span class="property">reset</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">this</span>.<span class="property">giant</span>=<span class="title function_">m</span>(<span class="number">3</span>),<span class="variable language_">this</span>.<span class="property">comet</span>=!<span class="variable language_">this</span>.<span class="property">giant</span>&amp;&amp;!o&amp;&amp;<span class="title function_">m</span>(<span class="number">10</span>),<span class="variable language_">this</span>.<span class="property">x</span>=<span class="title function_">l</span>(<span class="number">0</span>,n-<span class="number">10</span>),<span class="variable language_">this</span>.<span class="property">y</span>=<span class="title function_">l</span>(<span class="number">0</span>,e),<span class="variable language_">this</span>.<span class="property">r</span>=<span class="title function_">l</span>(<span class="number">1.1</span>,<span class="number">2.6</span>),<span class="variable language_">this</span>.<span class="property">dx</span>=<span class="title function_">l</span>(t,<span class="number">6</span>*t)+(<span class="variable language_">this</span>.<span class="property">comet</span>+<span class="number">1</span>-<span class="number">1</span>)*t*<span class="title function_">l</span>(<span class="number">50</span>,<span class="number">120</span>)+<span class="number">2</span>*t,<span class="variable language_">this</span>.<span class="property">dy</span>=-<span class="title function_">l</span>(t,<span class="number">6</span>*t)-(<span class="variable language_">this</span>.<span class="property">comet</span>+<span class="number">1</span>-<span class="number">1</span>)*t*<span class="title function_">l</span>(<span class="number">50</span>,<span class="number">120</span>),<span class="variable language_">this</span>.<span class="property">fadingOut</span>=<span class="literal">null</span>,<span class="variable language_">this</span>.<span class="property">fadingIn</span>=!<span class="number">0</span>,<span class="variable language_">this</span>.<span class="property">opacity</span>=<span class="number">0</span>,<span class="variable language_">this</span>.<span class="property">opacityTresh</span>=<span class="title function_">l</span>(<span class="number">.2</span>,<span class="number">1</span>-<span class="number">.4</span>*(<span class="variable language_">this</span>.<span class="property">comet</span>+<span class="number">1</span>-<span class="number">1</span>)),<span class="variable language_">this</span>.<span class="property">do</span>=<span class="title function_">l</span>(<span class="number">5e-4</span>,<span class="number">.002</span>)+<span class="number">.001</span>*(<span class="variable language_">this</span>.<span class="property">comet</span>+<span class="number">1</span>-<span class="number">1</span>)&#125;,<span class="variable language_">this</span>.<span class="property">fadeIn</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">this</span>.<span class="property">fadingIn</span>&amp;&amp;(<span class="variable language_">this</span>.<span class="property">fadingIn</span>=!(<span class="variable language_">this</span>.<span class="property">opacity</span>&gt;<span class="variable language_">this</span>.<span class="property">opacityTresh</span>),<span class="variable language_">this</span>.<span class="property">opacity</span>+=<span class="variable language_">this</span>.<span class="property">do</span>)&#125;,<span class="variable language_">this</span>.<span class="property">fadeOut</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">this</span>.<span class="property">fadingOut</span>&amp;&amp;(<span class="variable language_">this</span>.<span class="property">fadingOut</span>=!(<span class="variable language_">this</span>.<span class="property">opacity</span>&lt;<span class="number">0</span>),<span class="variable language_">this</span>.<span class="property">opacity</span>-=<span class="variable language_">this</span>.<span class="property">do</span>/<span class="number">2</span>,(<span class="variable language_">this</span>.<span class="property">x</span>&gt;n||<span class="variable language_">this</span>.<span class="property">y</span>&lt;<span class="number">0</span>)&amp;&amp;(<span class="variable language_">this</span>.<span class="property">fadingOut</span>=!<span class="number">1</span>,<span class="variable language_">this</span>.<span class="title function_">reset</span>()))&#125;,<span class="variable language_">this</span>.<span class="property">draw</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">if</span>(h.<span class="title function_">beginPath</span>(),<span class="variable language_">this</span>.<span class="property">giant</span>)h.<span class="property">fillStyle</span>=<span class="string">&quot;rgba(&quot;</span>+a+<span class="string">&quot;,&quot;</span>+<span class="variable language_">this</span>.<span class="property">opacity</span>+<span class="string">&quot;)&quot;</span>,h.<span class="title function_">arc</span>(<span class="variable language_">this</span>.<span class="property">x</span>,<span class="variable language_">this</span>.<span class="property">y</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="title class_">Math</span>.<span class="property">PI</span>,!<span class="number">1</span>);<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">comet</span>)&#123;h.<span class="property">fillStyle</span>=<span class="string">&quot;rgba(&quot;</span>+d+<span class="string">&quot;,&quot;</span>+<span class="variable language_">this</span>.<span class="property">opacity</span>+<span class="string">&quot;)&quot;</span>,h.<span class="title function_">arc</span>(<span class="variable language_">this</span>.<span class="property">x</span>,<span class="variable language_">this</span>.<span class="property">y</span>,<span class="number">1.5</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="title class_">Math</span>.<span class="property">PI</span>,!<span class="number">1</span>);<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;<span class="number">30</span>;t++)h.<span class="property">fillStyle</span>=<span class="string">&quot;rgba(&quot;</span>+d+<span class="string">&quot;,&quot;</span>+(<span class="variable language_">this</span>.<span class="property">opacity</span>-<span class="variable language_">this</span>.<span class="property">opacity</span>/<span class="number">20</span>*t)+<span class="string">&quot;)&quot;</span>,h.<span class="title function_">rect</span>(<span class="variable language_">this</span>.<span class="property">x</span>-<span class="variable language_">this</span>.<span class="property">dx</span>/<span class="number">4</span>*t,<span class="variable language_">this</span>.<span class="property">y</span>-<span class="variable language_">this</span>.<span class="property">dy</span>/<span class="number">4</span>*t-<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>),h.<span class="title function_">fill</span>()&#125;<span class="keyword">else</span> h.<span class="property">fillStyle</span>=<span class="string">&quot;rgba(&quot;</span>+r+<span class="string">&quot;,&quot;</span>+<span class="variable language_">this</span>.<span class="property">opacity</span>+<span class="string">&quot;)&quot;</span>,h.<span class="title function_">rect</span>(<span class="variable language_">this</span>.<span class="property">x</span>,<span class="variable language_">this</span>.<span class="property">y</span>,<span class="variable language_">this</span>.<span class="property">r</span>,<span class="variable language_">this</span>.<span class="property">r</span>);h.<span class="title function_">closePath</span>(),h.<span class="title function_">fill</span>()&#125;,<span class="variable language_">this</span>.<span class="property">move</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">this</span>.<span class="property">x</span>+=<span class="variable language_">this</span>.<span class="property">dx</span>,<span class="variable language_">this</span>.<span class="property">y</span>+=<span class="variable language_">this</span>.<span class="property">dy</span>,!<span class="number">1</span>===<span class="variable language_">this</span>.<span class="property">fadingOut</span>&amp;&amp;<span class="variable language_">this</span>.<span class="title function_">reset</span>(),(<span class="variable language_">this</span>.<span class="property">x</span>&gt;n-n/<span class="number">4</span>||<span class="variable language_">this</span>.<span class="property">y</span>&lt;<span class="number">0</span>)&amp;&amp;(<span class="variable language_">this</span>.<span class="property">fadingOut</span>=!<span class="number">0</span>)&#125;,<span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;o=!<span class="number">1</span>&#125;,<span class="number">50</span>)&#125;<span class="keyword">function</span> <span class="title function_">m</span>(<span class="params">t</span>)&#123;<span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="number">1e3</span>*<span class="title class_">Math</span>.<span class="title function_">random</span>())+<span class="number">1</span>&lt;<span class="number">10</span>*t&#125;<span class="keyword">function</span> <span class="title function_">l</span>(<span class="params">t,i</span>)&#123;<span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">random</span>()*(i-t)+t&#125;<span class="title function_">f</span>(),<span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>,f,!<span class="number">1</span>),<span class="keyword">function</span>(<span class="params"></span>)&#123;h=s.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>);<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;i;t++)c[t]=<span class="keyword">new</span> y,c[t].<span class="title function_">reset</span>();<span class="title function_">u</span>()&#125;(),<span class="keyword">function</span> <span class="title function_">t</span>(<span class="params"></span>)&#123;<span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;html&#x27;</span>)[<span class="number">0</span>].<span class="title function_">getAttribute</span>(<span class="string">&#x27;data-theme&#x27;</span>)==<span class="string">&#x27;dark&#x27;</span>&amp;&amp;<span class="title function_">u</span>(),<span class="variable language_">window</span>.<span class="title function_">requestAnimationFrame</span>(t)&#125;()&#125;;</span><br><span class="line"><span class="title function_">dark</span>()</span><br></pre></td></tr></table></figure></li><li>在 [Blogroot]\themes\source\css\ 目录下新建 universe.css 输入：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 背景宇宙星光  */</span></span><br><span class="line"><span class="selector-id">#universe</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: block;</span><br><span class="line"><span class="attribute">position</span>: fixed;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">outline</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line"><span class="attribute">pointer-events</span>: none;</span><br><span class="line"><span class="attribute">z-index</span>: -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在 [Blogroot]_config.butterfly.yml 的 inject 配置项中 bottom 下填入：<figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">inject:</span><br><span class="line">   bottom:</span><br><span class="line"><span class="addition">+# 星空背景</span></span><br><span class="line"><span class="addition">+    - &lt;canvas id=&quot;universe&quot;&gt;&lt;/canvas&gt;</span></span><br><span class="line"><span class="addition">+    - &lt;script defer src=&quot;[root]/js/universe.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li><li>在 [Blogroot]_config.butterfly.yml 的 inject 配置项中 head 下填入：<figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">inject:</span><br><span class="line">   head:</span><br><span class="line"><span class="addition">+    # 星空背景</span></span><br><span class="line"><span class="addition">+    - &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/universe.css&quot;&gt;</span></span><br><span class="line"><span class="comment">---</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="SAO-UI-风格侧栏卡片"><a href="#SAO-UI-风格侧栏卡片" class="headerlink" title="SAO UI 风格侧栏卡片"></a>SAO UI 风格侧栏卡片</h3><p>实现效果：<br><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220518204655.png" alt="20220518204655"></p><ol><li>在 [Blogroot]\themes\butterfly\source\css\custom.css 中添加如下内容。<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* SAOUI字体精简包，仅73KB */</span></span><br><span class="line"><span class="keyword">@font-face</span>&#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;SAOUI&#x27;</span>;</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;https://npm.elemecdn.com/akilar-candyassets/fonts/SAOUI.ttf&#x27;</span>);</span><br><span class="line">  <span class="attribute">font-display</span>: swap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 应用于除了作者卡片以为的所有侧栏卡片 */</span></span><br><span class="line"><span class="selector-class">.card-widget</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.card-info</span>) &#123;</span><br><span class="line">  <span class="attribute">overflow</span>: visible <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">45px</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">border-bottom-left-radius</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">border-bottom-right-radius</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">border-top-right-radius</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">border-top-left-radius</span>: <span class="number">0px</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;SAOUI&#x27;</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">60</span>,<span class="number">60</span>,<span class="number">61</span>,<span class="number">0.7</span>);</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 修复一下对侧栏电子钟的覆盖 */</span></span><br><span class="line"><span class="selector-class">.card-widget</span><span class="selector-class">.card-clock</span> &#123;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">0px</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 定义标题栏的定位方式为绝对定位 */</span></span><br><span class="line"><span class="selector-class">.item-headline</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;SAOUI&#x27;</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">60</span>,<span class="number">60</span>,<span class="number">61</span>,<span class="number">0.7</span>);</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">4</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">27px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">65%</span>;</span><br><span class="line">  <span class="attribute">top</span>: -<span class="number">27px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">7px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 标题栏下各元素的层级，保证它们能显示在伪类之上 */</span></span><br><span class="line"><span class="selector-class">.item-headline</span> <span class="selector-tag">i</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">5%</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item-headline</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item-headline</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 梯形伪类 */</span></span><br><span class="line"><span class="selector-class">.item-headline</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: -<span class="number">3px</span>; <span class="comment">/*卡片顶部突起上下偏移量*/</span></span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: -<span class="number">3px</span>; <span class="comment">/*卡片顶部突起左右偏移量*/</span></span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.9</span>);</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.9</span>);</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">0</span> solid <span class="number">#fff</span>;</span><br><span class="line">  <span class="comment">/* 关键形变 */</span></span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">perspective</span>(<span class="number">20px</span>) <span class="built_in">rotateX</span>(<span class="number">3deg</span>);</span><br><span class="line">  <span class="attribute">border-top-right-radius</span>: <span class="number">5px</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">border-top-left-radius</span>: <span class="number">5px</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 下划线伪类 */</span></span><br><span class="line"><span class="selector-class">.item-headline</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">140%</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">2px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">2px</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">160</span>,<span class="number">159</span>,<span class="number">160</span>,<span class="number">0.9</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 针对手机样式的偏移量调整 */</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">800px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.item-headline</span> &#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">8px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 夜间模式色彩适配，此处仅代表糖果屋夜间模式配色 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.card-widget</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.card-info</span>) &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.7</span>) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.item-headline</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.7</span>) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.item-headline</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.5</span>);</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.5</span>);</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">0</span> solid <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.5</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span> <span class="selector-class">.item-headline</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.9</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在 [Blogroot]_config.butterfly.yml 中引入<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/custom.css&quot;</span>  <span class="string">media=&quot;defer&quot;</span> <span class="string">onload=&quot;this.media=&#x27;all&#x27;&quot;&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="昼夜转换动画"><a href="#昼夜转换动画" class="headerlink" title="昼夜转换动画"></a>昼夜转换动画</h3><ol><li>新建 [Blogroot]\themes\butterfly\layout\includes\custom\sun_moon.pug, 这部分其实实质上就是一个 svg 文件，通过 js 操作它的旋转显隐，淡入淡出实现动画效果。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">svg(aria-hidden=&#x27;true&#x27;, style=&#x27;position:absolute; overflow:hidden; width:0; height:0&#x27;)</span><br><span class="line">symbol#icon-sun(viewBox=&#x27;0 0 1024 1024&#x27;)</span><br><span class="line">  path(d=&#x27;M960 512l-128 128v192h-192l-128 128-128-128H192v-192l-128-128 128-128V192h192l128-128 128 128h192v192z&#x27;, fill=&#x27;#FFD878&#x27;, p-id=&#x27;8420&#x27;)</span><br><span class="line">  path(d=&#x27;M736 512a224 224 0 1 0-448 0 224 224 0 1 0 448 0z&#x27;, fill=&#x27;#FFE4A9&#x27;, p-id=&#x27;8421&#x27;)</span><br><span class="line">  path(d=&#x27;M512 109.248L626.752 224H800v173.248L914.752 512 800 626.752V800h-173.248L512 914.752 397.248 800H224v-173.248L109.248 512 224 397.248V224h173.248L512 109.248M512 64l-128 128H192v192l-128 128 128 128v192h192l128 128 128-128h192v-192l128-128-128-128V192h-192l-128-128z&#x27;, fill=&#x27;#4D5152&#x27;, p-id=&#x27;8422&#x27;)</span><br><span class="line">  path(d=&#x27;M512 320c105.888 0 192 86.112 192 192s-86.112 192-192 192-192-86.112-192-192 86.112-192 192-192m0-32a224 224 0 1 0 0 448 224 224 0 0 0 0-448z&#x27;, fill=&#x27;#4D5152&#x27;, p-id=&#x27;8423&#x27;)</span><br><span class="line">symbol#icon-moon(viewBox=&#x27;0 0 1024 1024&#x27;)</span><br><span class="line">  path(d=&#x27;M611.370667 167.082667a445.013333 445.013333 0 0 1-38.4 161.834666 477.824 477.824 0 0 1-244.736 244.394667 445.141333 445.141333 0 0 1-161.109334 38.058667 85.077333 85.077333 0 0 0-65.066666 135.722666A462.08 462.08 0 1 0 747.093333 102.058667a85.077333 85.077333 0 0 0-135.722666 65.024z&#x27;, fill=&#x27;#FFB531&#x27;, p-id=&#x27;11345&#x27;)</span><br><span class="line">  path(d=&#x27;M329.728 274.133333l35.157333-35.157333a21.333333 21.333333 0 1 0-30.165333-30.165333l-35.157333 35.157333-35.114667-35.157333a21.333333 21.333333 0 0 0-30.165333 30.165333l35.114666 35.157333-35.114666 35.157334a21.333333 21.333333 0 1 0 30.165333 30.165333l35.114667-35.157333 35.157333 35.157333a21.333333 21.333333 0 1 0 30.165333-30.165333z&#x27;, fill=&#x27;#030835&#x27;, p-id=&#x27;11346&#x27;)</span><br></pre></td></tr></table></figure></li><li>新建 [Blogroot]\themes\butterfly\source\_layout\sun_moon.styl：<figure class="highlight styl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.Cuteen_DarkSky</span>,</span><br><span class="line"><span class="selector-class">.Cuteen_DarkSky</span><span class="selector-pseudo">:before</span></span><br><span class="line"><span class="attribute">content</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attribute">position</span> fixed</span><br><span class="line"><span class="attribute">left</span> <span class="number">0</span></span><br><span class="line"><span class="attribute">right</span> <span class="number">0</span></span><br><span class="line"><span class="attribute">top</span> <span class="number">0</span></span><br><span class="line"><span class="attribute">bottom</span> <span class="number">0</span></span><br><span class="line"><span class="attribute">z-index</span> <span class="number">88888888</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.Cuteen_DarkSky</span></span><br><span class="line"><span class="attribute">background</span> linear-gradient(<span class="number">#feb8b0</span>, <span class="number">#fef9db</span>)</span><br><span class="line"><span class="selector-pseudo">&amp;:before</span></span><br><span class="line">  <span class="attribute">transition</span> <span class="number">2s</span> ease all</span><br><span class="line">  <span class="attribute">opacity</span> <span class="number">0</span></span><br><span class="line">  <span class="attribute">background</span> linear-gradient(<span class="number">#4c3f6d</span>, <span class="number">#6c62bb</span>, <span class="number">#93b1ed</span>)</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.DarkMode</span></span><br><span class="line"><span class="selector-class">.Cuteen_DarkSky</span></span><br><span class="line">  <span class="selector-pseudo">&amp;:before</span></span><br><span class="line">    <span class="attribute">opacity</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.Cuteen_DarkPlanet</span></span><br><span class="line"><span class="attribute">z-index</span> <span class="number">99999999</span></span><br><span class="line"><span class="attribute">position</span> fixed</span><br><span class="line"><span class="attribute">left</span> -<span class="number">50%</span></span><br><span class="line"><span class="attribute">top</span> -<span class="number">50%</span></span><br><span class="line"><span class="attribute">width</span> <span class="number">200%</span></span><br><span class="line"><span class="attribute">height</span> <span class="number">200%</span></span><br><span class="line">-webkit-<span class="attribute">animation</span> CuteenPlanetMove <span class="number">2s</span> cubic-bezier(<span class="number">0.7</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line"><span class="attribute">animation</span> CuteenPlanetMove <span class="number">2s</span> cubic-bezier(<span class="number">0.7</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line"><span class="attribute">transform-origin</span> center bottom</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> CuteenPlanetMove &#123;</span><br><span class="line"><span class="number">0%</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: rotate(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">to &#123;</span><br><span class="line">  <span class="attribute">transform</span>: rotate(<span class="number">360deg</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> CuteenPlanetMove &#123;</span><br><span class="line"><span class="number">0%</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: rotate(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">to &#123;</span><br><span class="line">  <span class="attribute">transform</span>: rotate(<span class="number">360deg</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.Cuteen_DarkPlanet</span></span><br><span class="line"><span class="selector-pseudo">&amp;:after</span></span><br><span class="line">  <span class="attribute">position</span> absolute</span><br><span class="line">  <span class="attribute">left</span> <span class="number">35%</span></span><br><span class="line">  <span class="attribute">top</span> <span class="number">40%</span></span><br><span class="line">  <span class="attribute">width</span> <span class="number">9.375rem</span></span><br><span class="line">  <span class="attribute">height</span> <span class="number">9.375rem</span></span><br><span class="line">  <span class="attribute">border-radius</span> <span class="number">50%</span></span><br><span class="line">  <span class="attribute">content</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attribute">background</span> linear-gradient(<span class="number">#fefefe</span>, <span class="number">#fffbe8</span>)</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.search</span></span><br><span class="line"><span class="selector-tag">span</span></span><br><span class="line">  <span class="attribute">display</span> none</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.menus_item</span></span><br><span class="line"><span class="selector-tag">a</span></span><br><span class="line">  <span class="attribute">text-decoration</span> none<span class="meta">!important</span></span><br><span class="line"><span class="comment">//按钮相关，对侧栏按钮做过魔改的可以调整这里的数值</span></span><br><span class="line"><span class="selector-class">.icon-V</span></span><br><span class="line"><span class="attribute">padding</span> <span class="number">5px</span></span><br></pre></td></tr></table></figure></li><li>新建 [Blogroot]\themes\butterfly\source\js\sun_moon.js<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">switchNightMode</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;body&#x27;</span>).<span class="title function_">insertAdjacentHTML</span>(<span class="string">&#x27;beforeend&#x27;</span>, <span class="string">&#x27;&lt;div class=&quot;Cuteen_DarkSky&quot;&gt;&lt;div class=&quot;Cuteen_DarkPlanet&quot;&gt;&lt;/div&gt;&lt;/div&gt;&#x27;</span>),</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;body&#x27;</span>).<span class="property">classList</span>.<span class="title function_">contains</span>(<span class="string">&#x27;DarkMode&#x27;</span>) ? (<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;body&#x27;</span>).<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;DarkMode&#x27;</span>), <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;isDark&#x27;</span>, <span class="string">&#x27;0&#x27;</span>), <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;modeicon&#x27;</span>).<span class="title function_">setAttribute</span>(<span class="string">&#x27;xlink:href&#x27;</span>, <span class="string">&#x27;#icon-moon&#x27;</span>)) : (<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;body&#x27;</span>).<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;DarkMode&#x27;</span>), <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;isDark&#x27;</span>, <span class="string">&#x27;1&#x27;</span>), <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;modeicon&#x27;</span>).<span class="title function_">setAttribute</span>(<span class="string">&#x27;xlink:href&#x27;</span>, <span class="string">&#x27;#icon-sun&#x27;</span>)),</span><br><span class="line">      <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;Cuteen_DarkSky&#x27;</span>)[<span class="number">0</span>].<span class="property">style</span>.<span class="property">transition</span> = <span class="string">&#x27;opacity 3s&#x27;</span>;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;Cuteen_DarkSky&#x27;</span>)[<span class="number">0</span>].<span class="property">style</span>.<span class="property">opacity</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">          <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;Cuteen_DarkSky&#x27;</span>)[<span class="number">0</span>].<span class="title function_">remove</span>();</span><br><span class="line">        &#125;, <span class="number">1e3</span>);</span><br><span class="line">      &#125;, <span class="number">2e3</span>)</span><br><span class="line">  &#125;)</span><br><span class="line"><span class="keyword">const</span> nowMode = <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="title function_">getAttribute</span>(<span class="string">&#x27;data-theme&#x27;</span>) === <span class="string">&#x27;dark&#x27;</span> ? <span class="string">&#x27;dark&#x27;</span> : <span class="string">&#x27;light&#x27;</span></span><br><span class="line"><span class="keyword">if</span> (nowMode === <span class="string">&#x27;light&#x27;</span>) &#123;</span><br><span class="line">  <span class="title function_">activateDarkMode</span>()</span><br><span class="line">  saveToLocal.<span class="title function_">set</span>(<span class="string">&#x27;theme&#x27;</span>, <span class="string">&#x27;dark&#x27;</span>, <span class="number">2</span>)</span><br><span class="line">  <span class="variable constant_">GLOBAL_CONFIG</span>.<span class="property">Snackbar</span> !== <span class="literal">undefined</span> &amp;&amp; btf.<span class="title function_">snackbarShow</span>(<span class="variable constant_">GLOBAL_CONFIG</span>.<span class="property">Snackbar</span>.<span class="property">day_to_night</span>)</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;modeicon&#x27;</span>).<span class="title function_">setAttribute</span>(<span class="string">&#x27;xlink:href&#x27;</span>, <span class="string">&#x27;#icon-sun&#x27;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="title function_">activateLightMode</span>()</span><br><span class="line">  saveToLocal.<span class="title function_">set</span>(<span class="string">&#x27;theme&#x27;</span>, <span class="string">&#x27;light&#x27;</span>, <span class="number">2</span>)</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;body&#x27;</span>).<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;DarkMode&#x27;</span>), <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;modeicon&#x27;</span>).<span class="title function_">setAttribute</span>(<span class="string">&#x27;xlink:href&#x27;</span>, <span class="string">&#x27;#icon-moon&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// handle some cases</span></span><br><span class="line"><span class="keyword">typeof</span> utterancesTheme === <span class="string">&#x27;function&#x27;</span> &amp;&amp; <span class="title function_">utterancesTheme</span>()</span><br><span class="line"><span class="keyword">typeof</span> <span class="variable constant_">FB</span> === <span class="string">&#x27;object&#x27;</span> &amp;&amp; <span class="variable language_">window</span>.<span class="title function_">loadFBComment</span>()</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">DISQUS</span> &amp;&amp; <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;disqus_thread&#x27;</span>).<span class="property">children</span>.<span class="property">length</span> &amp;&amp; <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> <span class="variable language_">window</span>.<span class="title function_">disqusReset</span>(), <span class="number">200</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>修改 [Blogroot]\themes\butterfly\layout\includes\head.pug, 在文件末位加上一行：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//- global config</span><br><span class="line">!=partial(&#x27;includes/head/config&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line"></span><br><span class="line">include ./head/config_site.pug</span><br><span class="line">include ./head/noscript.pug</span><br><span class="line"></span><br><span class="line">!=fragment_cache(&#x27;injectHeadJs&#x27;, function()&#123;return inject_head_js()&#125;)</span><br><span class="line"></span><br><span class="line">!=fragment_cache(&#x27;injectHead&#x27;, function()&#123;return injectHtml(theme.inject.head)&#125;)</span><br><span class="line"></span><br><span class="line">+ include ./custom/sun_moon.pug</span><br></pre></td></tr></table></figure></li><li>修改 [Blogroot]\themes\butterfly\layout\includes\rightside.pug, 把原本的昼夜切换按钮替换掉：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">when &#x27;translate&#x27;</span><br><span class="line">if translate.enable</span><br><span class="line"> button#translateLink(type=&quot;button&quot; title=_p(&#x27;rightside.translate_title&#x27;))= translate.default</span><br><span class="line">when &#x27;darkmode&#x27;</span><br><span class="line">if darkmode.enable &amp;&amp; darkmode.button</span><br><span class="line">-     button#darkmode(type=&quot;button&quot; title=_p(&#x27;rightside.night_mode_title&#x27;))</span><br><span class="line">-       i.fas.fa-adjust</span><br><span class="line">+     a.icon-V.hidden(onclick=&#x27;switchNightMode()&#x27;,  title=_p(&#x27;rightside.night_mode_title&#x27;))</span><br><span class="line">+       svg(width=&#x27;25&#x27;, height=&#x27;25&#x27;, viewBox=&#x27;0 0 1024 1024&#x27;)</span><br><span class="line">+         use#modeicon(xlink:href=&#x27;#icon-moon&#x27;)</span><br></pre></td></tr></table></figure></li><li>修改 [Blogroot]_config.butterfly.yml, 引入一下 js：<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line"><span class="attr">head:</span></span><br><span class="line"><span class="attr">bottome:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;[root]/js/sun_moon.js&quot;</span> <span class="string">async&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="Butterfly-标签文章数上下标"><a href="#Butterfly-标签文章数上下标" class="headerlink" title="Butterfly 标签文章数上下标"></a>Butterfly 标签文章数上下标</h3><blockquote><p>在 Butterfly 主题中，文章标签页和标签侧边栏都有文章标签的词云图，但仅仅用字体大小表示某个标签下的文章数量是不明显的，可以在这个基础上加上表示某个标签下文章数的上下标，其中 <sup> 表示上标，<sub> 表示下标。</p></blockquote><ul><li>在 \themes\butterfly\scripts\helpers\page.js 找到 cloudTags 函数增加 <sup>${tag.length}</sup> 或 <sub>${tag.length}</sub> 可绘制表示标签文章数的上下标。<figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">hexo.extend.helper.register(&#x27;cloudTags&#x27;, function (options = &#123;&#125;) &#123;</span><br><span class="line">  const theme = hexo.theme.config</span><br><span class="line">  const env = this</span><br><span class="line">  let source = options.source</span><br><span class="line">  const minfontsize = options.minfontsize</span><br><span class="line">  const maxfontsize = options.maxfontsize</span><br><span class="line">  const limit = options.limit</span><br><span class="line">  const unit = options.unit || &#x27;px&#x27;</span><br><span class="line"></span><br><span class="line">  let result = &#x27;&#x27;</span><br><span class="line">  if (limit &gt; 0) &#123;</span><br><span class="line">    source = source.limit(limit)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  const sizes = []</span><br><span class="line">  source.sort(&#x27;length&#x27;).forEach(tag =&gt; &#123;</span><br><span class="line">    const &#123; length &#125; = tag</span><br><span class="line">    if (sizes.includes(length)) return</span><br><span class="line">    sizes.push(length)</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  const length = sizes.length - 1</span><br><span class="line">  source.forEach(tag =&gt; &#123;</span><br><span class="line">    const ratio = length ? sizes.indexOf(tag.length) / length : 0</span><br><span class="line">    const size = minfontsize + ((maxfontsize - minfontsize) * ratio)</span><br><span class="line">    let style = `font-size: $&#123;parseFloat(size.toFixed(2))&#125;$&#123;unit&#125;;`</span><br><span class="line">    const color = &#x27;rgb(&#x27; + Math.floor(Math.random() * 201) + &#x27;, &#x27; + Math.floor(Math.random() * 201) + &#x27;, &#x27; + Math.floor(Math.random() * 201) + &#x27;)&#x27; // 0,0,0 -&gt; 200,200,200</span><br><span class="line">    style += ` color: $&#123;color&#125;`</span><br><span class="line"><span class="deletion">-   result += `&lt;a href=&quot;$&#123;env.url_for(tag.path)&#125;&quot; style=&quot;$&#123;style&#125;&quot;&gt;$&#123;tag.name&#125;&lt;/a&gt;`</span></span><br><span class="line"><span class="addition">+   result += `&lt;a href=&quot;$&#123;env.url_for(tag.path)&#125;&quot; style=&quot;$&#123;style&#125;&quot;&gt;$&#123;tag.name&#125;&lt;sup&gt;$&#123;tag.length&#125;&lt;/sup&gt;&lt;/a&gt;`</span></span><br><span class="line">  &#125;)</span><br><span class="line">  return result</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><h3 id="Hexo-博客文章统计图"><a href="#Hexo-博客文章统计图" class="headerlink" title="Hexo 博客文章统计图"></a>Hexo 博客文章统计图</h3><blockquote><p>使用的是 ECharts 开源可视化库对博客的文章发布时间、文章分类、文章标签的维度绘制统计图。</p></blockquote><ol><li>新建 charts 页面：<br>在 [Blogroot]\source\ 目录下新建 charts 文件夹，并在新建的 charts 文件夹下新建 index.md 文件，添加以下内容：<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 统计图表</span><br><span class="line"><span class="section">date: 2022-05-01 08:00:00</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure></li><li>引入 ECharts.js（echarts.js 必须在渲染 echarts 实例的 JavaScript 前引入）<br>在 [Blogroot]_config.butterfly.yml 的 inject 配置项中引入 echart.js 文件。<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;https://cdn.jsdelivr.net/npm/echarts@4.9.0/dist/echarts.min.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li><li>新建文章统计代码<br>在 [Blogroot]\themes\butterfly\scripts\helpers\ 目录下新建 charts.js 文件，然后添加以下内容：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> cheerio = <span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> moment = <span class="built_in">require</span>(<span class="string">&#x27;moment&#x27;</span>)</span><br><span class="line"></span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">filter</span>.<span class="title function_">register</span>(<span class="string">&#x27;after_render:html&#x27;</span>, <span class="keyword">function</span> (<span class="params">locals</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> $ = cheerio.<span class="title function_">load</span>(locals)</span><br><span class="line">  <span class="keyword">const</span> post = $(<span class="string">&#x27;#posts-chart&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> tag = $(<span class="string">&#x27;#tags-chart&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> category = $(<span class="string">&#x27;#categories-chart&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> htmlEncode = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (post.<span class="property">length</span> &gt; <span class="number">0</span> || tag.<span class="property">length</span> &gt; <span class="number">0</span> || category.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (post.<span class="property">length</span> &gt; <span class="number">0</span> &amp;&amp; $(<span class="string">&#x27;#postsChart&#x27;</span>).<span class="property">length</span> === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (post.<span class="title function_">attr</span>(<span class="string">&#x27;data-encode&#x27;</span>) === <span class="string">&#x27;true&#x27;</span>) htmlEncode = <span class="literal">true</span></span><br><span class="line">      post.<span class="title function_">after</span>(<span class="title function_">postsChart</span>(post.<span class="title function_">attr</span>(<span class="string">&#x27;data-start&#x27;</span>)))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (tag.<span class="property">length</span> &gt; <span class="number">0</span> &amp;&amp; $(<span class="string">&#x27;#tagsChart&#x27;</span>).<span class="property">length</span> === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (tag.<span class="title function_">attr</span>(<span class="string">&#x27;data-encode&#x27;</span>) === <span class="string">&#x27;true&#x27;</span>) htmlEncode = <span class="literal">true</span></span><br><span class="line">      tag.<span class="title function_">after</span>(<span class="title function_">tagsChart</span>(tag.<span class="title function_">attr</span>(<span class="string">&#x27;data-length&#x27;</span>)))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (category.<span class="property">length</span> &gt; <span class="number">0</span> &amp;&amp; $(<span class="string">&#x27;#categoriesChart&#x27;</span>).<span class="property">length</span> === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (category.<span class="title function_">attr</span>(<span class="string">&#x27;data-encode&#x27;</span>) === <span class="string">&#x27;true&#x27;</span>) htmlEncode = <span class="literal">true</span></span><br><span class="line">      category.<span class="title function_">after</span>(<span class="title function_">categoriesChart</span>())</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (htmlEncode) &#123;</span><br><span class="line">      <span class="keyword">return</span> $.<span class="title function_">root</span>().<span class="title function_">html</span>().<span class="title function_">replace</span>(<span class="regexp">/&amp;amp;#/g</span>, <span class="string">&#x27;&amp;#&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> $.<span class="title function_">root</span>().<span class="title function_">html</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> locals</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, <span class="number">15</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">postsChart</span> (startMonth) &#123;</span><br><span class="line">  <span class="keyword">const</span> startDate = <span class="title function_">moment</span>(startMonth || <span class="string">&#x27;2020-01&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> endDate = <span class="title function_">moment</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> monthMap = <span class="keyword">new</span> <span class="title class_">Map</span>()</span><br><span class="line">  <span class="keyword">const</span> dayTime = <span class="number">3600</span> * <span class="number">24</span> * <span class="number">1000</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> time = startDate; time &lt;= endDate; time += dayTime) &#123;</span><br><span class="line">    <span class="keyword">const</span> month = <span class="title function_">moment</span>(time).<span class="title function_">format</span>(<span class="string">&#x27;YYYY-MM&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> (!monthMap.<span class="title function_">has</span>(month)) &#123;</span><br><span class="line">      monthMap.<span class="title function_">set</span>(month, <span class="number">0</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  hexo.<span class="property">locals</span>.<span class="title function_">get</span>(<span class="string">&#x27;posts&#x27;</span>).<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">post</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> month = post.<span class="property">date</span>.<span class="title function_">format</span>(<span class="string">&#x27;YYYY-MM&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> (monthMap.<span class="title function_">has</span>(month)) &#123;</span><br><span class="line">      monthMap.<span class="title function_">set</span>(month, monthMap.<span class="title function_">get</span>(month) + <span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">const</span> monthArr = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>([...monthMap.<span class="title function_">keys</span>()])</span><br><span class="line">  <span class="keyword">const</span> monthValueArr = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>([...monthMap.<span class="title function_">values</span>()])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">  &lt;script id=&quot;postsChart&quot;&gt;</span></span><br><span class="line"><span class="string">    var color = document.documentElement.getAttribute(&#x27;data-theme&#x27;) === &#x27;light&#x27; ? &#x27;#4c4948&#x27; : &#x27;rgba(255,255,255,0.7)&#x27;</span></span><br><span class="line"><span class="string">    var postsChart = echarts.init(document.getElementById(&#x27;posts-chart&#x27;), &#x27;light&#x27;);</span></span><br><span class="line"><span class="string">    var postsOption = &#123;</span></span><br><span class="line"><span class="string">      title: &#123;</span></span><br><span class="line"><span class="string">        text: &#x27;文章发布统计图&#x27;,</span></span><br><span class="line"><span class="string">        x: &#x27;center&#x27;,</span></span><br><span class="line"><span class="string">        textStyle: &#123;</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      tooltip: &#123;</span></span><br><span class="line"><span class="string">        trigger: &#x27;axis&#x27;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      xAxis: &#123;</span></span><br><span class="line"><span class="string">        name: &#x27;日期&#x27;,</span></span><br><span class="line"><span class="string">        type: &#x27;category&#x27;,</span></span><br><span class="line"><span class="string">        boundaryGap: false,</span></span><br><span class="line"><span class="string">        nameTextStyle: &#123;</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisTick: &#123;</span></span><br><span class="line"><span class="string">          show: false</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisLabel: &#123;</span></span><br><span class="line"><span class="string">          show: true,</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisLine: &#123;</span></span><br><span class="line"><span class="string">          show: true,</span></span><br><span class="line"><span class="string">          lineStyle: &#123;</span></span><br><span class="line"><span class="string">            color: color</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        data: <span class="subst">$&#123;monthArr&#125;</span></span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      yAxis: &#123;</span></span><br><span class="line"><span class="string">        name: &#x27;文章篇数&#x27;,</span></span><br><span class="line"><span class="string">        type: &#x27;value&#x27;,</span></span><br><span class="line"><span class="string">        nameTextStyle: &#123;</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        splitLine: &#123;</span></span><br><span class="line"><span class="string">          show: false</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisTick: &#123;</span></span><br><span class="line"><span class="string">          show: false</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisLabel: &#123;</span></span><br><span class="line"><span class="string">          show: true,</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisLine: &#123;</span></span><br><span class="line"><span class="string">          show: true,</span></span><br><span class="line"><span class="string">          lineStyle: &#123;</span></span><br><span class="line"><span class="string">            color: color</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      series: [&#123;</span></span><br><span class="line"><span class="string">        name: &#x27;文章篇数&#x27;,</span></span><br><span class="line"><span class="string">        type: &#x27;line&#x27;,</span></span><br><span class="line"><span class="string">        smooth: true,</span></span><br><span class="line"><span class="string">        lineStyle: &#123;</span></span><br><span class="line"><span class="string">            width: 0</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        showSymbol: false,</span></span><br><span class="line"><span class="string">        itemStyle: &#123;</span></span><br><span class="line"><span class="string">          opacity: 1,</span></span><br><span class="line"><span class="string">          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [&#123;</span></span><br><span class="line"><span class="string">            offset: 0,</span></span><br><span class="line"><span class="string">            color: &#x27;rgba(128, 255, 165)&#x27;</span></span><br><span class="line"><span class="string">          &#125;,</span></span><br><span class="line"><span class="string">          &#123;</span></span><br><span class="line"><span class="string">            offset: 1,</span></span><br><span class="line"><span class="string">            color: &#x27;rgba(1, 191, 236)&#x27;</span></span><br><span class="line"><span class="string">          &#125;])</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        areaStyle: &#123;</span></span><br><span class="line"><span class="string">          opacity: 1,</span></span><br><span class="line"><span class="string">          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [&#123;</span></span><br><span class="line"><span class="string">            offset: 0,</span></span><br><span class="line"><span class="string">            color: &#x27;rgba(128, 255, 165)&#x27;</span></span><br><span class="line"><span class="string">          &#125;, &#123;</span></span><br><span class="line"><span class="string">            offset: 1,</span></span><br><span class="line"><span class="string">            color: &#x27;rgba(1, 191, 236)&#x27;</span></span><br><span class="line"><span class="string">          &#125;])</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        data: <span class="subst">$&#123;monthValueArr&#125;</span>,</span></span><br><span class="line"><span class="string">        markLine: &#123;</span></span><br><span class="line"><span class="string">          data: [&#123;</span></span><br><span class="line"><span class="string">            name: &#x27;平均值&#x27;,</span></span><br><span class="line"><span class="string">            type: &#x27;average&#x27;,</span></span><br><span class="line"><span class="string">            label: &#123;</span></span><br><span class="line"><span class="string">              color: color</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">          &#125;]</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;]</span></span><br><span class="line"><span class="string">    &#125;;</span></span><br><span class="line"><span class="string">    postsChart.setOption(postsOption);</span></span><br><span class="line"><span class="string">    window.addEventListener(&#x27;resize&#x27;, () =&gt; &#123; </span></span><br><span class="line"><span class="string">      postsChart.resize();</span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">  &lt;/script&gt;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">tagsChart</span> (len) &#123;</span><br><span class="line">  <span class="keyword">const</span> tagArr = []</span><br><span class="line">  hexo.<span class="property">locals</span>.<span class="title function_">get</span>(<span class="string">&#x27;tags&#x27;</span>).<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">tag</span>) &#123;</span><br><span class="line">    tagArr.<span class="title function_">push</span>(&#123; <span class="attr">name</span>: tag.<span class="property">name</span>, <span class="attr">value</span>: tag.<span class="property">length</span> &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">  tagArr.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123; <span class="keyword">return</span> b.<span class="property">value</span> - a.<span class="property">value</span> &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> dataLength = <span class="title class_">Math</span>.<span class="title function_">min</span>(tagArr.<span class="property">length</span>, len) || tagArr.<span class="property">length</span></span><br><span class="line">  <span class="keyword">const</span> tagNameArr = []</span><br><span class="line">  <span class="keyword">const</span> tagCountArr = []</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; dataLength; i++) &#123;</span><br><span class="line">    tagNameArr.<span class="title function_">push</span>(tagArr[i].<span class="property">name</span>)</span><br><span class="line">    tagCountArr.<span class="title function_">push</span>(tagArr[i].<span class="property">value</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> tagNameArrJson = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(tagNameArr)</span><br><span class="line">  <span class="keyword">const</span> tagCountArrJson = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(tagCountArr)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">  &lt;script id=&quot;tagsChart&quot;&gt;</span></span><br><span class="line"><span class="string">    var color = document.documentElement.getAttribute(&#x27;data-theme&#x27;) === &#x27;light&#x27; ? &#x27;#4c4948&#x27; : &#x27;rgba(255,255,255,0.7)&#x27;</span></span><br><span class="line"><span class="string">    var tagsChart = echarts.init(document.getElementById(&#x27;tags-chart&#x27;), &#x27;light&#x27;);</span></span><br><span class="line"><span class="string">    var tagsOption = &#123;</span></span><br><span class="line"><span class="string">      title: &#123;</span></span><br><span class="line"><span class="string">        text: &#x27;Top <span class="subst">$&#123;dataLength&#125;</span> 标签统计图&#x27;,</span></span><br><span class="line"><span class="string">        x: &#x27;center&#x27;,</span></span><br><span class="line"><span class="string">        textStyle: &#123;</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      tooltip: &#123;&#125;,</span></span><br><span class="line"><span class="string">      xAxis: &#123;</span></span><br><span class="line"><span class="string">        name: &#x27;标签&#x27;,</span></span><br><span class="line"><span class="string">        type: &#x27;category&#x27;,</span></span><br><span class="line"><span class="string">        nameTextStyle: &#123;</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisTick: &#123;</span></span><br><span class="line"><span class="string">          show: false</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisLabel: &#123;</span></span><br><span class="line"><span class="string">          show: true,</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisLine: &#123;</span></span><br><span class="line"><span class="string">          show: true,</span></span><br><span class="line"><span class="string">          lineStyle: &#123;</span></span><br><span class="line"><span class="string">            color: color</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        data: <span class="subst">$&#123;tagNameArrJson&#125;</span></span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      yAxis: &#123;</span></span><br><span class="line"><span class="string">        name: &#x27;文章篇数&#x27;,</span></span><br><span class="line"><span class="string">        type: &#x27;value&#x27;,</span></span><br><span class="line"><span class="string">        splitLine: &#123;</span></span><br><span class="line"><span class="string">          show: false</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        nameTextStyle: &#123;</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisTick: &#123;</span></span><br><span class="line"><span class="string">          show: false</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisLabel: &#123;</span></span><br><span class="line"><span class="string">          show: true,</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        axisLine: &#123;</span></span><br><span class="line"><span class="string">          show: true,</span></span><br><span class="line"><span class="string">          lineStyle: &#123;</span></span><br><span class="line"><span class="string">            color: color</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      series: [&#123;</span></span><br><span class="line"><span class="string">        name: &#x27;文章篇数&#x27;,</span></span><br><span class="line"><span class="string">        type: &#x27;bar&#x27;,</span></span><br><span class="line"><span class="string">        data: <span class="subst">$&#123;tagCountArrJson&#125;</span>,</span></span><br><span class="line"><span class="string">        itemStyle: &#123;</span></span><br><span class="line"><span class="string">          borderRadius: [5, 5, 0, 0],</span></span><br><span class="line"><span class="string">          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [&#123;</span></span><br><span class="line"><span class="string">            offset: 0,</span></span><br><span class="line"><span class="string">            color: &#x27;rgba(128, 255, 165)&#x27;</span></span><br><span class="line"><span class="string">          &#125;,</span></span><br><span class="line"><span class="string">          &#123;</span></span><br><span class="line"><span class="string">            offset: 1,</span></span><br><span class="line"><span class="string">            color: &#x27;rgba(1, 191, 236)&#x27;</span></span><br><span class="line"><span class="string">          &#125;])</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        emphasis: &#123;</span></span><br><span class="line"><span class="string">          itemStyle: &#123;</span></span><br><span class="line"><span class="string">            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [&#123;</span></span><br><span class="line"><span class="string">              offset: 0,</span></span><br><span class="line"><span class="string">              color: &#x27;rgba(128, 255, 195)&#x27;</span></span><br><span class="line"><span class="string">            &#125;,</span></span><br><span class="line"><span class="string">            &#123;</span></span><br><span class="line"><span class="string">              offset: 1,</span></span><br><span class="line"><span class="string">              color: &#x27;rgba(1, 211, 255)&#x27;</span></span><br><span class="line"><span class="string">            &#125;])</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        markLine: &#123;</span></span><br><span class="line"><span class="string">          data: [&#123;</span></span><br><span class="line"><span class="string">            name: &#x27;平均值&#x27;,</span></span><br><span class="line"><span class="string">            type: &#x27;average&#x27;,</span></span><br><span class="line"><span class="string">            label: &#123;</span></span><br><span class="line"><span class="string">              color: color</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">          &#125;]</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;]</span></span><br><span class="line"><span class="string">    &#125;;</span></span><br><span class="line"><span class="string">    tagsChart.setOption(tagsOption);</span></span><br><span class="line"><span class="string">    window.addEventListener(&#x27;resize&#x27;, () =&gt; &#123; </span></span><br><span class="line"><span class="string">      tagsChart.resize();</span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">    tagsChart.on(&#x27;click&#x27;, &#x27;series&#x27;, (event) =&gt; &#123;</span></span><br><span class="line"><span class="string">      let href = &#x27;/tags/&#x27; + event.name + &#x27;/&#x27;;</span></span><br><span class="line"><span class="string">      window.location.href = href;</span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">  &lt;/script&gt;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">categoriesChart</span> () &#123;</span><br><span class="line">  <span class="keyword">const</span> categoryArr = []</span><br><span class="line">  hexo.<span class="property">locals</span>.<span class="title function_">get</span>(<span class="string">&#x27;categories&#x27;</span>).<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">category</span>) &#123;</span><br><span class="line">    categoryArr.<span class="title function_">push</span>(&#123; <span class="attr">name</span>: category.<span class="property">name</span>, <span class="attr">value</span>: category.<span class="property">length</span> &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">  categoryArr.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123; <span class="keyword">return</span> b.<span class="property">value</span> - a.<span class="property">value</span> &#125;);</span><br><span class="line">  <span class="keyword">const</span> categoryArrJson = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(categoryArr)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">  &lt;script id=&quot;categoriesChart&quot;&gt;</span></span><br><span class="line"><span class="string">    var color = document.documentElement.getAttribute(&#x27;data-theme&#x27;) === &#x27;light&#x27; ? &#x27;#4c4948&#x27; : &#x27;rgba(255,255,255,0.7)&#x27;</span></span><br><span class="line"><span class="string">    var categoriesChart = echarts.init(document.getElementById(&#x27;categories-chart&#x27;), &#x27;light&#x27;);</span></span><br><span class="line"><span class="string">    var categoriesOption = &#123;</span></span><br><span class="line"><span class="string">      title: &#123;</span></span><br><span class="line"><span class="string">        text: &#x27;文章分类统计图&#x27;,</span></span><br><span class="line"><span class="string">        x: &#x27;center&#x27;,</span></span><br><span class="line"><span class="string">        textStyle: &#123;</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      legend: &#123;</span></span><br><span class="line"><span class="string">        top: &#x27;bottom&#x27;,</span></span><br><span class="line"><span class="string">        textStyle: &#123;</span></span><br><span class="line"><span class="string">          color: color</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      tooltip: &#123;</span></span><br><span class="line"><span class="string">        trigger: &#x27;item&#x27;,</span></span><br><span class="line"><span class="string">        formatter: &#x27;&#123;a&#125; &lt;br/&gt;&#123;b&#125; : &#123;c&#125; (&#123;d&#125;%)&#x27;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      series: [&#123;</span></span><br><span class="line"><span class="string">        name: &#x27;文章篇数&#x27;,</span></span><br><span class="line"><span class="string">        type: &#x27;pie&#x27;,</span></span><br><span class="line"><span class="string">        radius: [30, 80],</span></span><br><span class="line"><span class="string">        center: [&#x27;50%&#x27;, &#x27;50%&#x27;],</span></span><br><span class="line"><span class="string">        roseType: &#x27;area&#x27;,</span></span><br><span class="line"><span class="string">        label: &#123;</span></span><br><span class="line"><span class="string">          color: color,</span></span><br><span class="line"><span class="string">          formatter: &#x27;&#123;b&#125; : &#123;c&#125; (&#123;d&#125;%)&#x27;</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        data: <span class="subst">$&#123;categoryArrJson&#125;</span>,</span></span><br><span class="line"><span class="string">        itemStyle: &#123;</span></span><br><span class="line"><span class="string">          emphasis: &#123;</span></span><br><span class="line"><span class="string">            shadowBlur: 10,</span></span><br><span class="line"><span class="string">            shadowOffsetX: 0,</span></span><br><span class="line"><span class="string">            shadowColor: &#x27;rgba(255, 255, 255, 0.5)&#x27;</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;]</span></span><br><span class="line"><span class="string">    &#125;;</span></span><br><span class="line"><span class="string">    categoriesChart.setOption(categoriesOption);</span></span><br><span class="line"><span class="string">    window.addEventListener(&#x27;resize&#x27;, () =&gt; &#123; </span></span><br><span class="line"><span class="string">      categoriesChart.resize();</span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">    categoriesChart.on(&#x27;click&#x27;, &#x27;series&#x27;, (event) =&gt; &#123;</span></span><br><span class="line"><span class="string">      let href = &#x27;/categories/&#x27; + event.name + &#x27;/&#x27;;</span></span><br><span class="line"><span class="string">      window.location.href = href;</span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">  &lt;/script&gt;`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>使用统计图<br>在 [Blogroot]\source\charts\index.md 文件中添加以下内容：<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// posts-chart 的 data-start=&quot;2021-01&quot; 属性表示文章发布时间统计图仅显示 2021-01 及以后的文章数据。</span><br><span class="line">// tags-chart 的 data-length=&quot;10&quot; 属性表示仅显示排名前 10 的标签。</span><br><span class="line"></span><br><span class="line">&lt;!-- 文章发布时间统计图 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;posts-chart&quot;</span> <span class="attr">data-start</span>=<span class="string">&quot;2021-01&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border-radius: 8px; height: 300px; padding: 10px;&quot;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;!-- 文章标签统计图 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;tags-chart&quot;</span> <span class="attr">data-length</span>=<span class="string">&quot;10&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border-radius: 8px; height: 300px; padding: 10px;&quot;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;!-- 文章分类统计图 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;categories-chart&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border-radius: 8px; height: 300px; padding: 10px;&quot;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li>安装 <code>cheerio</code> 插件：在根目录执行：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i cheerio --save</span><br></pre></td></tr></table></figure></li></ol><h3 id="GitHub-贡献度"><a href="#GitHub-贡献度" class="headerlink" title="GitHub 贡献度"></a>GitHub 贡献度</h3><ol><li>安装插件 <a href="https://github.com/Zfour/hexo-github-calendar">hexo-github-calendar</a><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-githubcalendar --save</span><br></pre></td></tr></table></figure></li><li>打开 Hexo 的站点配置文件<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">githubcalendar:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">/</span>  <span class="comment"># 表示只在根目录(首页)显示</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">xxx</span>  <span class="comment"># 替换成你 GitHub 的用户名</span></span><br><span class="line">  <span class="attr">layout_id:</span> <span class="string">recent-posts</span></span><br><span class="line">  <span class="attr">githubcalendar_html:</span> <span class="string">&#x27;&lt;div class=&quot;recent-post-item&quot; style=&quot;width:100%;height:auto;padding:10px;&quot;&gt;&lt;div id=&quot;github_loading&quot; style=&quot;width:10%;height:100%;margin:0 auto;display: block&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;  viewBox=&quot;0 0 50 50&quot; style=&quot;enable-background:new 0 0 50 50&quot; xml:space=&quot;preserve&quot;&gt;&lt;path fill=&quot;#d0d0d0&quot; d=&quot;M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z&quot; transform=&quot;rotate(275.098 25 25)&quot;&gt;&lt;animateTransform attributeType=&quot;xml&quot; attributeName=&quot;transform&quot; type=&quot;rotate&quot; from=&quot;0 25 25&quot; to=&quot;360 25 25&quot; dur=&quot;0.6s&quot; repeatCount=&quot;indefinite&quot;&gt;&lt;/animateTransform&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div id=&quot;github_container&quot;&gt;&lt;/div&gt;&lt;/div&gt;&#x27;</span></span><br><span class="line">  <span class="attr">pc_minheight:</span> <span class="string">280px</span></span><br><span class="line">  <span class="attr">mobile_minheight:</span> <span class="string">0px</span></span><br><span class="line">  <span class="comment"># 粉色调</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">&quot;[&#x27;#ebedf0&#x27;, &#x27;#fdcdec&#x27;, &#x27;#fc9bd9&#x27;, &#x27;#fa6ac5&#x27;, &#x27;#f838b2&#x27;, &#x27;#f5089f&#x27;, &#x27;#c4067e&#x27;, &#x27;#92055e&#x27;, &#x27;#540336&#x27;, &#x27;#48022f&#x27;, &#x27;#30021f&#x27;]&quot;</span></span><br><span class="line">  <span class="comment"># 橘黄色调</span></span><br><span class="line">  <span class="comment"># color: &quot;[&#x27;#e4dfd7&#x27;, &#x27;#f9f4dc&#x27;, &#x27;#f7e8aa&#x27;, &#x27;#f7e8aa&#x27;, &#x27;#f8df72&#x27;, &#x27;#fcd217&#x27;, &#x27;#fcc515&#x27;, &#x27;#f28e16&#x27;, &#x27;#fb8b05&#x27;, &#x27;#d85916&#x27;, &#x27;#f43e06&#x27;]&quot;</span></span><br><span class="line">  <span class="comment"># 翠绿色调</span></span><br><span class="line">  <span class="comment"># color: &quot;[&#x27;#ebedf0&#x27;, &#x27;#f0fff4&#x27;, &#x27;#dcffe4&#x27;, &#x27;#bef5cb&#x27;, &#x27;#85e89d&#x27;, &#x27;#34d058&#x27;, &#x27;#28a745&#x27;, &#x27;#22863a&#x27;, &#x27;#176f2c&#x27;, &#x27;#165c26&#x27;, &#x27;#144620&#x27;]&quot;</span></span><br><span class="line">  <span class="comment"># 天青色调</span></span><br><span class="line">  <span class="comment"># color: &quot;[&#x27;#ebedf0&#x27;, &#x27;#f1f8ff&#x27;, &#x27;#dbedff&#x27;, &#x27;#c8e1ff&#x27;, &#x27;#79b8ff&#x27;, &#x27;#2188ff&#x27;, &#x27;#0366d6&#x27;, &#x27;#005cc5&#x27;, &#x27;#044289&#x27;, &#x27;#032f62&#x27;, &#x27;#05264c&#x27;]&quot;</span></span><br><span class="line">  <span class="attr">api:</span> <span class="string">https://python-github-calendar-api.vercel.app/api</span></span><br><span class="line">  <span class="comment"># api: https://python-gitee-calendar-api.vercel.app/api</span></span><br><span class="line">  <span class="attr">calendar_js:</span> <span class="string">https://cdn.jsdelivr.net/gh/Zfour/hexo-github-calendar@1.16/hexo_githubcalendar.js</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="博客透明度设置"><a href="#博客透明度设置" class="headerlink" title="博客透明度设置"></a>博客透明度设置</h3><ol><li>在 [Blogroot]\themes\source\css\ 目录下新建 alpha.css 输入：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 文章页背景 */</span></span><br><span class="line"><span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#post</span> &#123;</span><br><span class="line">    <span class="comment">/* 以下代表透明度为0.5 可以自行修改*/</span></span><br><span class="line">    <span class="attribute">opacity</span>: .<span class="number">9</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 所有页面背景 */</span></span><br><span class="line"><span class="selector-id">#aside_content</span> <span class="selector-class">.card-widget</span>,</span><br><span class="line"><span class="selector-id">#recent-posts</span>&gt;<span class="selector-class">.recent-post-item</span>,</span><br><span class="line"><span class="selector-class">.layout_page</span>&gt;<span class="selector-tag">div</span><span class="selector-pseudo">:first</span>-child<span class="selector-pseudo">:not</span>(<span class="selector-class">.recent-posts</span>),</span><br><span class="line"><span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#page</span>,</span><br><span class="line"><span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#post</span>,</span><br><span class="line"><span class="selector-class">.read-mode</span> <span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#post</span> &#123;</span><br><span class="line">    <span class="comment">/* 以下代表透明度为0.5 */</span></span><br><span class="line">    <span class="attribute">opacity</span>: .<span class="number">9</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*侧边栏背景*/</span></span><br><span class="line"><span class="selector-class">.aside-content</span>&gt;<span class="selector-class">.card-widget</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: .<span class="number">9</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sticky_layout</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: .<span class="number">9</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*文章页面*/</span></span><br><span class="line"><span class="selector-class">.layout</span>&gt;<span class="selector-id">#post</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: .<span class="number">9</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*分类页面*/</span></span><br><span class="line"><span class="selector-class">.layout</span>&gt;<span class="selector-id">#page</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: .<span class="number">9</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*时间轴页面*/</span></span><br><span class="line"><span class="selector-class">.layout</span>&gt;<span class="selector-id">#archive</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: .<span class="number">9</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在主题配置文件 inject&gt;head 中引入<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;[root]/css/alpha.css&quot;&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="首页页码样式调整"><a href="#首页页码样式调整" class="headerlink" title="首页页码样式调整"></a>首页页码样式调整</h3><p>修改 [Blogroot]\themes\butterfly\source\css_layout\pagination.styl, 将整个文件<strong>替换</strong>成以下内容，不保证魔改普适性，请务必记得做好文件备份方便回退！开头为效果配色，可以自行调整成适合自己的。<br><figure class="highlight styl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-pseudo">:root</span></span><br><span class="line">  <span class="attr">--pagenumber-color</span>: <span class="number">#ffffff</span></span><br><span class="line">  <span class="attr">--pagenumber-current-color</span>: <span class="number">#1E7EE2</span></span><br><span class="line">  <span class="attr">--pagenumber-current-shadow-color</span>: <span class="number">#104477</span></span><br><span class="line">  <span class="attr">--pagenumber-hover-color</span>: <span class="number">#1E7EE2</span></span><br><span class="line">  <span class="attr">--pagenumber-background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.85</span>)</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="attr">--pagenumber-color</span>: <span class="number">#ffffff</span></span><br><span class="line">  <span class="attr">--pagenumber-current-color</span>: <span class="number">#1E7EE2</span></span><br><span class="line">  <span class="attr">--pagenumber-current-shadow-color</span>: <span class="number">#104477</span></span><br><span class="line">  <span class="attr">--pagenumber-hover-color</span>: <span class="number">#1E7EE2</span></span><br><span class="line">  <span class="attr">--pagenumber-background-color</span>: <span class="built_in">rgba</span>(<span class="number">120</span>, <span class="number">120</span>, <span class="number">120</span>, <span class="number">0.85</span>)</span><br><span class="line"><span class="selector-id">#pagination</span></span><br><span class="line">  <span class="selector-class">.pagination</span></span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span></span><br><span class="line">    <span class="attribute">text-align</span>: center</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="selector-tag">a</span></span><br><span class="line">      <span class="attribute">color</span>: var(--pagenumber-color)</span><br><span class="line">    <span class="selector-pseudo">&amp;::after</span></span><br><span class="line">      <span class="attribute">content</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">      <span class="attribute">position</span> absolute</span><br><span class="line">      <span class="attribute">width</span> <span class="number">100%</span></span><br><span class="line">      <span class="attribute">height</span> <span class="number">35px</span></span><br><span class="line">      <span class="attribute">left</span> <span class="number">0</span></span><br><span class="line">      <span class="attribute">bottom</span> <span class="number">0</span></span><br><span class="line">      <span class="attribute">z-index</span> -<span class="number">1</span></span><br><span class="line">      <span class="attribute">background-image</span> -moz-linear-gradient(left, rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>) <span class="number">0%</span>, var(--pagenumber-background-color) <span class="number">40%</span>, var(--pagenumber-background-color) <span class="number">50%</span>, var(--pagenumber-background-color) <span class="number">60%</span>, rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>) <span class="number">100%</span>)</span><br><span class="line">      <span class="attribute">background-image</span> -webkit-linear-gradient(left, rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>) <span class="number">0%</span>, var(--pagenumber-background-color) <span class="number">40%</span>, var(--pagenumber-background-color) <span class="number">50%</span>, var(--pagenumber-background-color) <span class="number">60%</span>, rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>) <span class="number">100%</span>)</span><br><span class="line">      <span class="attribute">background-image</span> linear-gradient(to right, rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>) <span class="number">0%</span>, var(--pagenumber-background-color) <span class="number">40%</span>, var(--pagenumber-background-color) <span class="number">50%</span>, var(--pagenumber-background-color) <span class="number">60%</span>, rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>) <span class="number">100%</span>)</span><br><span class="line">  <span class="selector-class">.page-number</span></span><br><span class="line">    &amp;<span class="selector-class">.current</span></span><br><span class="line">      <span class="attribute">background</span> var(--pagenumber-current-color)</span><br><span class="line">      <span class="attribute">color</span> var(--pagenumber-color)</span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">9px</span> <span class="number">3px</span> <span class="number">0px</span> <span class="number">3px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">      <span class="selector-pseudo">&amp;:before</span></span><br><span class="line">        <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="attribute">position</span>: absolute;</span><br><span class="line">        <span class="attribute">top</span>: -<span class="number">10px</span>;</span><br><span class="line">        <span class="attribute">transform</span>: translateX(-<span class="number">20px</span>);</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">30px</span>;</span><br><span class="line">        <span class="attribute">border</span>: <span class="number">10px</span> solid transparent;</span><br><span class="line">        <span class="attribute">border-bottom</span>: <span class="number">7px</span> solid var(--pagenumber-current-shadow-color);</span><br><span class="line">        <span class="attribute">z-index</span>: -<span class="number">1</span>;</span><br><span class="line">        <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">          <span class="selector-pseudo">&amp;::after</span></span><br><span class="line">            <span class="attribute">display</span> none</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.layout</span></span><br><span class="line">  &amp; &gt; <span class="selector-class">.recent-posts</span></span><br><span class="line">    <span class="selector-class">.pagination</span></span><br><span class="line">      &amp; &gt; *</span><br><span class="line">        <span class="attribute">display</span>: inline-block</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">6px</span></span><br><span class="line">        <span class="attribute">min-width</span>: <span class="number">30px</span></span><br><span class="line">        <span class="attribute">width</span>: auto</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">35px</span></span><br><span class="line">        <span class="attribute">line-height</span>: <span class="number">30px</span></span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">4px</span> <span class="number">3px</span> <span class="number">0px</span> <span class="number">3px</span>;</span><br><span class="line"></span><br><span class="line">      &amp; &gt; *<span class="selector-pseudo">:not</span>(.space)</span><br><span class="line">        <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">          <span class="attribute">background</span>: var(--pagenumber-hover-color)</span><br><span class="line">          <span class="attribute">color</span>: var(--pagenumber-color)</span><br><span class="line"></span><br><span class="line">  &amp; &gt; <span class="selector-tag">div</span><span class="selector-pseudo">:not</span>(.recent-posts)</span><br><span class="line">    <span class="selector-class">.pagination</span></span><br><span class="line">      <span class="selector-class">.page-number</span></span><br><span class="line">        <span class="attribute">color</span>: var(--pagenumber-color);</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">13px</span> <span class="number">5px</span> <span class="number">5px</span>;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">        <span class="attribute">position</span>: relative;</span><br><span class="line">        <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">          <span class="attribute">color</span>: var(--pagenumber-color)</span><br><span class="line">          <span class="selector-pseudo">&amp;::after</span></span><br><span class="line">            <span class="attribute">content</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">            <span class="attribute">position</span> absolute</span><br><span class="line">            <span class="attribute">width</span> <span class="number">24px</span></span><br><span class="line">            <span class="attribute">height</span> <span class="number">24px</span></span><br><span class="line">            <span class="attribute">background</span> var(--pagenumber-hover-color)</span><br><span class="line">            -moz-<span class="attribute">border-radius</span> <span class="number">100%</span></span><br><span class="line">            -webkit-<span class="attribute">border-radius</span> <span class="number">100%</span></span><br><span class="line">            <span class="attribute">border-radius</span> <span class="number">100%</span></span><br><span class="line">            <span class="attribute">z-index</span> -<span class="number">1</span></span><br><span class="line">            <span class="attribute">left</span> -<span class="number">3px</span></span><br><span class="line">            <span class="attribute">bottom</span> <span class="number">4px</span></span><br><span class="line">            <span class="attribute">margin</span> auto</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.pagination-info</span></span><br><span class="line">    <span class="attribute">position</span>: absolute</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">40px</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line">    <span class="attribute">transform</span>: translate(<span class="number">0</span>, -<span class="number">50%</span>)</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.prev_info</span>,</span><br><span class="line">  <span class="selector-class">.next_info</span></span><br><span class="line">    <span class="keyword">@extend</span> <span class="selector-class">.limit-one-line</span></span><br><span class="line">    <span class="attribute">color</span>: var(--white)</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">500</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.next-post</span></span><br><span class="line">    <span class="selector-class">.pagination-info</span></span><br><span class="line">      <span class="attribute">text-align</span>: right</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.pull-full</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span> <span class="meta">!important</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.prev-post</span> <span class="selector-class">.label</span>,</span><br><span class="line">  <span class="selector-class">.next-post</span> <span class="selector-class">.label</span></span><br><span class="line">    <span class="attribute">color</span>: var(--light-grey)</span><br><span class="line">    <span class="attribute">text-transform</span>: uppercase</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">90%</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.prev-post</span>,</span><br><span class="line">  <span class="selector-class">.next-post</span></span><br><span class="line">    <span class="keyword">@extend</span> <span class="selector-class">.postImgHover</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50%</span></span><br><span class="line"></span><br><span class="line">    +<span class="built_in">maxWidth768</span>()</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">a</span></span><br><span class="line">      <span class="attribute">position</span>: relative</span><br><span class="line">      <span class="attribute">display</span>: block</span><br><span class="line">      <span class="attribute">overflow</span>: hidden</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">150px</span></span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-class">.pagination-post</span></span><br><span class="line">    <span class="attribute">overflow</span>: hidden</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">40px</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="variable">$dark</span>-black</span><br></pre></td></tr></table></figure><br>原文件备份：<br><figure class="highlight styl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#pagination</span></span><br><span class="line">  <span class="selector-class">.pagination</span></span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span></span><br><span class="line">    <span class="attribute">text-align</span>: center</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.page-number</span></span><br><span class="line">    &amp;<span class="selector-class">.current</span></span><br><span class="line">      <span class="attribute">background</span>: <span class="variable">$theme</span>-paginator-color</span><br><span class="line">      <span class="attribute">color</span>: var(--white)</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.pagination-info</span></span><br><span class="line">    <span class="attribute">position</span>: absolute</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">40px</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line">    <span class="attribute">transform</span>: translate(<span class="number">0</span>, -<span class="number">50%</span>)</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.prev_info</span>,</span><br><span class="line">  <span class="selector-class">.next_info</span></span><br><span class="line">    <span class="keyword">@extend</span> <span class="selector-class">.limit-one-line</span></span><br><span class="line">    <span class="attribute">color</span>: var(--white)</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">500</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.next-post</span></span><br><span class="line">    <span class="selector-class">.pagination-info</span></span><br><span class="line">      <span class="attribute">text-align</span>: right</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.pull-full</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span> <span class="meta">!important</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.prev-post</span> <span class="selector-class">.label</span>,</span><br><span class="line">  <span class="selector-class">.next-post</span> <span class="selector-class">.label</span></span><br><span class="line">    <span class="attribute">color</span>: var(--light-grey)</span><br><span class="line">    <span class="attribute">text-transform</span>: uppercase</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">90%</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.prev-post</span>,</span><br><span class="line">  <span class="selector-class">.next-post</span></span><br><span class="line">    <span class="keyword">@extend</span> <span class="selector-class">.postImgHover</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50%</span></span><br><span class="line"></span><br><span class="line">    +<span class="built_in">maxWidth768</span>()</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">a</span></span><br><span class="line">      <span class="attribute">position</span>: relative</span><br><span class="line">      <span class="attribute">display</span>: block</span><br><span class="line">      <span class="attribute">overflow</span>: hidden</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">150px</span></span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-class">.pagination-post</span></span><br><span class="line">    <span class="attribute">overflow</span>: hidden</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">40px</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="variable">$dark</span>-black</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.layout</span></span><br><span class="line">  &amp; &gt; <span class="selector-class">.recent-posts</span></span><br><span class="line">    <span class="selector-class">.pagination</span></span><br><span class="line">      &amp; &gt; *</span><br><span class="line">        <span class="attribute">display</span>: inline-block</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">6px</span></span><br><span class="line">        <span class="attribute">width</span>: w = <span class="number">2.5em</span></span><br><span class="line">        <span class="attribute">height</span>: w</span><br><span class="line">        <span class="attribute">line-height</span>: w</span><br><span class="line"></span><br><span class="line">      &amp; &gt; *<span class="selector-pseudo">:not</span>(.space)</span><br><span class="line">        <span class="keyword">@extend</span> <span class="selector-class">.cardHover</span></span><br><span class="line"></span><br><span class="line">        <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">          <span class="attribute">background</span>: var(--btn-hover-color)</span><br><span class="line">          <span class="attribute">color</span>: var(--btn-color)</span><br><span class="line"></span><br><span class="line">  &amp; &gt; <span class="selector-tag">div</span><span class="selector-pseudo">:not</span>(.recent-posts)</span><br><span class="line">    <span class="selector-class">.pagination</span></span><br><span class="line">      <span class="selector-class">.page-number</span></span><br><span class="line">        <span class="attribute">display</span>: inline-block</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">4px</span></span><br><span class="line">        <span class="attribute">min-width</span>: w = <span class="number">24px</span></span><br><span class="line">        <span class="attribute">height</span>: w</span><br><span class="line">        <span class="attribute">text-align</span>: center</span><br><span class="line">        <span class="attribute">line-height</span>: w</span><br><span class="line">        <span class="attribute">cursor</span>: pointer</span><br></pre></td></tr></table></figure></p><h3 id="首页文章卡片修改"><a href="#首页文章卡片修改" class="headerlink" title="首页文章卡片修改"></a>首页文章卡片修改</h3><ol><li>修改 [Blogroot]\themes\butterfly\layout\includes\mixins\post-ui.pug，将整个文件的内容替换为以下代码：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">mixin postUI(posts)</span><br><span class="line">  each article , index in page.posts.data</span><br><span class="line">    .recent-post-item</span><br><span class="line">      -</span><br><span class="line">        let link = article.link || article.path</span><br><span class="line">        let title = article.title || _p(&#x27;no_title&#x27;)</span><br><span class="line">        const position = theme.cover.position</span><br><span class="line">        let leftOrRight = position === &#x27;both&#x27;</span><br><span class="line">          ? index%2 == 0 ? &#x27;left&#x27; : &#x27;right&#x27;</span><br><span class="line">          : position === &#x27;left&#x27; ? &#x27;left&#x27; : &#x27;right&#x27;</span><br><span class="line">        let post_cover = article.cover</span><br><span class="line">        let no_cover = article.cover === false || !theme.cover.index_enable ? &#x27;no-cover&#x27; : &#x27;&#x27;</span><br><span class="line">      -</span><br><span class="line">      .recent-post-content(class=leftOrRight)</span><br><span class="line">        a.article-content(href=url_for(link) title=subtitle)</span><br><span class="line">          //- Display the article introduction on homepage</span><br><span class="line">          case theme.index_post_content.method</span><br><span class="line">            when false</span><br><span class="line">              - break</span><br><span class="line">            when 1</span><br><span class="line">              .article-content-text!= article.description</span><br><span class="line">            when 2</span><br><span class="line">              if article.description</span><br><span class="line">                .article-content-text!= article.description</span><br><span class="line">              else</span><br><span class="line">                - const content = strip_html(article.content)</span><br><span class="line">                - let expert = content.substring(0, theme.index_post_content.length)</span><br><span class="line">                - content.length &gt; theme.index_post_content.length ? expert += &#x27; ...&#x27; : &#x27;&#x27;</span><br><span class="line">                .article-content-text!= expert</span><br><span class="line">            default</span><br><span class="line">              - const content = strip_html(article.content)</span><br><span class="line">              - let expert = content.substring(0, theme.index_post_content.length)</span><br><span class="line">              - content.length &gt; theme.index_post_content.length ? expert += &#x27; ...&#x27; : &#x27;&#x27;</span><br><span class="line">              .article-content-text!= expert</span><br><span class="line">        .recent-post-info</span><br><span class="line">          a.article-title(href=url_for(link) title=subtitle)</span><br><span class="line">            .article-title-link= title</span><br><span class="line">          .recent-post-meta                </span><br><span class="line">            .article-meta-wrap</span><br><span class="line">              if (is_home() &amp;&amp; (article.top || article.sticky &gt; 0))</span><br><span class="line">                span.article-meta</span><br><span class="line">                  i.fas.fa-thumbtack.sticky</span><br><span class="line">                  span.sticky= _p(&#x27;sticky&#x27;)</span><br><span class="line">                  span.article-meta-separator |</span><br><span class="line">              if (theme.post_meta.page.date_type)</span><br><span class="line">                span.post-meta-date</span><br><span class="line">                  if (theme.post_meta.page.date_type === &#x27;both&#x27;)</span><br><span class="line">                    i.far.fa-calendar-alt</span><br><span class="line">                    span.article-meta-label=_p(&#x27;post.created&#x27;)</span><br><span class="line">                    time.post-meta-date-created(datetime=date_xml(article.date) title=_p(&#x27;post.created&#x27;) + &#x27; &#x27; + full_date(article.date))=date(article.date, config.date_format)</span><br><span class="line">                    span.article-meta-separator |</span><br><span class="line">                    i.fas.fa-history</span><br><span class="line">                    span.article-meta-label=_p(&#x27;post.updated&#x27;)</span><br><span class="line">                    time.post-meta-date-updated(datetime=date_xml(article.updated) title=_p(&#x27;post.updated&#x27;) + &#x27; &#x27; + full_date(article.updated))=date(article.updated, config.date_format)</span><br><span class="line">                  else</span><br><span class="line">                    - let data_type_updated = theme.post_meta.page.date_type === &#x27;updated&#x27;</span><br><span class="line">                    - let date_type = data_type_updated ? &#x27;updated&#x27; : &#x27;date&#x27;</span><br><span class="line">                    - let date_icon = data_type_updated ? &#x27;fas fa-history&#x27; :&#x27;far fa-calendar-alt&#x27;</span><br><span class="line">                    - let date_title = data_type_updated ? _p(&#x27;post.updated&#x27;) : _p(&#x27;post.created&#x27;)</span><br><span class="line">                    i(class=date_icon)</span><br><span class="line">                    span.article-meta-label=date_title</span><br><span class="line">                    time(datetime=date_xml(article[date_type]) title=date_title + &#x27; &#x27; + full_date(article[date_type]))=date(article[date_type], config.date_format)</span><br><span class="line">              if (theme.post_meta.page.categories &amp;&amp; article.categories.data.length &gt; 0)</span><br><span class="line">                span.article-meta</span><br><span class="line">                  span.article-meta-separator |</span><br><span class="line">                  i.fas.fa-inbox</span><br><span class="line">                  each item, index in article.categories.data</span><br><span class="line">                    a(href=url_for(item.path)).article-meta__categories #[=item.name]</span><br><span class="line">                    if (index &lt; article.categories.data.length - 1)</span><br><span class="line">                      i.fas.fa-angle-right.article-meta-link</span><br><span class="line">              if (theme.post_meta.page.tags &amp;&amp; article.tags.data.length &gt; 0)</span><br><span class="line">                span.article-meta.tags</span><br><span class="line">                  span.article-meta-separator |</span><br><span class="line">                  i.fas.fa-tag</span><br><span class="line">                  each item, index in article.tags.data</span><br><span class="line">                    a(href=url_for(item.path)).article-meta__tags #[=item.name]</span><br><span class="line">                    if (index &lt; article.tags.data.length - 1)</span><br><span class="line">                      span.article-meta-link #[=&#x27;•&#x27;]</span><br><span class="line"></span><br><span class="line">              mixin countBlockInIndex</span><br><span class="line">                - needLoadCountJs = true</span><br><span class="line">                span.article-meta</span><br><span class="line">                  span.article-meta-separator |</span><br><span class="line">                  i.fas.fa-comments</span><br><span class="line">                  if block</span><br><span class="line">                    block</span><br><span class="line">                  span.article-meta-label= &#x27; &#x27; + _p(&#x27;card_post_count&#x27;)</span><br><span class="line"></span><br><span class="line">              if theme.comments.card_post_count</span><br><span class="line">                case theme.comments.use[0]</span><br><span class="line">                  when &#x27;Disqus&#x27;</span><br><span class="line">                  when &#x27;Disqusjs&#x27;</span><br><span class="line">                    +countBlockInIndex</span><br><span class="line">                      a(href=full_url_for(link) + &#x27;#disqus_thread&#x27;)</span><br><span class="line">                  when &#x27;Valine&#x27;</span><br><span class="line">                    +countBlockInIndex</span><br><span class="line">                      a(href=url_for(link) + &#x27;#post-comment&#x27; itemprop=&quot;discussionUrl&quot;)</span><br><span class="line">                        span.valine-comment-count(data-xid=url_for(link) itemprop=&quot;commentCount&quot;)</span><br><span class="line">                  when &#x27;Waline&#x27;</span><br><span class="line">                    +countBlockInIndex</span><br><span class="line">                      a(href=url_for(link) + &#x27;#post-comment&#x27;)</span><br><span class="line">                        span.waline-comment-count(id=url_for(link))</span><br><span class="line">                  when &#x27;Twikoo&#x27;</span><br><span class="line">                    +countBlockInIndex</span><br><span class="line">                      a.twikoo-count(href=url_for(link) + &#x27;#post-comment&#x27;)</span><br><span class="line">                  when &#x27;Facebook Comments&#x27;</span><br><span class="line">                    +countBlockInIndex</span><br><span class="line">                      a(href=url_for(link) + &#x27;#post-comment&#x27;)</span><br><span class="line">                        span.fb-comments-count(data-href=urlNoIndex(article.permalink))</span><br><span class="line">        .recent-post-cover</span><br><span class="line">          img.article-cover(src=url_for(post_cover) onerror=`this.onerror=null;this.src=&#x27;`+ url_for(theme.error_img.post_page) + `&#x27;` alt=subtitle)</span><br><span class="line"></span><br><span class="line">    if theme.ad &amp;&amp; theme.ad.index</span><br><span class="line">      if (index + 1) % 3 == 0</span><br><span class="line">        .recent-post-item.ads-wrap!=theme.ad.index</span><br></pre></td></tr></table></figure></li></ol><p>备份：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">mixin postUI(posts)</span><br><span class="line">  each article , index in page.posts.data</span><br><span class="line">    .recent-post-item</span><br><span class="line">      -</span><br><span class="line">        let link = article.link || article.path</span><br><span class="line">        let title = article.title || _p(&#x27;no_title&#x27;)</span><br><span class="line">        const position = theme.cover.position</span><br><span class="line">        let leftOrRight = position === &#x27;both&#x27; </span><br><span class="line">          ? index%2 == 0 ? &#x27;left&#x27; : &#x27;right&#x27;</span><br><span class="line">          : position === &#x27;left&#x27; ? &#x27;left&#x27; : &#x27;right&#x27;</span><br><span class="line">        let post_cover = article.cover</span><br><span class="line">        let no_cover = article.cover === false || !theme.cover.index_enable ? &#x27;no-cover&#x27; : &#x27;&#x27;</span><br><span class="line">      -</span><br><span class="line">      if post_cover &amp;&amp; theme.cover.index_enable</span><br><span class="line">        .post_cover(class=leftOrRight)</span><br><span class="line">          a(href=url_for(link) title=title)</span><br><span class="line">            img.post_bg(src=url_for(post_cover) onerror=`this.onerror=null;this.src=&#x27;`+ url_for(theme.error_img.post_page) + `&#x27;` alt=title)</span><br><span class="line">      .recent-post-info(class=no_cover)</span><br><span class="line">        a.article-title(href=url_for(link) title=title)= title</span><br><span class="line">        .article-meta-wrap</span><br><span class="line">          if (is_home() &amp;&amp; (article.top || article.sticky &gt; 0))</span><br><span class="line">            span.article-meta</span><br><span class="line">              i.fas.fa-thumbtack.sticky</span><br><span class="line">              span.sticky= _p(&#x27;sticky&#x27;)</span><br><span class="line">              span.article-meta-separator |</span><br><span class="line">          if (theme.post_meta.page.date_type)</span><br><span class="line">            span.post-meta-date</span><br><span class="line">              if (theme.post_meta.page.date_type === &#x27;both&#x27;)</span><br><span class="line">                i.far.fa-calendar-alt</span><br><span class="line">                span.article-meta-label=_p(&#x27;post.created&#x27;)</span><br><span class="line">                time.post-meta-date-created(datetime=date_xml(article.date) title=_p(&#x27;post.created&#x27;) + &#x27; &#x27; + full_date(article.date))=date(article.date, config.date_format)</span><br><span class="line">                span.article-meta-separator |</span><br><span class="line">                i.fas.fa-history</span><br><span class="line">                span.article-meta-label=_p(&#x27;post.updated&#x27;)</span><br><span class="line">                time.post-meta-date-updated(datetime=date_xml(article.updated) title=_p(&#x27;post.updated&#x27;) + &#x27; &#x27; + full_date(article.updated))=date(article.updated, config.date_format)</span><br><span class="line">              else</span><br><span class="line">                - let data_type_updated = theme.post_meta.page.date_type === &#x27;updated&#x27;</span><br><span class="line">                - let date_type = data_type_updated ? &#x27;updated&#x27; : &#x27;date&#x27;</span><br><span class="line">                - let date_icon = data_type_updated ? &#x27;fas fa-history&#x27; :&#x27;far fa-calendar-alt&#x27;</span><br><span class="line">                - let date_title = data_type_updated ? _p(&#x27;post.updated&#x27;) : _p(&#x27;post.created&#x27;)</span><br><span class="line">                i(class=date_icon)</span><br><span class="line">                span.article-meta-label=date_title</span><br><span class="line">                time(datetime=date_xml(article[date_type]) title=date_title + &#x27; &#x27; + full_date(article[date_type]))=date(article[date_type], config.date_format)</span><br><span class="line">          if (theme.post_meta.page.categories &amp;&amp; article.categories.data.length &gt; 0)</span><br><span class="line">            span.article-meta</span><br><span class="line">              span.article-meta-separator |</span><br><span class="line">              i.fas.fa-inbox</span><br><span class="line">              each item, index in article.categories.data</span><br><span class="line">                a(href=url_for(item.path)).article-meta__categories #[=item.name]</span><br><span class="line">                if (index &lt; article.categories.data.length - 1)</span><br><span class="line">                  i.fas.fa-angle-right.article-meta-link</span><br><span class="line">          if (theme.post_meta.page.tags &amp;&amp; article.tags.data.length &gt; 0)</span><br><span class="line">            span.article-meta.tags</span><br><span class="line">              span.article-meta-separator |</span><br><span class="line">              i.fas.fa-tag</span><br><span class="line">              each item, index in article.tags.data</span><br><span class="line">                a(href=url_for(item.path)).article-meta__tags #[=item.name]</span><br><span class="line">                if (index &lt; article.tags.data.length - 1)</span><br><span class="line">                  span.article-meta-link #[=&#x27;•&#x27;]</span><br><span class="line">          </span><br><span class="line">          mixin countBlockInIndex</span><br><span class="line">            - needLoadCountJs = true</span><br><span class="line">            span.article-meta</span><br><span class="line">              span.article-meta-separator |</span><br><span class="line">              i.fas.fa-comments</span><br><span class="line">              if block</span><br><span class="line">                block</span><br><span class="line">              span.article-meta-label= &#x27; &#x27; + _p(&#x27;card_post_count&#x27;)</span><br><span class="line">          </span><br><span class="line">          if theme.comments.card_post_count</span><br><span class="line">            case theme.comments.use[0]</span><br><span class="line">              when &#x27;Disqus&#x27;</span><br><span class="line">              when &#x27;Disqusjs&#x27;</span><br><span class="line">                +countBlockInIndex</span><br><span class="line">                  a(href=full_url_for(link) + &#x27;#disqus_thread&#x27;)</span><br><span class="line">              when &#x27;Valine&#x27;</span><br><span class="line">                +countBlockInIndex</span><br><span class="line">                  a(href=url_for(link) + &#x27;#post-comment&#x27; itemprop=&quot;discussionUrl&quot;)</span><br><span class="line">                    span.valine-comment-count(data-xid=url_for(link) itemprop=&quot;commentCount&quot;)</span><br><span class="line">              when &#x27;Waline&#x27;</span><br><span class="line">                +countBlockInIndex</span><br><span class="line">                  a(href=url_for(link) + &#x27;#post-comment&#x27;)</span><br><span class="line">                    span.waline-comment-count(id=url_for(link))</span><br><span class="line">              when &#x27;Twikoo&#x27;</span><br><span class="line">                +countBlockInIndex</span><br><span class="line">                  a.twikoo-count(href=url_for(link) + &#x27;#post-comment&#x27;)</span><br><span class="line">              when &#x27;Facebook Comments&#x27;</span><br><span class="line">                +countBlockInIndex</span><br><span class="line">                  a(href=url_for(link) + &#x27;#post-comment&#x27;)</span><br><span class="line">                    span.fb-comments-count(data-href=urlNoIndex(article.permalink))</span><br><span class="line"></span><br><span class="line">        //- Display the article introduction on homepage</span><br><span class="line">        case theme.index_post_content.method</span><br><span class="line">          when false</span><br><span class="line">            - break</span><br><span class="line">          when 1</span><br><span class="line">            .content!= article.description</span><br><span class="line">          when 2</span><br><span class="line">            if article.description</span><br><span class="line">              .content!= article.description</span><br><span class="line">            else</span><br><span class="line">              - const content = strip_html(article.content)</span><br><span class="line">              - let expert = content.substring(0, theme.index_post_content.length) </span><br><span class="line">              - content.length &gt; theme.index_post_content.length ? expert += &#x27; ...&#x27; : &#x27;&#x27;</span><br><span class="line">              .content!= expert</span><br><span class="line">          default</span><br><span class="line">            - const content = strip_html(article.content)</span><br><span class="line">            - let expert = content.substring(0, theme.index_post_content.length) </span><br><span class="line">            - content.length &gt; theme.index_post_content.length ? expert += &#x27; ...&#x27; : &#x27;&#x27;</span><br><span class="line">            .content!= expert</span><br><span class="line"></span><br><span class="line">    if theme.ad &amp;&amp; theme.ad.index</span><br><span class="line">      if (index + 1) % 3 == 0</span><br><span class="line">        .recent-post-item.ads-wrap!=theme.ad.index</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><ol><li>修改 [Blogroot]\themes\butterfly\source\css_page\homepage.styl，将整个文件的内容替换为以下代码：<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//default color:</span></span><br><span class="line"><span class="selector-pseudo">:root</span></span><br><span class="line">  <span class="attr">--recent-post-bgcolor</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span>)</span><br><span class="line">  <span class="attr">--article-content-bgcolor</span>: <span class="number">#49b1f5</span></span><br><span class="line">  <span class="attr">--recent-post-triangle</span>: <span class="number">#fff</span></span><br><span class="line">  <span class="attr">--recent-post-cover-shadow</span>: <span class="number">#ffffff</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&quot;dark&quot;</span>]</span></span><br><span class="line">  <span class="attr">--recent-post-bgcolor</span>: <span class="built_in">rgba</span>(<span class="number">35</span>,<span class="number">35</span>,<span class="number">35</span>,<span class="number">0.5</span>)</span><br><span class="line">  <span class="attr">--article-content-bgcolor</span>: <span class="number">#99999a</span></span><br><span class="line">  <span class="attr">--recent-post-triangle</span>: <span class="number">#37e2dd</span></span><br><span class="line">  <span class="attr">--recent-post-cover-shadow</span>: <span class="number">#232323</span></span><br><span class="line"><span class="selector-class">.recent-posts</span></span><br><span class="line">  <span class="attribute">padding</span> <span class="number">0</span> <span class="number">15px</span> <span class="number">0</span> <span class="number">15px</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.recent-post-item</span></span><br><span class="line">    <span class="attribute">margin-bottom</span> <span class="number">15px</span></span><br><span class="line">    <span class="attribute">width</span> <span class="number">100%</span></span><br><span class="line">    <span class="attribute">background</span> var(--recent-post-bgcolor)</span><br><span class="line">    <span class="attribute">overflow</span> hidden</span><br><span class="line">    <span class="attribute">border-radius</span> <span class="number">15px</span></span><br><span class="line">    <span class="selector-class">.recent-post-info</span></span><br><span class="line">      <span class="selector-class">.article-title-link</span></span><br><span class="line">        <span class="attribute">display</span> -webkit-box</span><br><span class="line">        -webkit-box-orient vertical</span><br><span class="line">        -webkit-line-clamp <span class="number">2</span></span><br><span class="line">        <span class="attribute">overflow</span> hidden</span><br><span class="line">    <span class="selector-class">.article-content</span></span><br><span class="line">      <span class="attribute">background</span> var(--article-content-bgcolor)</span><br><span class="line">      <span class="attribute">position</span> relative</span><br><span class="line">      <span class="attribute">display</span> flex</span><br><span class="line">      <span class="attribute">align-items</span>: center;</span><br><span class="line">      <span class="attribute">justify-content</span>: center;</span><br><span class="line">      <span class="selector-class">.article-content-text</span></span><br><span class="line">        <span class="attribute">transition</span>: all .<span class="number">8s</span> cubic-bezier(<span class="number">0.59</span>, <span class="number">0.01</span>, <span class="number">0.48</span>, <span class="number">1.17</span>)</span><br><span class="line">        <span class="attribute">display</span> -webkit-box</span><br><span class="line">        -webkit-box-orient vertical</span><br><span class="line">        -webkit-line-clamp <span class="number">4</span></span><br><span class="line">        <span class="attribute">text-overflow</span>: ellipsis</span><br><span class="line">        <span class="attribute">overflow</span> hidden</span><br><span class="line">        <span class="attribute">color</span> <span class="number">#fff</span></span><br><span class="line">        <span class="attribute">text-shadow</span>: <span class="number">1px</span> <span class="number">2px</span> <span class="number">3px</span> <span class="number">#000</span>;</span><br><span class="line">    <span class="selector-class">.recent-post-cover</span></span><br><span class="line">      <span class="attribute">position</span> relative</span><br><span class="line">      <span class="attribute">background</span> transparent</span><br><span class="line">      <span class="selector-tag">img</span></span><br><span class="line">        &amp;<span class="selector-class">.article-cover</span></span><br><span class="line">          <span class="attribute">height</span> <span class="number">100%</span></span><br><span class="line">          <span class="attribute">width</span> <span class="number">100%</span></span><br><span class="line">          <span class="attribute">object-fit</span> cover</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.recent-post-info</span></span><br><span class="line">      <span class="attribute">align-items</span> center</span><br><span class="line">      <span class="attribute">flex-direction</span> column</span><br><span class="line">      <span class="attribute">position</span> relative</span><br><span class="line">      <span class="attribute">background</span> var(--recent-post-bgcolor)</span><br><span class="line">      <span class="attribute">display</span> flex</span><br><span class="line">      <span class="attribute">color</span> <span class="number">#000000</span></span><br><span class="line">      <span class="selector-class">.article-title</span></span><br><span class="line">        <span class="attribute">height</span> <span class="number">50%</span></span><br><span class="line">        <span class="attribute">font-size</span> <span class="number">24px</span></span><br><span class="line">        <span class="attribute">display</span>: flex</span><br><span class="line">        <span class="attribute">align-items</span>: center</span><br><span class="line">        <span class="attribute">justify-content</span>: flex-end</span><br><span class="line">        <span class="attribute">flex-direction</span>: column</span><br><span class="line">        <span class="selector-class">.article-title-link</span></span><br><span class="line">          <span class="attribute">color</span>: var(--text-highlight-color)</span><br><span class="line">          <span class="attribute">transition</span>: all .<span class="number">2s</span> ease-in-out</span><br><span class="line">          <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">            <span class="attribute">color</span>: <span class="variable">$text</span>-hover</span><br><span class="line">      <span class="selector-class">.recent-post-meta</span></span><br><span class="line">        <span class="attribute">height</span> <span class="number">50%</span></span><br><span class="line">        <span class="attribute">display</span>: flex</span><br><span class="line">        <span class="attribute">align-items</span>: center</span><br><span class="line">        <span class="attribute">justify-content</span>: flex-start</span><br><span class="line">        <span class="attribute">flex-direction</span>: column</span><br><span class="line">      <span class="selector-class">.article-meta-wrap</span></span><br><span class="line">        <span class="attribute">font-size</span> <span class="number">12px</span></span><br><span class="line">        <span class="attribute">color</span> <span class="number">#969797</span></span><br><span class="line">        <span class="attribute">display</span>: -webkit-box;</span><br><span class="line">        -webkit-box-orient: vertical;</span><br><span class="line">        -webkit-line-clamp: <span class="number">3</span>;</span><br><span class="line">        <span class="attribute">overflow</span>: hidden;</span><br><span class="line">        <span class="selector-tag">a</span></span><br><span class="line">          <span class="attribute">color</span>: var(--text-highlight-color)</span><br><span class="line">          <span class="attribute">transition</span>: all .<span class="number">2s</span> ease-in-out</span><br><span class="line">          <span class="attribute">color</span> <span class="number">#969797</span></span><br><span class="line">          <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">            <span class="attribute">color</span>: <span class="variable">$text</span>-hover</span><br><span class="line">    &amp;<span class="selector-class">.ads-wrap</span></span><br><span class="line">      <span class="attribute">display</span>: block <span class="meta">!important</span></span><br><span class="line">      <span class="attribute">height</span>: auto <span class="meta">!important</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>:<span class="number">600px</span>)</span><br><span class="line">  .recent-post-item</span><br><span class="line">    &amp;:<span class="attribute">hover</span></span><br><span class="line">      .recent-post-content</span><br><span class="line">        &amp;.both,</span><br><span class="line">        &amp;.right</span><br><span class="line">          transform translateX(<span class="number">21%</span>)</span><br><span class="line">          transition: all .<span class="number">8s</span> cubic-bezier(<span class="number">0.59</span>, <span class="number">0.01</span>, <span class="number">0.48</span>, <span class="number">1.17</span>)</span><br><span class="line">          &amp;::before</span><br><span class="line">            transition: all .<span class="number">8s</span> cubic-bezier(<span class="number">0.59</span>, <span class="number">0.01</span>, <span class="number">0.48</span>, <span class="number">1.17</span>)</span><br><span class="line">            left: <span class="number">50px</span>;</span><br><span class="line">          <span class="selector-class">.article-content-text</span></span><br><span class="line">            <span class="attribute">margin</span> <span class="number">20px</span> <span class="number">20px</span> <span class="number">20px</span> <span class="number">60px</span></span><br><span class="line">        &amp;<span class="selector-class">.left</span></span><br><span class="line">          <span class="attribute">transform</span> translateX(-<span class="number">21%</span>)</span><br><span class="line">          <span class="attribute">transition</span>: all .<span class="number">8s</span> cubic-bezier(<span class="number">0.59</span>, <span class="number">0.01</span>, <span class="number">0.48</span>, <span class="number">1.17</span>)</span><br><span class="line">          <span class="selector-pseudo">&amp;::before</span></span><br><span class="line">            <span class="attribute">transition</span>: all .<span class="number">8s</span> cubic-bezier(<span class="number">0.59</span>, <span class="number">0.01</span>, <span class="number">0.48</span>, <span class="number">1.17</span>)</span><br><span class="line">            <span class="attribute">right</span>: <span class="number">50px</span>;</span><br><span class="line">          <span class="selector-class">.article-content-text</span></span><br><span class="line">            <span class="attribute">margin</span> <span class="number">20px</span> <span class="number">60px</span> <span class="number">20px</span> <span class="number">20px</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.recent-post-content</span></span><br><span class="line">      <span class="attribute">background</span> var(--recent-post-bgcolor)</span><br><span class="line">      <span class="attribute">position</span> relative</span><br><span class="line">      <span class="attribute">height</span> <span class="number">200px</span></span><br><span class="line">      <span class="attribute">width</span> <span class="number">130%</span></span><br><span class="line">      <span class="attribute">z-index</span> <span class="number">0</span></span><br><span class="line">      <span class="attribute">display</span> flex</span><br><span class="line">      <span class="attribute">overflow</span> hidden</span><br><span class="line">      <span class="attribute">border</span> <span class="number">0px</span> solid</span><br><span class="line">      <span class="selector-pseudo">&amp;::before</span></span><br><span class="line">        <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">background</span>: transparent;</span><br><span class="line">        <span class="attribute">position</span>: absolute;</span><br><span class="line">        <span class="attribute">z-index</span>: <span class="number">3</span>;</span><br><span class="line">        <span class="attribute">top</span>: calc(<span class="number">50%</span> - <span class="number">10px</span>);</span><br><span class="line">        <span class="attribute">border-top</span>: <span class="number">10px</span> solid transparent;</span><br><span class="line">        <span class="attribute">border-bottom</span>: <span class="number">10px</span> solid transparent;</span><br><span class="line">        <span class="attribute">transition</span>: all .<span class="number">5s</span> cubic-bezier(<span class="number">0.59</span>, <span class="number">0.01</span>, <span class="number">0.48</span>, <span class="number">1.17</span>)</span><br><span class="line">      &amp;<span class="selector-class">.both</span>,</span><br><span class="line">      &amp;<span class="selector-class">.right</span></span><br><span class="line">        <span class="attribute">flex-direction</span>: row;</span><br><span class="line">        <span class="attribute">left</span> calc(-<span class="number">23.07%</span> - <span class="number">41px</span>)</span><br><span class="line">        <span class="attribute">transition</span>: all .<span class="number">5s</span> cubic-bezier(<span class="number">0.59</span>, <span class="number">0.01</span>, <span class="number">0.48</span>, <span class="number">1.17</span>)</span><br><span class="line">        <span class="selector-pseudo">&amp;::before</span></span><br><span class="line">          <span class="attribute">left</span>: calc(<span class="number">23.07%</span> + <span class="number">40px</span>);</span><br><span class="line">          <span class="attribute">border-left</span>: <span class="number">6px</span> solid var(--recent-post-triangle);</span><br><span class="line">        <span class="selector-class">.recent-post-info</span></span><br><span class="line">          <span class="selector-pseudo">&amp;::before</span></span><br><span class="line">            <span class="attribute">background</span> linear-gradient(to right, var(--recent-post-cover-shadow), transparent)</span><br><span class="line">            <span class="attribute">left</span> calc(<span class="number">100%</span> - <span class="number">1px</span>)</span><br><span class="line">        <span class="selector-class">.article-content</span></span><br><span class="line">          <span class="selector-pseudo">&amp;::before</span></span><br><span class="line">            <span class="attribute">right</span> -<span class="number">59px</span></span><br><span class="line">            <span class="attribute">border-left</span> <span class="number">60px</span> solid var(--article-content-bgcolor)</span><br><span class="line">        <span class="selector-class">.article-content-text</span></span><br><span class="line">          <span class="attribute">margin</span> <span class="number">20px</span> <span class="number">20px</span> <span class="number">20px</span> <span class="number">0px</span></span><br><span class="line">        <span class="selector-class">.article-title</span></span><br><span class="line">          <span class="attribute">padding</span> <span class="number">0px</span> <span class="number">30px</span> <span class="number">0px</span> <span class="number">70px</span></span><br><span class="line">        <span class="selector-class">.recent-post-meta</span></span><br><span class="line">          <span class="attribute">padding</span> <span class="number">0px</span> <span class="number">20px</span> <span class="number">0px</span> <span class="number">70px</span></span><br><span class="line">      &amp;<span class="selector-class">.left</span></span><br><span class="line">        <span class="attribute">flex-direction</span>: row-reverse;</span><br><span class="line">        <span class="attribute">right</span> <span class="number">9px</span></span><br><span class="line">        <span class="attribute">transition</span>: all .<span class="number">5s</span> cubic-bezier(<span class="number">0.59</span>, <span class="number">0.01</span>, <span class="number">0.48</span>, <span class="number">1.17</span>)</span><br><span class="line">        <span class="selector-pseudo">&amp;::before</span></span><br><span class="line">          <span class="attribute">right</span>: calc(<span class="number">23.07%</span> + <span class="number">40px</span>);</span><br><span class="line">          <span class="attribute">border-right</span>: <span class="number">6px</span> solid var(--recent-post-triangle);</span><br><span class="line">        <span class="selector-class">.recent-post-info</span></span><br><span class="line">          <span class="selector-pseudo">&amp;::before</span></span><br><span class="line">            <span class="attribute">background</span> linear-gradient(to left, var(--recent-post-cover-shadow), transparent)</span><br><span class="line">            <span class="attribute">right</span> calc(<span class="number">100%</span> - <span class="number">1px</span>)</span><br><span class="line">        <span class="selector-class">.article-content</span></span><br><span class="line">          <span class="selector-pseudo">&amp;::before</span></span><br><span class="line">            <span class="attribute">left</span> -<span class="number">59px</span></span><br><span class="line">            <span class="attribute">border-right</span> <span class="number">60px</span> solid var(--article-content-bgcolor)</span><br><span class="line">        <span class="selector-class">.article-content-text</span></span><br><span class="line">          <span class="attribute">margin</span> <span class="number">20px</span> <span class="number">0px</span> <span class="number">20px</span> <span class="number">20px</span></span><br><span class="line">        <span class="selector-class">.article-title</span></span><br><span class="line">          <span class="attribute">padding</span> <span class="number">0px</span> <span class="number">70px</span> <span class="number">0px</span> <span class="number">30px</span></span><br><span class="line">        <span class="selector-class">.recent-post-meta</span></span><br><span class="line">          <span class="attribute">padding</span> <span class="number">0px</span> <span class="number">70px</span> <span class="number">0px</span> <span class="number">20px</span></span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.article-content</span></span><br><span class="line">      <span class="attribute">width</span> <span class="number">30%</span></span><br><span class="line">      <span class="attribute">height</span> <span class="number">200px</span></span><br><span class="line">      <span class="attribute">left</span> <span class="number">0</span></span><br><span class="line">      <span class="attribute">align-items</span> center</span><br><span class="line">      <span class="selector-pseudo">&amp;::before</span></span><br><span class="line">        <span class="attribute">content</span> <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="attribute">width</span> <span class="number">0</span></span><br><span class="line">        <span class="attribute">height</span> <span class="number">0</span></span><br><span class="line">        <span class="attribute">background</span> transparent</span><br><span class="line">        <span class="attribute">position</span> absolute</span><br><span class="line">        <span class="attribute">z-index</span> <span class="number">2</span></span><br><span class="line">        <span class="attribute">top</span> <span class="number">0</span></span><br><span class="line">        <span class="attribute">border-top</span> <span class="number">100px</span> solid transparent</span><br><span class="line">        <span class="attribute">border-bottom</span> <span class="number">100px</span> solid transparent</span><br><span class="line">    <span class="selector-class">.recent-post-info</span></span><br><span class="line">      <span class="attribute">width</span> <span class="number">60%</span></span><br><span class="line">      <span class="attribute">height</span> <span class="number">200px</span></span><br><span class="line">      <span class="selector-pseudo">&amp;::before</span></span><br><span class="line">        <span class="attribute">content</span> <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="attribute">width</span> <span class="number">200px</span></span><br><span class="line">        <span class="attribute">height</span> <span class="number">200px</span></span><br><span class="line">        <span class="attribute">position</span> absolute</span><br><span class="line">        <span class="attribute">z-index</span> <span class="number">1</span></span><br><span class="line">        <span class="attribute">top</span> <span class="number">0</span></span><br><span class="line">      <span class="selector-class">.recent-post-meta</span></span><br><span class="line">        &amp; &gt; <span class="selector-class">.article-meta-wrap</span></span><br><span class="line">          <span class="attribute">margin</span>: <span class="number">6px</span> <span class="number">0</span></span><br><span class="line">          <span class="attribute">color</span>: <span class="variable">$theme</span>-meta-color</span><br><span class="line">          <span class="attribute">font-size</span>: <span class="number">90%</span></span><br><span class="line"></span><br><span class="line">          &amp; &gt; <span class="selector-class">.post-meta-date</span></span><br><span class="line">            <span class="attribute">cursor</span>: default</span><br><span class="line"></span><br><span class="line">          <span class="selector-class">.sticky</span></span><br><span class="line">            <span class="attribute">color</span>: <span class="variable">$sticky</span>-color</span><br><span class="line"></span><br><span class="line">          <span class="selector-tag">i</span></span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">4px</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">          <span class="selector-class">.article-meta-label</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">hexo-config</span>(<span class="string">&#x27;post_meta.page.label&#x27;</span>)</span><br><span class="line">              <span class="attribute">padding-right</span>: <span class="number">4px</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">              <span class="attribute">display</span>: none</span><br><span class="line"></span><br><span class="line">          <span class="selector-class">.article-meta-separator</span></span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">6px</span></span><br><span class="line"></span><br><span class="line">          <span class="selector-class">.article-meta-link</span></span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">4px</span></span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span> <span class="built_in">hexo-config</span>(<span class="string">&#x27;post_meta.page.date_format&#x27;</span>) == <span class="string">&#x27;relative&#x27;</span></span><br><span class="line">            <span class="selector-tag">time</span></span><br><span class="line">              <span class="attribute">display</span>: none</span><br><span class="line"></span><br><span class="line">          <span class="selector-tag">a</span></span><br><span class="line">            <span class="attribute">color</span>: <span class="variable">$theme</span>-meta-color</span><br><span class="line"></span><br><span class="line">            <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">              <span class="attribute">color</span>: <span class="variable">$text</span>-hover</span><br><span class="line">              <span class="attribute">text-decoration</span>: underline</span><br><span class="line">    <span class="selector-class">.recent-post-cover</span></span><br><span class="line">      <span class="attribute">width</span> <span class="number">40%</span></span><br><span class="line">      <span class="attribute">height</span> <span class="number">200px</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>:<span class="number">600px</span>)</span><br><span class="line">  .recent-post-item</span><br><span class="line">    <span class="attribute">height</span> <span class="number">400px</span></span><br><span class="line">    .recent-post-content</span><br><span class="line">      display flex</span><br><span class="line">      flex-direction: column</span><br><span class="line">      <span class="attribute">height</span> <span class="number">400px</span></span><br><span class="line">      .article-content</span><br><span class="line">        pointer-events none</span><br><span class="line">        order: <span class="number">1</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">position</span>: absolute;</span><br><span class="line">        <span class="attribute">width</span>: calc(<span class="number">100%</span> - <span class="number">40px</span>);</span><br><span class="line">        <span class="attribute">z-index</span>: <span class="number">3</span>;</span><br><span class="line">        <span class="attribute">background</span>: rgba(<span class="number">22</span>,<span class="number">22</span>,<span class="number">22</span>,<span class="number">0.5</span>);</span><br><span class="line">        <span class="attribute">border-top-left-radius</span>: <span class="number">15px</span>;</span><br><span class="line">        <span class="attribute">border-top-right-radius</span>: <span class="number">15px</span>;</span><br><span class="line">        <span class="attribute">display</span>: none</span><br><span class="line">        <span class="attribute">opacity</span>: <span class="number">0</span></span><br><span class="line">        <span class="selector-class">.article-content-text</span></span><br><span class="line">          <span class="attribute">height</span> <span class="number">120px</span></span><br><span class="line">          <span class="attribute">color</span>: white;</span><br><span class="line">          <span class="attribute">width</span>: <span class="number">80%</span></span><br><span class="line"></span><br><span class="line">      <span class="selector-class">.recent-post-cover</span></span><br><span class="line">        <span class="attribute">order</span>: <span class="number">2</span></span><br><span class="line">        <span class="attribute">height</span> <span class="number">200px</span></span><br><span class="line">        <span class="attribute">transition</span>: all .<span class="number">5s</span></span><br><span class="line">      <span class="selector-class">.recent-post-info</span></span><br><span class="line">        <span class="attribute">order</span>: <span class="number">3</span></span><br><span class="line">        <span class="attribute">height</span> <span class="number">200px</span></span><br><span class="line">        <span class="selector-pseudo">&amp;::before</span></span><br><span class="line">          <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">          <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">          <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">          <span class="attribute">position</span>: absolute;</span><br><span class="line">          <span class="attribute">z-index</span>: <span class="number">3</span>;</span><br><span class="line">          <span class="attribute">bottom</span>: calc(<span class="number">100%</span> - <span class="number">4px</span>);</span><br><span class="line">          <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">          <span class="attribute">border-bottom</span>: <span class="number">50px</span> solid var(--recent-post-bgcolor);</span><br><span class="line">          <span class="attribute">border-right</span>: <span class="number">300px</span> solid transparent;</span><br><span class="line">        <span class="selector-pseudo">&amp;::after</span></span><br><span class="line">          <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">          <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">          <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">          <span class="attribute">position</span>: absolute;</span><br><span class="line">          <span class="attribute">z-index</span>: <span class="number">3</span>;</span><br><span class="line">          <span class="attribute">bottom</span>: calc(<span class="number">100%</span> + <span class="number">150px</span>);</span><br><span class="line">          <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">          <span class="attribute">border-top</span>: <span class="number">50px</span> solid var(--recent-post-bgcolor);</span><br><span class="line">          <span class="attribute">border-left</span>: <span class="number">300px</span> solid transparent;</span><br><span class="line">        <span class="selector-class">.article-title</span></span><br><span class="line">          <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">35px</span> <span class="number">0px</span> <span class="number">35px</span></span><br><span class="line">        <span class="selector-class">.recent-post-meta</span></span><br><span class="line">          <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">30px</span> <span class="number">0px</span> <span class="number">30px</span></span><br><span class="line">    <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">      <span class="selector-class">.article-content</span></span><br><span class="line">        <span class="attribute">display</span>: flex <span class="meta">!important</span>;</span><br><span class="line">        <span class="attribute">animation</span>: shutter-effect-content <span class="number">0.5s</span> <span class="number">2</span> forwards linear</span><br><span class="line">      <span class="selector-class">.recent-post-info</span></span><br><span class="line">        <span class="selector-pseudo">&amp;::before</span></span><br><span class="line">          <span class="attribute">animation</span>: shutter-effect-left <span class="number">0.5s</span> <span class="number">1</span> ease-in-out</span><br><span class="line">        <span class="selector-pseudo">&amp;::after</span></span><br><span class="line">          <span class="attribute">animation</span>: shutter-effect-right <span class="number">0.5s</span> <span class="number">1</span> ease-in-out</span><br><span class="line">      <span class="selector-class">.recent-post-cover</span></span><br><span class="line">        <span class="attribute">filter</span> blur(<span class="number">2px</span>)</span><br><span class="line"><span class="keyword">@keyframes</span> shutter-effect-<span class="attribute">right</span>  &#123;</span><br><span class="line">  <span class="number">0%</span>&#123;</span><br><span class="line">    <span class="attribute">bottom</span>: calc(<span class="number">100%</span> + <span class="number">150px</span>);</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">50px</span> solid var(--recent-post-bgcolor);</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">300px</span> solid transparent;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span>&#123;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">200px</span> solid var(--recent-post-bgcolor);</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">600px</span> solid transparent;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span>&#123;</span><br><span class="line">    <span class="attribute">bottom</span>: calc(<span class="number">100%</span> + <span class="number">150px</span>);</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">50px</span> solid var(--recent-post-bgcolor);</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">300px</span> solid transparent;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> shutter-effect-<span class="attribute">left</span>  &#123;</span><br><span class="line">  <span class="number">0%</span>&#123;</span><br><span class="line">    <span class="attribute">bottom</span>: calc(<span class="number">100%</span> - <span class="number">4px</span>);</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">50px</span> solid var(--recent-post-bgcolor);</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">300px</span> solid transparent;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span>&#123;</span><br><span class="line">    <span class="attribute">bottom</span>: calc(<span class="number">100%</span> - <span class="number">4px</span>);</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">200px</span> solid var(--recent-post-bgcolor);</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">600px</span> solid transparent;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span>&#123;</span><br><span class="line">    <span class="attribute">bottom</span>: calc(<span class="number">100%</span> - <span class="number">4px</span>);</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">50px</span> solid var(--recent-post-bgcolor);</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">300px</span> solid transparent;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> shutter-effect-<span class="attribute">content</span> &#123;</span><br><span class="line">  from &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line">  to &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>备份：<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#recent-posts</span></span><br><span class="line">  &amp; &gt; <span class="selector-class">.recent-post-item</span><span class="selector-pseudo">:not</span>(:first-child)</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span></span><br><span class="line"></span><br><span class="line">  &amp; &gt; <span class="selector-class">.recent-post-item</span></span><br><span class="line">    <span class="keyword">@extend</span> <span class="selector-class">.cardHover</span></span><br><span class="line">    <span class="attribute">display</span>: flex</span><br><span class="line">    <span class="attribute">flex-direction</span>: row</span><br><span class="line">    <span class="attribute">align-items</span>: center</span><br><span class="line">    <span class="attribute">overflow</span>: hidden</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">18em</span></span><br><span class="line"></span><br><span class="line">    +<span class="built_in">maxWidth768</span>()</span><br><span class="line">      <span class="attribute">flex-direction</span>: column</span><br><span class="line">      <span class="attribute">height</span>: auto</span><br><span class="line"></span><br><span class="line">    <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">      <span class="selector-tag">img</span><span class="selector-class">.post_bg</span></span><br><span class="line">        <span class="attribute">transform</span>: scale(<span class="number">1.1</span>)</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-class">.ads-wrap</span></span><br><span class="line">      <span class="attribute">display</span>: block <span class="meta">!important</span></span><br><span class="line">      <span class="attribute">height</span>: auto <span class="meta">!important</span></span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.post_cover</span></span><br><span class="line">      <span class="attribute">overflow</span>: hidden</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">44%</span></span><br><span class="line">      <span class="attribute">height</span>: <span class="number">100%</span></span><br><span class="line"></span><br><span class="line">      +<span class="built_in">maxWidth768</span>()</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line">        <span class="attribute">height</span>: <span class="number">230px</span></span><br><span class="line"></span><br><span class="line">      <span class="selector-tag">img</span><span class="selector-class">.post_bg</span></span><br><span class="line">        <span class="keyword">@extend</span> <span class="selector-class">.imgHover</span></span><br><span class="line"></span><br><span class="line">      &amp;<span class="selector-class">.right</span></span><br><span class="line">        <span class="attribute">order</span>: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        +<span class="built_in">maxWidth768</span>()</span><br><span class="line">          <span class="attribute">order</span>: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    &amp; &gt;<span class="selector-class">.recent-post-info</span></span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">40px</span></span><br><span class="line">      <span class="attribute">width</span>: <span class="number">57%</span></span><br><span class="line"></span><br><span class="line">      +<span class="built_in">maxWidth768</span>()</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">20px</span> <span class="number">30px</span></span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line"></span><br><span class="line">      &amp;<span class="selector-class">.no-cover</span></span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line"></span><br><span class="line">        +<span class="built_in">maxWidth768</span>()</span><br><span class="line">          <span class="attribute">padding</span>: <span class="number">30px</span> <span class="number">20px</span></span><br><span class="line"></span><br><span class="line">      &amp; &gt; <span class="selector-class">.article-title</span></span><br><span class="line">        <span class="keyword">@extend</span> <span class="selector-class">.limit-more-line</span></span><br><span class="line">        <span class="attribute">color</span>: var(--text-highlight-color)</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">1.72em</span></span><br><span class="line">        <span class="attribute">line-height</span>: <span class="number">1.4</span></span><br><span class="line">        <span class="attribute">transition</span>: all .<span class="number">2s</span> ease-in-out</span><br><span class="line">        -webkit-line-clamp: <span class="number">2</span></span><br><span class="line"></span><br><span class="line">        +<span class="built_in">maxWidth768</span>()</span><br><span class="line">          <span class="attribute">font-size</span>: <span class="number">1.43em</span></span><br><span class="line"></span><br><span class="line">        <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">          <span class="attribute">color</span>: <span class="variable">$text</span>-hover</span><br><span class="line"></span><br><span class="line">      &amp; &gt; <span class="selector-class">.article-meta-wrap</span></span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">6px</span> <span class="number">0</span></span><br><span class="line">        <span class="attribute">color</span>: <span class="variable">$theme</span>-meta-color</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">90%</span></span><br><span class="line"></span><br><span class="line">        &amp; &gt; <span class="selector-class">.post-meta-date</span></span><br><span class="line">          <span class="attribute">cursor</span>: default</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.sticky</span></span><br><span class="line">          <span class="attribute">color</span>: <span class="variable">$sticky</span>-color</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">i</span></span><br><span class="line">          <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">4px</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.article-meta-label</span></span><br><span class="line">          <span class="keyword">if</span> <span class="built_in">hexo-config</span>(<span class="string">&#x27;post_meta.page.label&#x27;</span>)</span><br><span class="line">            <span class="attribute">padding-right</span>: <span class="number">4px</span></span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">            <span class="attribute">display</span>: none</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.article-meta-separator</span></span><br><span class="line">          <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">6px</span></span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.article-meta-link</span></span><br><span class="line">          <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">4px</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">hexo-config</span>(<span class="string">&#x27;post_meta.page.date_format&#x27;</span>) == <span class="string">&#x27;relative&#x27;</span></span><br><span class="line">          <span class="selector-tag">time</span></span><br><span class="line">            <span class="attribute">display</span>: none</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">a</span></span><br><span class="line">          <span class="attribute">color</span>: <span class="variable">$theme</span>-meta-color</span><br><span class="line"></span><br><span class="line">          <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">            <span class="attribute">color</span>: <span class="variable">$text</span>-hover</span><br><span class="line">            <span class="attribute">text-decoration</span>: underline</span><br><span class="line"></span><br><span class="line">      &amp; &gt; <span class="selector-class">.content</span></span><br><span class="line">        <span class="keyword">@extend</span> <span class="selector-class">.limit-more-line</span></span><br><span class="line">        -webkit-line-clamp: <span class="number">2</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="时钟插件"><a href="#时钟插件" class="headerlink" title="时钟插件"></a>时钟插件</h3><ol><li>安装插件，在博客根目录 [Blogroot] 下打开终端，运行以下指令：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-clock --save</span><br></pre></td></tr></table></figure></li><li>在站点配置文件_config.yml 或者主题配置文件_config.butterfly.yml 中添加<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># electric_clock</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/4e39cf4a/</span></span><br><span class="line"><span class="attr">electric_clock:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开关</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span> <span class="comment">#过滤器优先权</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">all</span> <span class="comment"># 应用页面</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="comment"># - /posts/</span></span><br><span class="line">    <span class="comment"># - /about/</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="comment"># 挂载容器类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">class</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">sticky_layout</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">loading:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-clock/lib/loading.gif</span> <span class="comment">#加载动画自定义</span></span><br><span class="line">  <span class="attr">clock_css:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-clock/lib/clock.min.css</span></span><br><span class="line">  <span class="attr">clock_js:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-clock/lib/clock.min.js</span></span><br><span class="line">  <span class="attr">ip_api:</span> <span class="string">https://pv.sohu.com/cityjson?ie=utf-8</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="字体样式修改"><a href="#字体样式修改" class="headerlink" title="字体样式修改"></a>字体样式修改</h3><blockquote><p>不一定是 ttf 后缀，其他后缀也是完全正常的，例如 eot、otf、fon、font、ttc、woff、woff2 等.</p></blockquote><ol><li>首先需要下载心仪的字体。第一字体网：<a href="https://www.diyiziti.com/List/all/2">https://www.diyiziti.com/List/all/2</a>  选择心仪的字体下载得到相应的字体文件，将其重命名为英文 xxx.ttf。</li><li>将下载好的字体包放到本地文件夹下，这里推荐新建一个 fonts 文件夹: [Blogroot]\themes\butterfly\source\fonts\ 目录下。</li><li>在自定义样式 custom.css 中引入字体包：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@font-face</span>&#123;</span><br><span class="line">  <span class="attribute">font-family</span>:<span class="string">&#x27;UniverseFont&#x27;</span> ;  <span class="comment">/* 字体名自定义即可 */</span></span><br><span class="line">  <span class="attribute">src</span>:<span class="built_in">url</span>(<span class="string">&#x27;/fonts/Font.ttf&#x27;</span>); <span class="comment">/* 字体文件路径 */</span></span><br><span class="line">  <span class="attribute">font-display</span> : swap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在页面按<code>F12</code>，然后在控制台中进行调试。获取想应用字体元素的 <code>id/class</code> 然后把 font-family 写进 custom.css 就可以了<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@font-face</span>&#123;</span><br><span class="line">  <span class="attribute">font-family</span>:<span class="string">&#x27;UniverseFont&#x27;</span> ;  <span class="comment">/* 字体名自定义即可 */</span></span><br><span class="line">  <span class="attribute">src</span>:<span class="built_in">url</span>(<span class="string">&#x27;/fonts/Font.ttf&#x27;</span>); <span class="comment">/* 字体文件路径 */</span></span><br><span class="line">  <span class="attribute">font-display</span> : swap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 例如 */</span></span><br><span class="line"><span class="selector-tag">h1</span><span class="selector-id">#site-title</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&#x27;UniverseFont&#x27;</span>, sans-serif;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="更改文章-h1-6-级标题前-icon-图标"><a href="#更改文章-h1-6-级标题前-icon-图标" class="headerlink" title="更改文章 h1~6 级标题前 icon 图标"></a>更改文章 h1~6 级标题前 icon 图标</h3><blockquote><p>单靠肉眼识别字体大小来判断标题等级不是件容易的事情，若 h1~6 标题使用不同图标的话，那么识别会容易许多。</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/* 在&lt;Custom&gt;.css里添加以下代码： */</span></span><br><span class="line"><span class="selector-id">#article-container</span> <span class="selector-tag">h1</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&lt;Custom&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* h2~6以此类推 */</span></span><br></pre></td></tr></table></figure><p>其中<Custom>部分可以填写一下内容：</p><ul><li>H¹、H²、H³、H⁴、H⁵、H⁶</li><li>H₁、H₂、H₃、H₄、H₅、H₆</li><li>H1、H2、H3、H4、H5、H6</li><li>icon 图标</li><li>阿里图标 …<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#article-container</span> <span class="selector-tag">h1</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;iconfont&quot;</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&lt;Custom&gt;&quot;</span>;  <span class="comment">/*阿里图标的 Unicode*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="补充插件"><a href="#补充插件" class="headerlink" title="补充插件"></a>补充插件</h2><h3 id="hexo-renderer-pug"><a href="#hexo-renderer-pug" class="headerlink" title="hexo-renderer-pug"></a>hexo-renderer-pug</h3><blockquote><p>pug 以及 stylus 的渲染器</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><h3 id="hexo-abbrlink"><a href="#hexo-abbrlink" class="headerlink" title="hexo-abbrlink"></a>hexo-abbrlink</h3><blockquote><p>hexo-next文章链接默认的生成规则是：:year/:month/:day/:title，是按照年、月、日、标题来生成的，如果文章标题是中文的话，URL链接是也会是中文，复制后的链接是一长串，非常不利于阅读，也不简洁。用此插件可以生成唯一不变的URl链接。</p></blockquote><ol><li>安装<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure></li><li>修改根目录站点配置文件config.yml<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink.html</span>  <span class="comment"># post 参数为自己的自定义设置。比如：:year/:month/:day:title/:abbrlink.html</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">   <span class="attr">alg:</span> <span class="string">crc32</span>   <span class="comment">#算法： crc16(default) and crc32</span></span><br><span class="line">   <span class="attr">rep:</span> <span class="string">hex</span>     <span class="comment">#进制： dec(default) and hex</span></span><br></pre></td></tr></table></figure></li><li>生成完后，原md文件的Front-matter 内会增加abbrlink 字段，值为生成的ID 。这个字段确保了在我们修改了Front-matter 内的博客标题title或创建日期date字段之后而不会改变链接地址。</li></ol><h1 id="进阶操作"><a href="#进阶操作" class="headerlink" title="进阶操作"></a>进阶操作</h1><h2 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h2><h3 id="PicGo-Gitee-Typora"><a href="#PicGo-Gitee-Typora" class="headerlink" title="PicGo + Gitee +  Typora"></a><a href="https://github.com/Molunerfinn/PicGo">PicGo</a> + Gitee +  Typora</h3><h3 id="PicGo-Github-Typora"><a href="#PicGo-Github-Typora" class="headerlink" title="PicGo + Github +  Typora"></a><a href="https://github.com/Molunerfinn/PicGo">PicGo</a> + Github +  Typora</h3><blockquote><p>特点：绑定 Typora 后支持直接在软件内插入图片自动上传图床。<br>缺点：国内访问速度慢（用的是github 作为存储仓库）</p></blockquote><p>Typora 配置：<br><img src="https://cdn.jsdelivr.net/gh/HaloBoys/PicGoMyDevice/img/20220521224229.png" alt="20220521224229"></p><h3 id="PicGo-SMMS"><a href="#PicGo-SMMS" class="headerlink" title="PicGo + SMMS"></a><a href="https://github.com/Molunerfinn/PicGo">PicGo</a> + <a href="https://sm.ms">SMMS</a></h3><blockquote><p>永久存储，图片链接支持https，可以删除上传的图片，提供多种图片链接格式。<br>每个图片最大5M，单次最多上传10张 。</p></blockquote><h3 id="Chrome-图床插件-不保证其稳定性"><a href="#Chrome-图床插件-不保证其稳定性" class="headerlink" title="Chrome 图床插件(不保证其稳定性)"></a>Chrome 图床插件(不保证其稳定性)</h3><p>方法：<a href="https://chrome.google.com/webstore/category/extensions?hl=zh">Chrome 插件市场</a> 搜索插件名称安装即可</p><ol><li>微博图床<br><img src="https://raw.githubusercontent.com/HaloBoys/PicGoMyDevice/main/img/20220510154000.png" alt="20220510154000"></li><li>Bilibili图床<br><img src="https://raw.githubusercontent.com/HaloBoys/PicGoMyDevice/main/img/20220510154056.png" alt="20220510154056"></li></ol><h2 id="自定义域名"><a href="#自定义域名" class="headerlink" title="自定义域名"></a>自定义域名</h2><h3 id="Github-自定义"><a href="#Github-自定义" class="headerlink" title="Github 自定义"></a>Github 自定义</h3><blockquote><p>之前绑定过了，现在好像忘了，看来不做笔记还是不行啊。有时间再重新操作下。</p></blockquote><h3 id="Gitee-自定义"><a href="#Gitee-自定义" class="headerlink" title="Gitee 自定义"></a>Gitee 自定义</h3><blockquote><p>要Pro版本才可以自定义，找了下开通Pro的入口没找到暂时被取消了</p></blockquote><h2 id="Hexo-写作命令"><a href="#Hexo-写作命令" class="headerlink" title="Hexo 写作命令"></a>Hexo 写作命令</h2><ul><li>分类与子分类<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">并列分类:</span><br><span class="line">categories:</span><br><span class="line"><span class="bullet">-</span> [Linux]</span><br><span class="line"><span class="bullet">-</span> [Tools]</span><br><span class="line"></span><br><span class="line">并列+子分类:</span><br><span class="line">categories:</span><br><span class="line"><span class="bullet">-</span> [Linux, Hexo]</span><br><span class="line"><span class="bullet">-</span> [Tools, PHP]</span><br></pre></td></tr></table></figure></li><li>创建页面 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br><span class="line">// hexo new post &#x27;test&#x27;</span><br><span class="line"></span><br><span class="line">Layout：Hexo 有三种默认布局：post、page 和 draft,创建这三种不同类型的文件时，它们将会被保存到不同的路径:</span><br><span class="line">postsource/_posts</span><br><span class="line">pagesource</span><br><span class="line">draftsource/_drafts</span><br></pre></td></tr></table></figure></li><li><strong>模版（Scaffold）：在新建文章时，Hexo 会根据 <code>scaffolds</code> 文件夹内相对应的文件来建立文件</strong> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Blog\scaffolds 文件夹下新建模板编辑模板取好模板名称，然后可以执行如下命令根据模板内容建立文章</span><br><span class="line">hexo new [模板名称] &quot;文件名&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">模板参数        描述       默认值</span><br><span class="line">layout          布局     config.default_layout</span><br><span class="line">title          标题     文章的文件名</span><br><span class="line">date          建立日期    文件建立日期</span><br><span class="line">updated          更新日期    文件更新日期</span><br><span class="line">comments          开启文章的评论功能  true</span><br><span class="line">tags          标签（不适用于分页）</span><br><span class="line">categories      分类（不适用于分页）</span><br><span class="line">permalink         覆盖文章网址</span><br><span class="line">excerpt           纯文本的页面摘录。使用这个插件来格式化文本</span><br><span class="line">disableNunjucks   启用时禁用 Nunjucks 标签 &#123;&#123; &#125;&#125;/&#123;% %&#125; 和标签插件的呈现</span><br><span class="line">lang              设置语言          Inherited from _config.yml</span><br></pre></td></tr></table></figure></li><li>分类和标签 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 需要为文章添加多个分类，可以使用以下 list 中的方法</span><br><span class="line"></span><br><span class="line">categories:</span><br><span class="line">- [Diary, PlayStation]</span><br><span class="line">- [Diary, Games]</span><br><span class="line">- [Life]</span><br><span class="line"></span><br><span class="line">此时这篇文章同时包括三个分类： </span><br><span class="line">PlayStation 和 Games 分别都是父分类 Diary 的子分类</span><br><span class="line">Life 是一个没有子分类的分类</span><br></pre></td></tr></table></figure></li><li>监视文件变动 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate --watch</span><br></pre></td></tr></table></figure></li><li>一键三连<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp; hexo g &amp; hexo d</span><br></pre></td></tr></table></figure></li><li>部署 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行下列的其中一个命令，让 Hexo 在生成完毕后自动部署网站，两个命令的作用是相同的</span></span><br><span class="line">hexo generate --deploy</span><br><span class="line">hexo deploy --generate</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">简写：上面两个命令可以简写为</span></span><br><span class="line">hexo g -d</span><br><span class="line">hexo d -g</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>VueRouter</title>
      <link href="/2021/11/12%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF_Vue_VueRouter/undefined/"/>
      <url>/2021/11/12%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF_Vue_VueRouter/undefined/</url>
      
        <content type="html"><![CDATA[<h1 id="VueRouter"><a href="#VueRouter" class="headerlink" title="VueRouter"></a>VueRouter</h1><blockquote><p>官方文档链接：<a href="https://router.vuejs.org/zh/installation.html">https://router.vuejs.org/zh/installation.html</a></p></blockquote><h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-router[@3.5.2] --save</span><br></pre></td></tr></table></figure><h2 id="Use"><a href="#Use" class="headerlink" title="Use"></a>Use</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// router/index.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VueRouter</span> <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Vue.use 函数用于安装插件，需要在调用 new Vue() 启动应用之前完成</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">VueRouter</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">    <span class="comment">// 路径与组件之间的对应关系</span></span><br><span class="line">    <span class="attr">routes</span>:[</span><br><span class="line">        <span class="comment">// 访问域名根目录重定向的路径</span></span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>, <span class="attr">redirect</span>: <span class="string">&#x27;./路径&#x27;</span>&#125;,</span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">&#x27;/路径&#x27;</span>, <span class="attr">component</span>: 组件&#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router/index.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="comment">// 与项目关联</span></span><br><span class="line">    router</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// App.vue</span><br><span class="line"></span><br><span class="line">&lt;!-- router-link 用于取代 a 标签，最终会被渲染成 a 标签 --&gt;</span><br><span class="line">&lt;router-link to=&quot;/路径&quot;&gt;xxx&lt;/router-link&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 组件占位符 --&gt;</span><br><span class="line">&lt;router-view&gt;&lt;/router-view&gt;</span><br></pre></td></tr></table></figure><h2 id="Redirect-重定向"><a href="#Redirect-重定向" class="headerlink" title="Redirect 重定向"></a>Redirect 重定向</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// router/index.js</span></span><br><span class="line"></span><br><span class="line"><span class="attr">routes</span>:[</span><br><span class="line">    <span class="comment">// 访问域名根目录重定向的路径</span></span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>, <span class="attr">redirect</span>: <span class="string">&#x27;./路径&#x27;</span>&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h1 id="嵌套路由（子路由）"><a href="#嵌套路由（子路由）" class="headerlink" title="嵌套路由（子路由）"></a>嵌套路由（子路由）</h1><blockquote><p>当页面中组件中需要嵌套子组件的时候，可以使用路由的嵌套路由特性</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// router/index.js</span></span><br><span class="line"></span><br><span class="line"><span class="attr">routes</span>: [&#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;/父路由路径&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: 父级组件,</span><br><span class="line">            <span class="comment">// 子路由重定向</span></span><br><span class="line">            <span class="attr">redirect</span>: <span class="string">&#x27;/父路由路径/子路由路径&#x27;</span>,</span><br><span class="line">            <span class="comment">// 子路由规则</span></span><br><span class="line">            <span class="attr">children</span>: [&#123;</span><br><span class="line">                <span class="comment">// 当子路由路由规则path值为空字符串，则这条路由规则叫做默认子路由</span></span><br><span class="line">                    <span class="attr">path</span>: <span class="string">&#x27;子路由路径&#x27;</span>, <span class="comment">// 注意此处的子路由路径不用带父级路径</span></span><br><span class="line">                    <span class="attr">component</span>: 子组件</span><br><span class="line">                &#125;</span><br><span class="line">]&#125;</span><br></pre></td></tr></table></figure><h1 id="动态路由"><a href="#动态路由" class="headerlink" title="动态路由"></a>动态路由</h1><blockquote><p>动态路由将 Hash 地址中可变的部分定义为参数项，提高路由的<strong>可复用性</strong></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// router/index.js</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// vue-router 中用英文冒号（:）来定义路由的参数项</span></span><br><span class="line"></span><br><span class="line">&#123; <span class="attr">path</span>: <span class="string">&#x27;/xxx/:id&#x27;</span>,<span class="attr">component</span>:组件名称 &#125;</span><br></pre></td></tr></table></figure><h2 id="route-params-id-获取参数"><a href="#route-params-id-获取参数" class="headerlink" title="$route.params.id 获取参数"></a>$route.params.id 获取参数</h2><blockquote><p>组件中可以直接通过 [this.]$route.params.id 获取当前跳转的动态路径 “id”</p></blockquote><p><img src="https://raw.githubusercontent.com/HaloBoys/PicGoMyDevice/main/img/202111120208998.png" alt="image-20211112020716443" style="zoom: 67%;" /></p><blockquote><p><strong>拓展</strong></p><p>hash 地址中 / 后面的参数项叫做”路径参数”，可以通过 <strong>this.$route.params</strong> 访问</p><p>hash 地址中 ?后面的参数项叫做”查询参数”，可以通过 <strong>this.$route.query</strong> 访问</p><p>this.$route 中，path 只是路径的部分，<strong>fullPath</strong> 才是完整的地址</p></blockquote><h2 id="props-传参"><a href="#props-传参" class="headerlink" title="props 传参"></a>props 传参</h2><blockquote><p>在路由规则中也可以通过添加 <strong>props: true</strong> 属性来传递参数</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// router/index.js</span></span><br><span class="line"></span><br><span class="line">&#123; <span class="attr">path</span>: <span class="string">&#x27;/xxx/:id&#x27;</span>,<span class="attr">component</span>:组件名称, <span class="attr">props</span>:<span class="literal">true</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 组件中定义 props 属性来接收参数, 组件中可直接通过使用该参数</span></span><br><span class="line"><span class="comment">// xxx组件.vue</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    <span class="attr">props</span>: [<span class="string">&#x27;id&#x27;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HaloBoys/PicGoMyDevice/main/img/202111120236691.png" alt="image-20211112023606539" style="zoom:67%;" /></p><h1 id="编程式导航跳转"><a href="#编程式导航跳转" class="headerlink" title="编程式导航跳转"></a>编程式导航跳转</h1><blockquote><p>点击链接（<a> <router-link>）实现导航的方式叫做<strong>声明式导航</strong>，通过调用API方法实现跳转的方式叫做编程式导航</p></blockquote><p>vue-router 常用编程式导航 API：</p><ol><li>this.$router.push(‘hash地址’)<ul><li>跳转指定的hash地址，<strong>增加</strong>一条历史记录</li></ul></li><li>this.$router.replace(‘hash地址’)<ul><li>跳转指定的hash地址，<strong>替换掉当前</strong>的历史记录</li></ul></li><li>this.$router.go(数值n)<ul><li>在浏览历史中<strong>前进或后退</strong>指定步数，负数后退，正数前进</li><li>this.$router.go 简写<ul><li>$router.back()</li><li>$router.forward()</li></ul></li></ul></li></ol><h1 id="路由导航守卫"><a href="#路由导航守卫" class="headerlink" title="路由导航守卫"></a>路由导航守卫</h1><blockquote><p>导航守卫可以控制路由的<strong>访问权限</strong></p></blockquote><h2 id="全局前置守卫"><a href="#全局前置守卫" class="headerlink" title="全局前置守卫"></a>全局前置守卫</h2><blockquote><p>每次路由跳转时，都会触发全局前置守卫，因此在全局前置守卫中可以对每个路由进行访问权限控制</p></blockquote><p>router.beforeEach((to, from, next)：</p><ul><li>to: Route: 即将要进入的目标 路由对象</li><li>from: Route: 当前导航正要离开的路由</li><li>next: Function: 一定要调用该方法来 resolve 这个钩子。执行效果依赖 next 方法的调用参数。<ul><li><strong><code>next()</code></strong>   放行</li><li><strong><code>next(false)</code></strong>   中断当前的导航</li><li><strong><code>next(&#39;/&#39;)</code></strong>   跳转地址</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// router/index.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123; ... &#125;)</span><br><span class="line">                              </span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue 组件</title>
      <link href="/2021/11/06%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF_Vue_Vue%E7%BB%84%E4%BB%B6/dd3b78a2/"/>
      <url>/2021/11/06%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF_Vue_Vue%E7%BB%84%E4%BB%B6/dd3b78a2/</url>
      
        <content type="html"><![CDATA[<blockquote><p> 组件系统让我们可以用独立可复用的小组件来构建大型应用，几乎任意类型的应用的界面都可以抽象为一个组件树</p></blockquote><p><img src="https://raw.githubusercontent.com/HaloBoys/PicGoMyDevice/main/img/20220510181252.png" alt="20220510181252"></p><h1 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h1><ul><li><strong>组件中的 data 必须是一个函数，return 一个对象</strong></li><li>组件中的 this 表示当前组件对象的实例对象</li><li>组件 template 标签中只能出现一个根元素</li><li><p>工程化项目中，组件被封装好之后，彼此之间是相互独立的，不存在父子关系，在使用组件的时候，根据彼此的嵌套关系，形成父子、兄弟关系</p></li><li><p>组件中的样式是全局生效的，需要在组件 style 标签上添加 <code>scoped</code> 属性避免污染全局样式，添加之后vue底层会为每个标签添加 v-data 属性</p></li></ul><h1 id="组件注册"><a href="#组件注册" class="headerlink" title="组件注册"></a>组件注册</h1><ul><li><p>在组件中，通过 componets 注册的是<strong>私有子组件</strong></p></li><li><p><strong>注册全局组件</strong></p><ul><li><p>main.js 文件中，通过 Vue.componet() 方法，注册全局组件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 1.导入组件</span><br><span class="line">import 组件名称 from &#x27;组件路径&#x27;</span><br><span class="line">// 2.注册组件</span><br><span class="line">Vue.component(&#x27;组件别名&#x27;,组件名称);</span><br><span class="line">// 3.全局都可以通过组件别名使用组件</span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="组件数据传递"><a href="#组件数据传递" class="headerlink" title="组件数据传递"></a>组件数据传递</h1><h2 id="props"><a href="#props" class="headerlink" title="props"></a>props</h2><blockquote><p>父组件向子组件传递数据，在子组件中使用 <code>props: [&quot;attribute&quot;]</code> 定义该属性(该属性和 <strong>data</strong> 平级)，父组件中通过 v-bind:attribute = “val”  来传递值</p><p>props 的值是只读的,想要修改props 的值，可以把 props 的值<strong>copy</strong>一份到 data 中</p></blockquote><h3 id="props-的类型"><a href="#props-的类型" class="headerlink" title="props 的类型"></a>props 的类型</h3><p>props 的值可以为数组和对象类型，对象类型中可以对传递的值进行验证</p><ul><li><p>数组：props: [“attribute”] </p><blockquote><p>只能接收值，缺陷 ：如果外界没有传递初始值，这里就是 undefinde</p></blockquote></li><li><p>对象</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">props: &#123;</span><br><span class="line">&#x27;attribute&#x27;: &#123;</span><br><span class="line">type: 数据类型</span><br><span class="line">default: 初始值,</span><br><span class="line">required: true or false</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>一个组件默认可以拥有任意数量的 prop，任何值都可以传递给任何 prop<br>每次父级组件发生变更时，子组件中所有的 prop 都将会刷新为最新的值(同步)。这意味着你不应该在一个子组件内部改变 prop。如果你这样做了，Vue 会在浏览器的控制台中发出警告。</p></blockquote><h2 id="emit"><a href="#emit" class="headerlink" title="$emit"></a>$emit</h2><blockquote><p>子组件中需要向父组件中传递数据，在子组件中使用 <code>this.$emit(&#39;事件名称&#39;,子组件中要传递的数据)</code> 方法传递数据，父组件中使用子组件在子组件标签中使用 <code>@事件名称 = &#39;方法&#39;</code>  的形式来接收数据</p></blockquote><h2 id="EventBus"><a href="#EventBus" class="headerlink" title="EventBus"></a>EventBus</h2><blockquote><p>兄弟组件数据共享方案，原理：创建一个中间模块，此模块向外共享一个Vue的实例对象，在数据的发送方，通过 实例对象.$emit(‘事件名称’，要发送的数据) 定义一个自定义事件，在数据的接收方在created 生命周期函数中通过 实例对象.$on(‘事件名称’，事件处理函数) 注册事件接受数据</p></blockquote><h3 id="实现详情"><a href="#实现详情" class="headerlink" title="实现详情"></a>实现详情</h3><ol><li><p>创建 eventBus.js模块，向外共享一个 Vue实例对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// eventBus.js</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> <span class="title class_">Vue</span>()</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>数据发送方，通过 <code>实例对象.$emit</code> 定义事件,将要发送的数据传递给事件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 兄弟组件A (发送方)</span></span><br><span class="line"><span class="keyword">import</span> bus <span class="keyword">from</span> <span class="string">&#x27;./eventBus.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line"><span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line"><span class="attr">msg</span>: <span class="string">&quot;UNIVERSE!&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line"><span class="title function_">sendMsg</span>(<span class="params"></span>)&#123;</span><br><span class="line">bus.$emit(<span class="string">&#x27;share&#x27;</span>,<span class="variable language_">this</span>.<span class="property">msg</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>数据接受方，通过 <code>实例对象.on(&#39;事件名称&#39;，事件处理函数)</code> 接收数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 兄弟组件B (接收方)</span></span><br><span class="line"><span class="keyword">import</span> bus <span class="keyword">from</span> <span class="string">&#x27;./eventBus.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">receiveData</span>:<span class="string">&#x27;&#x27;</span> </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">created</span>(<span class="params"></span>) &#123;</span><br><span class="line">        bus.$on(<span class="string">&#x27;share&#x27;</span>,<span class="keyword">function</span>(<span class="params">val</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">receiveData</span> = val</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h1 id="deep"><a href="#deep" class="headerlink" title="/deep/"></a>/deep/</h1><blockquote><p>当组件中使用第三方组件库，需要修改第三方组件的样式需求可以用 <code>/deep/</code> </p></blockquote><h1 id="Vue-中的-DOM-操作"><a href="#Vue-中的-DOM-操作" class="headerlink" title="Vue 中的 DOM 操作"></a>Vue 中的 DOM 操作</h1><h2 id="vm-ref"><a href="#vm-ref" class="headerlink" title="vm.$ref"></a>vm.$ref</h2><blockquote><p>Vue 中 可以通过 ref 的形式获取DOM元素或组件引用</p></blockquote><ol><li><p>DOM 元素引用操作</p><ol><li>在 元素上绑定一个 ref = ‘属性’ 来为元素创建一个引用</li><li>在方法中通过 this.$refs.’属性’ 的方式来获取DOM元素</li></ol></li><li><p>组件引用</p><blockquote><p>可以为组件绑定 ref 在父组件中可以直接获取或调用子组件中的属性或方法</p></blockquote><ol><li>为组件绑定 ref = ‘属性’ 来为组件创建一个引用</li><li>在父组件方法中通过 this.$refs.’属性’ 的方式来获取组件的引用</li></ol></li></ol><p>TypeError: Cannot read properties of undefined</p><h2 id="vm-nextTicket"><a href="#vm-nextTicket" class="headerlink" title="vm.$nextTicket"></a>vm.$nextTicket</h2><blockquote><p>将回调<strong>延迟</strong>到下次 DOM 更新循环之后执行。</p></blockquote><h3 id="vm-nextTicket-的应用场景案例："><a href="#vm-nextTicket-的应用场景案例：" class="headerlink" title="vm.$nextTicket 的应用场景案例："></a>vm.$nextTicket 的应用场景案例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; v-if=&quot;inputVisible&quot; @blur=&quot;hiddenInput&quot; ref=&#x27;inputRef&#x27;&gt;</span><br><span class="line">        &lt;button v-else @click=&quot;show&quot;&gt;SHOW INPUT&lt;/button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;App&quot;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      inputVisible: false</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    show()&#123;</span><br><span class="line">      this.inputRef = true;</span><br><span class="line">      // this.$refs.inputRef.focus();  // 这种写法是错误的因为上句代码执行完毕会改变VM中的数据，触发视图更新，DOM 元素还没有来的及更新（beforeUpdate阶段），便执行到这句代码，此时的inputRef是 undefinde</span><br><span class="line">      </span><br><span class="line">      // 使用 vm.$nextTicket 当页面执行渲染完毕之后再执行callback</span><br><span class="line">      this.$nextTick(function()&#123;</span><br><span class="line">        this.$refs.inputRef.focus()</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    hiddenInput()&#123;</span><br><span class="line">      this.inputVisible = false</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  updated () &#123;</span><br><span class="line">    this.$refs.inputRef.focus() // 也不可以将代码写在 updated 函数中（可以实现），当input失去焦点的时候 input 隐藏，数据又发生改变，又将执行 updated 函数中的代码，导致 inputRef 为 undefind</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HaloBoys/PicGoMyDevice/main/img/202111061944984.png" alt="20220510181702"></p><h1 id="动态组件"><a href="#动态组件" class="headerlink" title="动态组件"></a>动态组件</h1><blockquote><p>动态组件使用 <component is= '组件名称'></component> 标签来进行组件占位，通过<strong>is</strong> 属性控制组件的是否展示</p></blockquote><h2 id="keep-alive"><a href="#keep-alive" class="headerlink" title="keep-alive"></a>keep-alive</h2><blockquote><p>使用 keep-alive 标签包裹组件可以维持组件的状态，避免组件在切换过程中被销毁</p></blockquote><h3 id="keep-alive-生命周期函数"><a href="#keep-alive-生命周期函数" class="headerlink" title="keep-alive 生命周期函数"></a>keep-alive 生命周期函数</h3><ul><li>当组件被缓存的时候，会自动触发组件的 <strong>deactivated</strong> 生命周期函数</li><li>当组件被激活的时候，会自动触发组件的 <strong>activated</strong> 生命周期函数</li></ul><h3 id="keep-alive-属性-include-amp-exclude"><a href="#keep-alive-属性-include-amp-exclude" class="headerlink" title="keep-alive 属性 include &amp; exclude"></a>keep-alive 属性 include &amp; exclude</h3><blockquote><p>默认被 keep-alive 标签包裹的组件都会被缓存，可以使用 <strong>include</strong> &amp; <strong>exclude</strong>  属性来有条件地缓存组件，多个组件之间用 <strong>英文逗号</strong> 分隔也可用正则表达式或一个数组来表示<br><strong>include 与 exclude 不可同时使用</strong></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;keep-alive include/exclude = &#x27;cpnName1,cpnName2&#x27;&gt;</span><br><span class="line">    //...</span><br><span class="line">&lt;/keep-alive&gt;</span><br></pre></td></tr></table></figure><h1 id="组件-name-属性"><a href="#组件-name-属性" class="headerlink" title="组件 name 属性"></a>组件 name 属性</h1><blockquote><p>当组件设置了 name 属性之后，组件的名称（并非注册名称）就是 name 属性的值</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export default &#123;</span><br><span class="line">name: &#x27;xxx&#x27;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Slot-插槽"><a href="#Slot-插槽" class="headerlink" title="Slot 插槽"></a>Slot 插槽</h1><blockquote><p>当封装一个组件，不确定某个区域未来会被填充什么内容的时候，可以使用 slot 插槽来占位，每一个 slot 插槽都要有一个 name 属性，如果省略了 slot 的 name 属性，则会有一个默认的名称 ：name: default，在父组件中填充的内容默认会被放到这个插槽下</p></blockquote><h2 id="V-Slot"><a href="#V-Slot" class="headerlink" title="V-Slot"></a>V-Slot</h2><blockquote><p>在封装组件的时候，如果指定了 slot 的 name 属性，则在父组件中插入元素的时候使用 <template v-slot: name ></template> 的方式来使用插槽</p></blockquote><ul><li>注意 v-slot 属性<strong>不能直接用在标签上</strong></li><li>v-slot：<strong>简写</strong>形式是 #</li><li>如果希望插槽有<strong>默认内容</strong>，可以在  <slot>//…default…</slot>   标签中填写默认内容,使用插槽的时候默认内容将会被替换</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;template v-slot: name&gt;</span><br><span class="line">//...</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">// 简写</span><br><span class="line">&lt;template #name&gt;</span><br><span class="line">//...</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h2 id="作用域插槽"><a href="#作用域插槽" class="headerlink" title="作用域插槽"></a>作用域插槽</h2><blockquote><p>在封装组件时，为预留的 slot 提供属性与对应的值，父组件中通过 v-slot:name = “属性” 的方式接收组件中的值，slot 不提供属性与对应的值默认是一个对象 {}</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 父组件</span><br><span class="line">&lt;template v-slot: name = &quot;scope&quot;&gt;</span><br><span class="line">//...</span><br><span class="line">父组件中可以使用 scope.xxx的方式接收对应的值</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">// 子组件</span><br><span class="line">&lt;slot name= &quot;name&quot; scope= &quot;xxx&quot;&gt;&lt;/slot&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>接受成长08</title>
      <link href="/2021/08/19%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%94_%E5%B0%8F%E9%BB%84_%E6%8E%A5%E5%8F%97%E6%88%90%E9%95%BF08/94a71e9c/"/>
      <url>/2021/08/19%E9%9A%8F%E7%AC%94/%E9%9A%8F%E7%AC%94_%E5%B0%8F%E9%BB%84_%E6%8E%A5%E5%8F%97%E6%88%90%E9%95%BF08/94a71e9c/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, this password doesn't look right. Please try again." data-whm="Sorry, this article cannot be verified, but you can still see the decrypted content.">  <script id="hbeData" type="hbeData" data-hmacdigest="61d66dc37b2266c411366f97406b233458a75a31eb1a9f11dac4bb8bd7bdf1f1">176af5f71c6ac5419ca35683f9a93d1dcd2899269e20d9804e62c5de4432615a4d1e8ad54b4a8a3b8518df1b3c97e83b1d09bd57f98836696a5ddf06e80824d83ad0f1a6741808ad9acd301b80c53552db2cf45d5f2bbe6448d80c51bc42e63574c025807b9d89b89e7d2cb9d043b9380f1f910f47fdca33f71e7016f676181c823ed79fea53e6921bcacc9ccaf9d69e25db9b539274a1502ac68e22661536a0dc783b427bc3ce5d69f0b47eebcac55a60ccd25ca429a25bfaae50acc92b28dd28f1e84ccb84f285d0183abb6aa38effdd7588c3067bb03bebc71df1a7efc70120982825fc83dcef4abbdb2d518d6e861635012730bfeb88fa4e61813c6470e1cf087fa07b654f7d33d80cb02bd22c6ba6d84d043c16e78922cfafbc208ec26f87aa86e5987c08ab79ade5b8b8f2c03baccacb4569041862391807b97d3793cf315b8dbfcfac7813e42e50d23703fdb3bcd08e3c29256362da57dccc92093d0979b046089e867c25bd63a38fde13578882c8f585625d07655480e28970ceb098a635f3c1130aada69632ff0831b5ccd67ca14b3c76f611c9f41dfaa36f4ab5ab4ca0bc34761fdb9a3296735cbd0aeebd4c7ffd5a2902a3714653efe4bec87249e63d466bf0ae5460fc921667a66494a136503c21e058f63ab05bf50b1d2a1efced11f7ecc56d884dfcc0b6fe1ddd3ad9b54a44b1a589ca3f93bb108f7096d046be545cf04d53a296789d2f06914178b376ddc0b2adb3cfc6b1124558c71f0db54a6d80a9f9b733bec2f62f69b06232dd02a2f713663c56622d7b7df9f163220257df83b7e30b21f4d0a7cd6ba11e95698b309b59ecb426aa41e75c45c026180a702bfac6ddbae851315f4f3a223c2166c6aee191462cb0f4119c585c8469408273d07aef1b8a9378cc4c5fd171c4071eadcf63c6f6a6338495b1b19473e511a9059409162243a6032005bbb7121f7dfb354d2542571b5ec5baa0955b9fdcb9b75244bb4f3139513781e4c820d6a8a07110c471d36057a701795484d6de84d7a74bb4b92019e5f6596cfa18488f8cdf2d17aa6440fc7979c2300bac62dec6cc128343c073313bb4a7dfc0b05235324775380ed782ca0de14a1fb66db96e25c7e08dfe2bd5e77b5cb92043ef8eb1e90f86c089e01c862c1bc4efb9a7203ff8e6c6e58b22ac1c46b26e2f29ecbc080355c32c58f95ae565f7213b8244fe6170ad04618e8c020e562999ed8f2108d567dd53f24db38c7e2bbd81118aad508afaaa5a0cb4f25a79a858bdc0a540a92044667ae0c189ba15692137c183d62fb9ccd06f2150a95d047462c76aa82ae73003c37b5d78ce16800fbf38cd0e66fbadf30da3debd3128483627c870cbce653d4a99b4b25487895d95035c6441ab86e1dd89a514c3187615d0b111355c5dfeddd43058ffbd402caae0d5954643e7ca470a3d1a966ab53e0c51e776d9a870b4a833167fb4409836fa3acd9d0c6e4c0b722bf8c713b7057a1dde35261a50220a94d5ab5155ac4857fd25789f68cc657cd33198e8086a89e87d07e8271a4aa6135a046f159d2f6599bb27195d2fe788a7a43c32c713498e5e62f733ce26aa99fa54500b2a0b3d1d79f7eb41dbcc38ebf99ef644bf2ea7ac28f247bafeefac5fd6abcd12a0d13f527e7dffa9f436e53e224fb24933af9898766c3a62e477a8fbd807b140452f8a484eabfcab46fbfc0cc615ba6cb6fcd9e60e4df0bff8f5aa2ccbf00bb037af7e31099d9d2f2f2fb567c3bdeaf62408f6ba1eaf809457a9b45db8654e951709d81884e43b70ce0f426c7b1ad6c9020076a58f0049f6ac6fe395fd95dd22ee14d35d4307da92277196c38398eada9ec69edd6a0e6fa4566d60f0b4f4d2bbb24d62c4bcf35e01c0c051ace84245dba7be073d7484389e0925cfe8e8ceb2a59901c53a266c14f9dba94d6fff9140f3ba032e120d2bbf28f742dec56619a908b65616b21bbeddad96146caa23232848ce6e05020f09b8bf983326630f5c3437b02b7f03a3797e716dcc251be86382c1f71e2660e39a3aecc97ad989834b06d47bc81dcba6ab55cf78b8e726468d75d3e07855f2cd045228fdf42457fa9292abff36087d13ba5737adc74b9731e75baa48d78a82bfd919a8dece7f21b06d20377631c7cf2b25271365b90eac0ac83873313dcf8d5a846266910bf5925c7208728d10309d7c7b34e9567f6c4f84d1dcfae58b63e478f25995917c2c4f14b122906ef93cd8a85e84244d4e12898dc4c181aeb92c566015cf0add83ed8dd763423b8933a4400a5044fc4103ec6fe8a637ec9b20e536dc97987c0b081afaf8a9bfb2f3e35e36c1fc41ce87b759559d29fcb3f211c58b8590d2d0b87dbd9114e6bc0938aaf2ec72723cc39c8492593652942f16ca83a15aa3d762f33f9949f76ddf85cea93404cc2e29b3a32a436f19812445893a27b8e00492dc2c5f2f31d1d05472eaff2c817d4dc2daedcb325d0811dccdafc40b700ab2b3e9cff5e86754018f64675377a23e568f707d71c61720c2a288355431cf724c8124af29bec961a0ed92b382a8aa47c02c65242a35680b4e9c77390917e995c9e7fa35f04c722d28f98577e76b64293e64fd1383a003e29e1ccbd91d39ca0d5b74401bd2885dd2bc176694dd0a57f46bbdb26e5864717da32a74845b798a8b1e367a2e33637d64daedbb722b213101ed136ccf26db4b752829d1a0944821aaa70ea301210191f460e9098e98a9f03b5fc3e0e871da61641d8c8592b03a2bc77d2f6bac2778545560ceedbbd3e57162232b854e445383cf8c36b33e04da6fb44670dd195e8586772fb190f683d791d0a4e0a80265155b1ecd178a6eb2e16105a61c51857a11d0b3cd38a27c6b67be7945e1cc591a3e0d8ca60ba408aad5e82b54ddabce4ff5aca60a361e1bdf5f1eb35574e6ab1af06feb3664ce57947dae155dcda6fd1fdeffca8a38556d4f160d22c9cc25e7e541025e1913dc0a595512ff54989684f5a47d65585973ddb760d07ab6d666a3f10f976dfee1661e6b92c7b215d7328901f9740ff7d4d892f675aaf244fb315e3548a778d7af165e378f53d14dd8ab63532ea713dc01c09a5a1f12851064aac68ff6a0bec67d893288bb533cdfd7d8a7d5f306a53db659d996d0555c33d5ac687eee9f6c16af58c40c91047c9ef3ab46e50dbe128142e406008877ad1451588b71b7f538828b5deea170a528f2969d28f9cb1ca2aaee01a109ab5d113ac2cee7801356eee36afca53d0370f00bf15c814dbc1497a4fa802ffcadef9bd15423ee340e14179595a36083f24c9d22c53666329b9b08e9e9f6d908e7d9cbc44c0a1828009c798824c662ebebf1a5f697b5219352221af3148801a5625edd06b3cc1ca6590485aa158ab37fc1825e50bdcc0608abe813984f47b8f9794e5f1481c780f6875b29a775339a5ba66e5bd62868ecf35cdc4a10e32f27f11155f7fd84f5440e1fec3ee9ab62943c870d1441876b4f2841eed047dfb926e3157177ad72a6ae770aebe486742dee7dddc7351b4a5edf48758d7ff8af6f5bb0f20197f329817f92a6d454b4450bba5a3a28c401bd40044aaf1e053f517d2e8467dd46743434a405da488632409646d7f87947e2c22e432a3bd4581be14fff2e736362b317ae7240636599bd6952cb32ea76fb95726f13f5e10c85dd5a98bec69c00eac66cfaec31acb263a6fb48981e42ee78d32f346fa5d239ff3c2332e4924e57ff8847435e83975a37d4591ac39081c3ef013261d5a70fd2f0daac7ccff764193ee47533c1199d45d6508ac47b3fe7dbe08eae39fd627e94398be9b59eb24dbae01ce81b1eadc58fa90b1bc36ae671693a6bd8456f1c4732c0c18a104c5990d2acc52a03ee60d205c7f5f338593c1d98818bb267c15886dd9aca8ddd7313215203aa563e26498015be18d8323089b7fc3682791e6f6cbafa590fb153299674471b9df2a5ae668693c607c43d2bfadaf29ea441389dc37ac98ac1182401774ae4bcdede4afa9c9464e682701ba4091266fe5cf40e89070d5649c39052fed67fe4864432786f75dce80210b89f5aa37ba1564aae137def324e460c4a58d0445b1fb110dc6f72061762c690054af8b159ff458dc02e32e2c98f180eaa082a4bd2deaddd02e4f3f8d28c45183f62d1321daf70051b55d577d29f25cc076e8fad24fe5f3fabaea152b6ba1ee0612196cd7bc7934fcf021760b2d601e4fa1c50bbb931546661e403fcb351c0c92292d78d0f096dbaaaee2bc7a7762ba1900f8824043eb565ab172608b1e067b35b1c962085f57b050a1222c0fd17ca8d5b4bea121f22a64fbd9288ef7f86b005c74fd63e531af8495be20c3140e448e372e411c258fec2a09cf8f370b540d4312db7bd858c1fb6180f03d9d1c234802ca1292f23a07cf398e182918b73736669c20c61739f745b99a829a49d2711dc4d3ca645c6bc47d4252e4ccd9a07729168ee0afaee2dcdd1fd212cb534b7b9ceb4af7fd2e4f4e675a6775f7504e104ff6530f358be06de3d9f9b12e1863dbb2ab269ad192bdebc89f397ff0d2961d1039f9b84ec295716b2a14687d48cc0c38d8bce56c522a43a9eec72e4d407047cba5967ffaa945339e687dd49ae45d34d9c8954aa71b193d617db7bb4e01ff68debc3ec8aa6255efa98db20409ac1e6f83f049095b9ecec2d840b24c722bf3c1d8f9bdb3752b7a54b5532bfed870941530cd817a01ad79c4edb3f271b00271a0676b94a0633905454eed3002086e33203cc8c7262adab491d0630ffc7eb7bcefb26a5dc136611d0053fc30780b56e69e83b9b94ec83f7ae44c64911dcd20092448262c037d725491ab8ba25cb57b84873b054133759e3f4286c7a41020f7c8ff7dfba84abac7cd64daff7a2d3095940103764f00bab43126afad4fc8e15aad47af433e6e85ad14d3ef3d4eaad69acb0a12c1d9a88f3a2b06f0ccd97dc71274a5bc2bea860ac0ddf1b66a6a116c08b385fdaaa94f4826b53168ed63058b12d485d5f2ce8abf2989ed0f300c3ca70481d6eed5881c0281f51a59e93fbb9f25dfaa68a822123dde87270ccf0ce80a1af2399cee13627ec1a0105c49787f76ee5e4b40be90bd89cb17815eb27d97fec004aea989135b39b938fee8519471f01430052b70e396d1fe714e18c30e4621ba25065510ada7b0daee6a0bdac31241312d0ae562eabd10395753ebff562f926bc9828b2b06055435d9cfd29fd39b5e0dd0388b09321687ead9781ee889c23c09fb5b3beff8f13070f5186e2a179286221a1c209dcdee45e79488eac21394e3d2dff61ef6b1a4173e408c1a413142129f8b3dda2e32392a797dc93c2fdcf5485a4ec00bc3a364bf2f83acbf3e68b9122c0d92f201d2bb4cd6390a1f82ec1b819aab5adadd82adff8</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-surge">      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="Enter Password.">Enter Password.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
          <category> Diary </category>
          
          <category> 小黄 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
